Optimize "pop alu" followed by "push alu"  -- done

Avoid flush_vstack when arg is 0

  flush_vstack() ;
  NUM_ARG = 0 ;
  JD_sf_get_cycle() ; /* calling leaf function */


Avoid flush_vstack when call system function

Avoid flush_vstack when sequence of lvar

Optimize (pre allocate)
  18.689 10.250 8.190
  18.632  9.750 8.670
  18.674  9.540 8.800
  18.681  9.660 8.770
  18.665  9.680 8.750
  
Inline + Pre Allocate -O1

Inline + Pre Allocate -O2

Inline + Pre Allocate -O3
  12.737 6.240 6.340
  12.709 6.330 6.240
  12.685 6.180 6.320
  12.829 6.170 6.500
  12.877 6.200 6.500

-O3 NO location
  12.755 6.000 6.550
  12.725 5.900 6.660
  12.724 6.040 6.470
  12.707 5.940 6.590
  12.717 5.780 6.790
  
-O3 Inline location
  12.877 5.810 6.870
  12.812 5.950 6.690
  12.752 6.180 6.450
  12.785 6.040 6.590
  12.768 6.210 6.400

-O4 push_acc, pop_acc
  13.531 6.560 6.610
  13.359 6.400 6.710
  13.685 6.800 6.670
  13.951 6.540 7.210
  
-O4 ( flushv, drive_m, )
  13.754 6.250 6.930
  13.272 6.070 7.020
  13.252 6.250 6.820
  13.575 5.950 7.440
  13.152 6.430 6.560
  
-O3 gcc -O3
  13.384 6.150 7.060
  13.096 5.620 7.340
  13.108 5.780 7.170
  13.158 6.020 6.930
  12.933 5.950 6.820
  13.092 5.920 6.940

  No load
  12.621 6.080 6.390
  12.663 6.140 6.410
  12.634 6.040 6.450
  12.499 5.940 6.360
  12.622 6.190 6.270
  
-O4 
  13.345 5.910 7.210
  13.198 5.830 7.190
  13.267 5.970 7.150
  13.363 6.290 6.880
  13.326 6.090 7.070

  No load
  13.366 6.310 6.910
  12.839 6.240 6.400
  12.953 6.430 6.380
  12.722 6.020 6.560
  12.992 6.040 6.780
  
-O4 No-recursive call, No load
  12.967 6.190 6.520
  12.914 5.930 6.770
  12.792 6.030 6.540
  12.815 5.950 6.660
  12.961 6.100 6.710
  
-O4 No-recursive call, No load, large initial stack size
  12.747 5.850 6.730
  12.784 6.210 6.340
  12.761 6.270 6.340
  12.758 6.100 6.450
  12.816 6.080 6.540
  12.886 6.190 6.490
  
3.0.0
  19.654 10.280 8.990
  19.266 10.060 8.900
  19.232 10.170 8.840
  19.333 10.310 8.800
  19.211 10.580 8.400


Inline for
  JD_flush_vstack
  
JD_exec_alloc_func() = 31
JD_exec_concat_bit_int() = 112
JD_exec_copy_arg_single_bit() = 104
JD_exec_copy_arg_single_int() = 34
JD_exec_copy_arg_single_obj() = 52
JD_exec_exec() = 105
JD_exec_exit() = 101
JD_exec_fork() = 86
JD_exec_gen_m_frame() = 48
JD_exec_get_subbit() = 59
JD_exec_int_to_bit() = 114
JD_exec_knife() = 76
JD_exec_loadl_single() = 722
JD_exec_loadm_single() = 772
JD_exec_lvar_single_bit() = 189
JD_exec_lvar_single_int() = 57
JD_exec_lvar_single_obj() = 102
JD_exec_pop_n() = 268
JD_exec_pop_this() = 43
JD_exec_store_sig_m() = 124
JD_exec_storel_single_bit() = 101
JD_exec_storel_single_int() = 54
JD_exec_storel_single_obj() = 54
JD_exec_sync_clk_of_signal() = 97
JD_exec_sync_signal() = 63
JD_pop_acc() = 91
JD_push_acc() = 1760
JD_sc_event_mf_sync() = 36
JD_sc_semaphore_mf_get() = 32
JD_sc_semaphore_mf_put() = 32
JD_sf_get_cycle() = 39
JD_sf_printf() = 61
JD_sf_urandom() = 160



From atsushi@juniper.net Mon Apr  1 13:03 PST 2002
Date: Mon, 1 Apr 2002 13:03:25 -0800 (PST)
From: Atsushi Kasuya <atsushi@juniper.net>
To: atsushi@juniper.net
Subject: Jeda performance
Content-Length: 1278
Content-Type: text
X-Lines: 65
Status: RO

out_of_order_reply

vera vcs 1.43u 0.14s 0:02.10 74.7%
24.45u 0.26s 0:26.69 92.5%

jeda vcs 1.24u 0.13s 0:01.53 89.5%
44.00u 9.46s 0:57.27 93.3%

with new data stack
28.49u 8.74s 0:40.75 91.3%

with stack tune.
28.85u 8.54s 0:39.23 95.3%

vera verilog 1.50u 0.16s 0:01.87 88.7%
jeda verilog 1.89u 0.20s 0:02.26 92.4%



measurement with gen report

250, 16384, 4096
gen1 = 30
30.67u 8.85s 0:41.33 95.6%

100, 16384, 4096
gen0: 15842 gen1: 33304 free: 0
gen0: 540 gen1: 33312 free: 15294
30.19u 8.48s 0:39.38 98.1%

100, 4096, 1024
gen0: 3196 gen1: 33650 free: 0
gen0: 203 gen1: 33650 free: 2993
43.91u 9.33s 0:55.27 96.3%

200, 16384, 1024
gen0: 49116 gen1: 30 free: 0
gen0: 33822 gen1: 30 free: 15294
29.94u 8.56s 0:39.60 97.2%

100, 16384, 1024
gen0: 15842 gen1: 33304 free: 0
gen0: 540 gen1: 33312 free: 15294
29.69u 8.43s 0:39.03 97.6%

150
gen0: 16059 gen1: 33087 free: 0
gen0: 765 gen1: 33087 free: 15294
30.32u 8.29s 0:39.84 96.9%

180
gen0: 16187 gen1: 32959 free: 0
gen0: 893 gen1: 32959 free: 15294
30.69u 8.12s 0:40.47 95.8%

190 no inc in Vstack
gen0: 16310 gen1: 32836 free: 0
gen0: 933 gen1: 32919 free: 15294
30.08u 8.95s 0:39.68 98.3%

100 16384 1024 no inc in vstack
gen0: 15843 gen1: 33303 free: 0
gen0: 541 gen1: 33311 free: 15294
29.62u 8.67s 0:39.28 97.4%


