

Terminals which are not used:

   VI_initial_init
   VI_member_signal



Grammar
rule 1    object_files -> virtual_code
rule 2    object_files -> object_files virtual_code
rule 3    virtual_code -> inital_header vinst_units
rule 4    inital_header -> VI_jedacmp Decimal_num Decimal_num EOL
rule 5    vinst_units -> vinst_unit
rule 6    vinst_units -> vinst_units vinst_unit
rule 7    vinst_unit -> empty_line
rule 8    vinst_unit -> debug_information
rule 9    vinst_unit -> port_info
rule 10   vinst_unit -> portset_info
rule 11   vinst_unit -> connection_info
rule 12   vinst_unit -> variable_dcl
rule 13   vinst_unit -> enum_dcl
rule 14   vinst_unit -> function_info
rule 15   vinst_unit -> class_info
rule 16   vinst_unit -> aspect_info
rule 17   vinst_unit -> verilog_task_info
rule 18   vinst_unit -> static_var_dcl
rule 19   vinst_unit -> static_init_code
rule 20   vinst_unit -> init_code
rule 21   vinst_unit -> class_init_code
rule 22   vinst_unit -> class_alloc_code
rule 23   vinst_unit -> afunc_code
rule 24   vinst_unit -> advice_code
rule 25   vinst_unit -> mfunc_code
rule 26   vinst_unit -> func_code
rule 27   empty_line -> EOL
rule 28   debug_information -> DebugInfo EOL
rule 29   port_info -> VI_port direction '[' Decimal_num ':' Decimal_num ']' name opt_port_attrib EOL
rule 30   direction -> VI_input
rule 31   direction -> VI_output
rule 32   direction -> VI_inout
rule 33   opt_port_attrib ->		/* empty */
rule 34   opt_port_attrib -> port_attribs
rule 35   port_attribs -> port_attrib
rule 36   port_attribs -> port_attribs port_attrib
rule 37   port_attrib -> VI_sample edge VI_skew int_value
rule 38   port_attrib -> VI_drive edge VI_skew int_value
rule 39   port_attrib -> VI_depth Decimal_num
rule 40   port_attrib -> VI_path String_lit
rule 41   port_attrib -> '@' name
rule 42   port_attrib -> '@' name '.' name
rule 43   int_value -> Decimal_num
rule 44   int_value -> '-' Decimal_num
rule 45   portset_info -> VI_portset name '{' EOL port_infos '}' EOL
rule 46   port_infos -> port_info
rule 47   port_infos -> port_infos port_info
rule 48   connection_info -> VI_connection VI_port name '=' String_lit EOL
rule 49   connection_info -> VI_connection VI_portset name name '=' String_lit EOL
rule 50   variable_dcl -> VI_variable Decimal_num data_type name array_range opt_var_attribs EOL
rule 51   data_type -> VI_void
rule 52   data_type -> VI_int
rule 53   data_type -> VI_long
rule 54   data_type -> VI_float
rule 55   data_type -> VI_double
rule 56   data_type -> VI_bit '[' Decimal_num ':' Decimal_num ']'
rule 57   data_type -> VI_class name
rule 58   data_type -> VI_sys_class name
rule 59   data_type -> VI_string
rule 60   data_type -> VI_signal
rule 61   data_type -> VI_class_type
rule 62   data_type -> VI_enum name
rule 63   array_range -> VI_single
rule 64   array_range -> VI_array Decimal_num
rule 65   array_range -> VI_marray Decimal_num '(' range_list ')'
rule 66   array_range -> VI_stridx
rule 67   array_range -> VI_assoc
rule 68   array_range -> VI_list
rule 69   range_list -> Decimal_num
rule 70   range_list -> range_list Decimal_num
rule 71   opt_var_attribs ->		/* empty */
rule 72   opt_var_attribs -> var_attribs
rule 73   var_attribs -> var_attrib
rule 74   var_attribs -> var_attribs var_attrib
rule 75   var_attrib -> VI_static
rule 76   var_attrib -> VI_clone
rule 77   var_attrib -> VI_extern
rule 78   var_attrib -> VI_local
rule 79   var_attrib -> VI_global
rule 80   var_attrib -> VI_protected
rule 81   var_attrib -> VI_final
rule 82   enum_dcl -> VI_enum name enum_members EOL
rule 83   enum_members -> name
rule 84   enum_members -> enum_members name
rule 85   function_info -> VI_function Decimal_num opt_func_options data_type name Decimal_num String_lit '(' EOL opt_arguments ')' EOL
rule 86   opt_func_options ->		/* empty */
rule 87   opt_func_options -> func_options
rule 88   func_options -> func_option
rule 89   func_options -> func_options func_option
rule 90   func_option -> VI_abstract
rule 91   func_option -> VI_local
rule 92   func_option -> VI_protected
rule 93   func_option -> VI_final
rule 94   func_option -> VI_export
rule 95   func_option -> VI_leaf
rule 96   func_option -> VI_overwrite
rule 97   func_option -> VI_extern
rule 98   opt_arguments ->		/* empty */
rule 99   opt_arguments -> arguments
rule 100  arguments -> argument
rule 101  arguments -> arguments argument
rule 102  argument -> opt_var data_type name array_range EOL
rule 103  argument -> VI_formal data_type EOL
rule 104  argument -> '(' EOL argument ')' '*' EOL
rule 105  argument -> '?' EOL
rule 106  argument -> '(' EOL argument ')' '+' EOL
rule 107  argument -> '[' EOL argument ']' EOL
rule 108  opt_var ->		/* empty */
rule 109  opt_var -> VI_var
rule 110  pointcuts -> pointcut
rule 111  pointcuts -> pointcuts pointcut
rule 112  pointcut -> VI_call '(' pointcut_names ')' EOL
rule 113  pointcut -> VI_return '(' pointcut_names ')' EOL
rule 114  pointcut -> VI_overwrite '(' pointcut_names ')' EOL
rule 115  pointcut_names -> pointcut_name
rule 116  pointcut_names -> pointcut_names pointcut_name
rule 117  pointcut_name -> name
rule 118  pointcut_name -> String_lit
rule 119  advice_info -> VI_advice Decimal_num opt_func_options data_type name Decimal_num String_lit EOL pointcuts '(' EOL opt_arguments ')' EOL
rule 120  @1 ->		/* empty */
rule 121  class_info -> VI_class name opt_extention opt_class_attribs Decimal_num String_lit '{' EOL @1 opt_class_members '}' EOL
rule 122  @2 ->		/* empty */
rule 123  aspect_info -> VI_aspect name Decimal_num String_lit '{' EOL @2 opt_aspect_members '}' EOL
rule 124  verilog_task_info -> VI_verilog_task Name '(' EOL opt_arguments ')' String_lit EOL
rule 125  opt_extention ->		/* empty */
rule 126  opt_extention -> VI_extends name
rule 127  opt_class_attribs ->		/* empty */
rule 128  opt_class_attribs -> class_attribs
rule 129  class_attribs -> class_attrib
rule 130  class_attribs -> class_attribs class_attrib
rule 131  class_attrib -> VI_abstract
rule 132  class_attrib -> VI_local
rule 133  class_attrib -> VI_final
rule 134  class_attrib -> VI_extern
rule 135  opt_class_members ->		/* empty */
rule 136  opt_class_members -> class_members
rule 137  class_members -> class_member
rule 138  class_members -> class_members class_member
rule 139  class_member -> variable_dcl
rule 140  class_member -> function_info
rule 141  opt_aspect_members ->		/* empty */
rule 142  opt_aspect_members -> aspect_members
rule 143  aspect_members -> aspect_member
rule 144  aspect_members -> aspect_members aspect_member
rule 145  aspect_member -> variable_dcl
rule 146  aspect_member -> function_info
rule 147  aspect_member -> advice_info
rule 148  static_var_dcl -> VI_stat_var name name data_type name array_range opt_var_attribs EOL
rule 149  static_init_code -> VI_static_init EOL opt_vinsts VI_static_init_end EOL
rule 150  init_code -> VI_initial_begin EOL opt_vinsts VI_initial_end EOL
rule 151  class_init_code -> VI_class_initial_begin name EOL opt_vinsts VI_class_initial_end EOL
rule 152  class_alloc_code -> VI_class_alloc name EOL opt_vinsts VI_class_alloc_end EOL
rule 153  mfunc_code -> VI_mfunc name name EOL opt_vinsts VI_func_end EOL
rule 154  func_code -> VI_func name EOL opt_vinsts VI_func_end EOL
rule 155  afunc_code -> VI_afunc name name EOL opt_vinsts VI_func_end EOL
rule 156  advice_code -> VI_advice name name EOL opt_vinsts VI_advice_end EOL
rule 157  opt_vinsts ->		/* empty */
rule 158  opt_vinsts -> vinsts
rule 159  vinsts -> vinst
rule 160  vinsts -> vinsts vinst
rule 161  vinst -> enum_dcl
rule 162  vinst -> empty_line
rule 163  vinst -> debug_information
rule 164  vinst -> Identifier ':' EOL
rule 165  vinst -> VI_null EOL
rule 166  vinst -> VI_lvar Decimal_num data_type name array_range opt_flags EOL
rule 167  vinst -> VI_lvar VI_static Decimal_num data_type name name name array_range opt_flags EOL
rule 168  vinst -> VI_new EOL
rule 169  @3 ->		/* empty */
rule 170  vinst -> VI_new_obj name EOL @3
rule 171  vinst -> VI_copy_obj EOL
rule 172  vinst -> VI_gen_child EOL
rule 173  vinst -> VI_alloc Decimal_num data_type name array_range opt_flags EOL
rule 174  vinst -> VI_alloc_static name name Decimal_num data_type name array_range opt_flags EOL
rule 175  vinst -> opt_var VI_arg Decimal_num Decimal_num data_type name array_range opt_flags EOL
rule 176  vinst -> VI_void EOL
rule 177  vinst -> VI_to_int EOL
rule 178  vinst -> VI_convert VI_bit Decimal_num Decimal_num stype EOL
rule 179  vinst -> VI_convert VI_string stype EOL
rule 180  vinst -> VI_convert VI_float stype EOL
rule 181  vinst -> VI_inc stype EOL
rule 182  vinst -> VI_dec stype EOL
rule 183  vinst -> VI_minus dtype EOL
rule 184  vinst -> VI_plus dtype EOL
rule 185  vinst -> VI_times dtype EOL
rule 186  vinst -> VI_div dtype EOL
rule 187  vinst -> VI_mod dtype EOL
rule 188  vinst -> VI_and dtype EOL
rule 189  vinst -> VI_or dtype EOL
rule 190  vinst -> VI_eor dtype EOL
rule 191  vinst -> VI_nand dtype EOL
rule 192  vinst -> VI_nor dtype EOL
rule 193  vinst -> VI_neor dtype EOL
rule 194  vinst -> VI_rshift stype EOL
rule 195  vinst -> VI_urshift stype EOL
rule 196  vinst -> VI_lshift stype EOL
rule 197  vinst -> VI_lt dtype EOL
rule 198  vinst -> VI_gt dtype EOL
rule 199  vinst -> VI_eqeq dtype EOL
rule 200  vinst -> VI_le dtype EOL
rule 201  vinst -> VI_ge dtype EOL
rule 202  vinst -> VI_ne dtype EOL
rule 203  vinst -> VI_eqeqeq dtype EOL
rule 204  vinst -> VI_neqeq dtype EOL
rule 205  vinst -> VI_eqQeq dtype EOL
rule 206  vinst -> VI_eqeqQ dtype EOL
rule 207  vinst -> VI_Qeqeq dtype EOL
rule 208  vinst -> VI_Qne dtype EOL
rule 209  vinst -> VI_eqCeq ttype EOL
rule 210  vinst -> VI_cmp dtype EOL
rule 211  vinst -> VI_cmpz dtype EOL
rule 212  vinst -> VI_cmpx dtype EOL
rule 213  vinst -> VI_u_minus stype EOL
rule 214  vinst -> VI_u_tilde stype EOL
rule 215  vinst -> VI_u_not stype EOL
rule 216  vinst -> VI_u_and stype EOL
rule 217  vinst -> VI_u_or stype EOL
rule 218  vinst -> VI_u_eor stype EOL
rule 219  vinst -> VI_u_nand stype EOL
rule 220  vinst -> VI_u_nor stype EOL
rule 221  vinst -> VI_u_neor stype EOL
rule 222  vinst -> VI_load_zero EOL
rule 223  vinst -> VI_load_one EOL
rule 224  vinst -> VI_load_const stype const_data EOL
rule 225  vinst -> VI_load_this opt_var EOL
rule 226  vinst -> VI_load_super opt_var EOL
rule 227  vinst -> VI_load_thread label EOL
rule 228  vinst -> VI_get_this EOL
rule 229  vinst -> VI_get_super opt_var Decimal_num EOL
rule 230  vinst -> VI_get_child opt_var Decimal_num EOL
rule 231  vinst -> VI_concat dtype EOL
rule 232  vinst -> VI_duplicate stype EOL
rule 233  vinst -> VI_list stype Decimal_num EOL
rule 234  vinst -> VI_get_subbit opt_bit_type EOL
rule 235  vinst -> VI_pop Decimal_num EOL
rule 236  vinst -> VI_dup Decimal_num EOL
rule 237  vinst -> VI_pop VI_alu EOL
rule 238  vinst -> VI_push VI_alu EOL
rule 239  vinst -> VI_copy VI_alu Decimal_num EOL
rule 240  vinst -> VI_gen_frame EOL
rule 241  vinst -> VI_gen_m_frame EOL
rule 242  vinst -> VI_gen_a_frame EOL
rule 243  vinst -> VI_pop_this EOL
rule 244  vinst -> VI_jmp label EOL
rule 245  vinst -> VI_jz stype label EOL
rule 246  vinst -> VI_jnz stype label EOL
rule 247  vinst -> VI_return_l EOL
rule 248  vinst -> VI_return EOL
rule 249  vinst -> VI_return_n EOL
rule 250  vinst -> VI_call name Decimal_num EOL
rule 251  vinst -> VI_call_m name name Decimal_num EOL
rule 252  vinst -> VI_call_a name name Decimal_num EOL
rule 253  vinst -> VI_veri_call name Decimal_num EOL
rule 254  vinst -> VI_fork EOL
rule 255  vinst -> VI_exec label EOL
rule 256  vinst -> VI_join EOL
rule 257  vinst -> VI_spoon EOL
rule 258  vinst -> VI_spoon VI_cancel EOL
rule 259  vinst -> VI_knife EOL
rule 260  vinst -> VI_exit EOL
rule 261  vinst -> VI_exit VI_p_and EOL
rule 262  vinst -> VI_exit VI_p_or EOL
rule 263  vinst -> VI_terminate EOL
rule 264  vinst -> VI_breakpoint String_lit EOL
rule 265  vinst -> VI_sync VI_clk_of_pset_port edge name name EOL
rule 266  vinst -> VI_sync VI_clk_of_port edge name EOL
rule 267  vinst -> VI_sync VI_clk_of_signal edge EOL
rule 268  vinst -> VI_sync VI_pset_port edge name name EOL
rule 269  vinst -> VI_sync VI_port edge name EOL
rule 270  vinst -> VI_sync VI_signal edge EOL
rule 271  vinst -> VI_loadl opt_array_access opt_static opt_var Decimal_num EOL
rule 272  vinst -> VI_loadg opt_array_access opt_var name EOL
rule 273  vinst -> VI_loadm opt_array_access opt_static opt_var name name EOL
rule 274  vinst -> VI_load_port name EOL
rule 275  vinst -> VI_load_pset_port name name EOL
rule 276  vinst -> VI_load_port_ptr name EOL
rule 277  vinst -> VI_load_pset_port_ptr name name EOL
rule 278  vinst -> VI_load_port VI_subbit name EOL
rule 279  vinst -> VI_load_pset_port VI_subbit name name EOL
rule 280  vinst -> VI_load_port_ptr VI_subbit name EOL
rule 281  vinst -> VI_load_pset_port_ptr VI_subbit name name EOL
rule 282  vinst -> VI_load_sig_pt EOL
rule 283  vinst -> VI_load_sig_pt VI_subbit EOL
rule 284  vinst -> VI_get_sig_subbit EOL
rule 285  vinst -> VI_load_static opt_array_access name name name EOL
rule 286  vinst -> VI_storel opt_array_access opt_static dtype Decimal_num EOL
rule 287  vinst -> VI_storel opt_array_access opt_static VI_subbit opt_bit_type dtype Decimal_num EOL
rule 288  vinst -> VI_storeg opt_array_access opt_static dtype name EOL
rule 289  vinst -> VI_storeg opt_array_access opt_static VI_subbit opt_bit_type dtype name EOL
rule 290  vinst -> VI_storem opt_array_access opt_static dtype name name EOL
rule 291  vinst -> VI_storem opt_array_access opt_static VI_subbit opt_bit_type dtype name name EOL
rule 292  vinst -> VI_store_port dtype strength name EOL
rule 293  vinst -> VI_store_port VI_subbit opt_bit_type dtype strength name EOL
rule 294  vinst -> VI_store_pset_port dtype strength name name EOL
rule 295  vinst -> VI_store_pset_port VI_subbit opt_bit_type dtype strength name name EOL
rule 296  vinst -> VI_store_sig_l opt_array_access opt_static dtype strength Decimal_num EOL
rule 297  vinst -> VI_store_sig_g opt_array_access opt_static dtype strength name EOL
rule 298  vinst -> VI_store_sig_m opt_array_access opt_static dtype strength name name EOL
rule 299  vinst -> VI_store_sig_l opt_array_access opt_static VI_subbit opt_bit_type dtype strength Decimal_num EOL
rule 300  vinst -> VI_store_sig_g opt_array_access opt_static VI_subbit opt_bit_type dtype strength name EOL
rule 301  vinst -> VI_store_sig_m opt_array_access opt_static VI_subbit opt_bit_type dtype strength name name EOL
rule 302  vinst -> VI_store_static opt_array_access dtype name name name EOL
rule 303  vinst -> VI_store_sig_static opt_array_access dtype strength name name name EOL
rule 304  vinst -> VI_store_static opt_array_access VI_subbit opt_bit_type dtype name name name EOL
rule 305  vinst -> VI_store_sig_static opt_array_access VI_subbit opt_bit_type dtype strength name name name EOL
rule 306  vinst -> VI_store_obj dtype name name EOL
rule 307  vinst -> VI_store_adjust stype EOL
rule 308  vinst -> VI_alloc_func Decimal_num name
rule 309  vinst -> VI_overwrite name name name
rule 310  vinst -> VI_chk_overwrite Decimal_num name
rule 311  vinst -> VI_call_advice pointcut_specs EOL
rule 312  vinst -> VI_return_advice pointcut_specs EOL
rule 313  vinst -> VI_save_acc EOL
rule 314  vinst -> VI_restore_acc EOL
rule 315  vinst -> VI_enter_advice EOL
rule 316  vinst -> VI_get_return EOL
rule 317  vinst -> VI_error
rule 318  pointcut_specs -> pointcut_spec
rule 319  pointcut_specs -> pointcut_specs pointcut_spec
rule 320  pointcut_spec -> name opt_class_pointcut
rule 321  opt_class_pointcut ->		/* empty */
rule 322  opt_class_pointcut -> '(' name ')'
rule 323  stype -> '(' type_code ')'
rule 324  dtype -> '(' type_code ',' type_code ')'
rule 325  ttype -> '(' type_code ',' type_code ',' type_code ')'
rule 326  opt_flags ->		/* empty */
rule 327  opt_flags -> VI_static
rule 328  opt_flags -> VI_clone
rule 329  opt_flags -> VI_static VI_clone
rule 330  opt_flags -> VI_clone VI_static
rule 331  type_code -> VI_string
rule 332  type_code -> VI_void
rule 333  type_code -> VI_null
rule 334  type_code -> VI_int
rule 335  type_code -> VI_bit
rule 336  type_code -> VI_float
rule 337  type_code -> VI_ptset
rule 338  type_code -> VI_signal
rule 339  type_code -> VI_enum
rule 340  type_code -> VI_obj
rule 341  type_code -> VI_array
rule 342  type_code -> VI_marray
rule 343  type_code -> VI_assoc
rule 344  type_code -> VI_stridx
rule 345  type_code -> VI_list
rule 346  const_data -> number
rule 347  const_data -> String_lit
rule 348  const_data -> name name Decimal_num
rule 349  label -> Identifier
rule 350  edge -> VI_posedge
rule 351  edge -> VI_negedge
rule 352  edge -> VI_bothedge
rule 353  edge -> VI_noedge
rule 354  opt_array_access ->		/* empty */
rule 355  opt_array_access -> VI_array Decimal_num
rule 356  opt_array_access -> VI_marray Decimal_num '(' range_list ')'
rule 357  opt_array_access -> VI_stridx
rule 358  opt_array_access -> VI_assoc
rule 359  opt_array_access -> VI_list
rule 360  opt_static ->		/* empty */
rule 361  opt_static -> VI_static
rule 362  opt_bit_type ->		/* empty */
rule 363  opt_bit_type -> VI_i_endian '[' Decimal_num ':' Decimal_num ']'
rule 364  opt_bit_type -> VI_nz_lsb '[' Decimal_num ':' Decimal_num ']'
rule 365  number -> Real_num
rule 366  number -> Decimal_num
rule 367  number -> V_decimal_num
rule 368  number -> C_decimal_num
rule 369  number -> V_hex_num
rule 370  number -> C_hex_num
rule 371  number -> V_octal_num
rule 372  number -> C_octal_num
rule 373  number -> V_bin_num
rule 374  number -> C_bin_num
rule 375  strength -> VI_normal
rule 376  strength -> VI_weak
rule 377  strength -> VI_strong
rule 378  name -> Name

Terminals, with rules where they appear

$ (-1)
'(' (40) 65 85 104 106 112 113 114 119 124 322 323 324 325 356
')' (41) 65 85 104 106 112 113 114 119 124 322 323 324 325 356
'*' (42) 104
'+' (43) 106
',' (44) 324 325
'-' (45) 44
'.' (46) 42
':' (58) 29 56 164 363 364
'=' (61) 48 49
'?' (63) 105
'@' (64) 41 42
'[' (91) 29 56 107 363 364
']' (93) 29 56 107 363 364
'{' (123) 45 121 123
'}' (125) 45 121 123
error (256)
Identifier (257) 164 349
Name (258) 124 378
Real_num (259) 365
Decimal_num (260) 4 29 39 43 44 50 56 64 65 69 70 85 119 121 123 166
    167 173 174 175 178 229 230 233 235 236 239 250 251 252 253 271
    286 287 296 299 308 310 348 355 356 363 364 366
V_decimal_num (261) 367
C_decimal_num (262) 368
V_hex_num (263) 369
C_hex_num (264) 370
V_octal_num (265) 371
C_octal_num (266) 372
V_bin_num (267) 373
C_bin_num (268) 374
String_lit (269) 40 48 49 85 118 119 121 123 124 264 347
DebugInfo (270) 28
EOL (271) 4 27 28 29 45 48 49 50 82 85 102 103 104 105 106 107 112
    113 114 119 121 123 124 148 149 150 151 152 153 154 155 156 164
    165 166 167 168 170 171 172 173 174 175 176 177 178 179 180 181
    182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
    198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213
    214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229
    230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245
    246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261
    262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277
    278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293
    294 295 296 297 298 299 300 301 302 303 304 305 306 307 311 312
    313 314 315 316
VI_Qeqeq (272) 207
VI_abstract (273) 90 131
VI_aspect (274) 123
VI_advice (275) 119 156
VI_advice_end (276) 156
VI_afunc (277) 155
VI_alloc (278) 173
VI_alloc_func (279) 308
VI_alloc_static (280) 174
VI_alu (281) 237 238 239
VI_and (282) 188
VI_arg (283) 175
VI_array (284) 64 341 355
VI_assoc (285) 67 343 358
VI_bit (286) 56 178 335
VI_bothedge (287) 352
VI_breakpoint (288) 264
VI_call (289) 112 250
VI_call_m (290) 251
VI_call_a (291) 252
VI_call_advice (292) 311
VI_cancel (293) 258
VI_chk_overwrite (294) 310
VI_class (295) 57 121
VI_class_alloc (296) 152
VI_class_alloc_end (297) 152
VI_class_initial_begin (298) 151
VI_class_initial_end (299) 151
VI_class_type (300) 61
VI_clk_of_port (301) 266
VI_clk_of_pset_port (302) 265
VI_clk_of_signal (303) 267
VI_clone (304) 76 328 329 330
VI_cmp (305) 210
VI_cmpx (306) 212
VI_cmpz (307) 211
VI_concat (308) 231
VI_connection (309) 48 49
VI_copy (310) 239
VI_copy_obj (311) 171
VI_convert (312) 178 179 180
VI_dec (313) 182
VI_depth (314) 39
VI_div (315) 186
VI_double (316) 55
VI_drive (317) 38
VI_dup (318) 236
VI_duplicate (319) 232
VI_enter_advice (320) 315
VI_enum (321) 62 82 339
VI_eor (322) 190
VI_eqQeq (323) 205
VI_eqeq (324) 199
VI_eqeqQ (325) 206
VI_eqeqeq (326) 203
VI_eqCeq (327) 209
VI_Qne (328) 208
VI_error (329) 317
VI_exec (330) 255
VI_exit (331) 260 261 262
VI_export (332) 94
VI_extends (333) 126
VI_extern (334) 77 97 134
VI_final (335) 81 93 133
VI_float (336) 54 180 336
VI_fork (337) 254
VI_formal (338) 103
VI_func (339) 154
VI_function (340) 85
VI_func_end (341) 153 154 155
VI_ge (342) 201
VI_gen_child (343) 172
VI_gen_frame (344) 240
VI_gen_m_frame (345) 241
VI_gen_a_frame (346) 242
VI_get_this (347) 228
VI_get_sig_subbit (348) 284
VI_get_subbit (349) 234
VI_get_super (350) 229
VI_get_child (351) 230
VI_get_return (352) 316
VI_global (353) 79
VI_gt (354) 198
VI_i_endian (355) 363
VI_inc (356) 181
VI_input (357) 30
VI_inout (358) 32
VI_initial_begin (359) 150
VI_initial_end (360) 150
VI_initial_init (361)
VI_int (362) 52 334
VI_jedacmp (363) 4
VI_jmp (364) 244
VI_jnz (365) 246
VI_join (366) 256
VI_jz (367) 245
VI_knife (368) 259
VI_le (369) 200
VI_leaf (370) 95
VI_list (371) 68 233 345 359
VI_load_const (372) 224
VI_load_one (373) 223
VI_load_port (374) 274 278
VI_load_port_ptr (375) 276 280
VI_load_pset_port (376) 275 279
VI_load_pset_port_ptr (377) 277 281
VI_load_sig_pt (378) 282 283
VI_load_static (379) 285
VI_load_super (380) 226
VI_load_this (381) 225
VI_load_thread (382) 227
VI_load_zero (383) 222
VI_loadg (384) 272
VI_loadl (385) 271
VI_loadm (386) 273
VI_local (387) 78 91 132
VI_long (388) 53
VI_lshift (389) 196
VI_lt (390) 197
VI_lvar (391) 166 167
VI_marray (392) 65 342 356
VI_member_signal (393)
VI_mfunc (394) 153
VI_minus (395) 183
VI_mod (396) 187
VI_nand (397) 191
VI_ne (398) 202
VI_negedge (399) 351
VI_neor (400) 193
VI_neqeq (401) 204
VI_new (402) 168
VI_new_obj (403) 170
VI_noedge (404) 353
VI_nor (405) 192
VI_normal (406) 375
VI_null (407) 165 333
VI_nz_lsb (408) 364
VI_obj (409) 340
VI_or (410) 189
VI_output (411) 31
VI_overwrite (412) 96 114 309
VI_p_and (413) 261
VI_p_or (414) 262
VI_path (415) 40
VI_plus (416) 184
VI_pop (417) 235 237
VI_pop_this (418) 243
VI_port (419) 29 48 269
VI_portset (420) 45 49
VI_posedge (421) 350
VI_protected (422) 80 92
VI_pset_port (423) 268
VI_ptset (424) 337
VI_push (425) 238
VI_restore_acc (426) 314
VI_return (427) 113 248
VI_return_advice (428) 312
VI_return_l (429) 247
VI_return_n (430) 249
VI_rshift (431) 194
VI_sample (432) 37
VI_save_acc (433) 313
VI_signal (434) 60 270 338
VI_single (435) 63
VI_skew (436) 37 38
VI_spoon (437) 257 258
VI_stat_var (438) 148
VI_static (439) 75 167 327 329 330 361
VI_static_init (440) 149
VI_static_init_end (441) 149
VI_store_adjust (442) 307
VI_store_obj (443) 306
VI_store_port (444) 292 293
VI_store_pset_port (445) 294 295
VI_store_sig_g (446) 297 300
VI_store_sig_l (447) 296 299
VI_store_sig_m (448) 298 301
VI_store_sig_static (449) 303 305
VI_store_static (450) 302 304
VI_storeg (451) 288 289
VI_storel (452) 286 287
VI_storem (453) 290 291
VI_stridx (454) 66 344 357
VI_string (455) 59 179 331
VI_strong (456) 377
VI_subbit (457) 278 279 280 281 283 287 289 291 293 295 299 300 301
    304 305
VI_sync (458) 265 266 267 268 269 270
VI_sys_class (459) 58
VI_terminate (460) 263
VI_times (461) 185
VI_to_int (462) 177
VI_u_and (463) 216
VI_u_eor (464) 218
VI_u_minus (465) 213
VI_u_nand (466) 219
VI_u_neor (467) 221
VI_u_nor (468) 220
VI_u_not (469) 215
VI_u_or (470) 217
VI_u_tilde (471) 214
VI_urshift (472) 195
VI_var (473) 109
VI_variable (474) 50
VI_veri_call (475) 253
VI_verilog_task (476) 124
VI_void (477) 51 176 332
VI_weak (478) 376

Nonterminals, with rules where they appear

object_files (240)
    on left: 1 2, on right: 2
virtual_code (241)
    on left: 3, on right: 1 2
inital_header (242)
    on left: 4, on right: 3
vinst_units (243)
    on left: 5 6, on right: 3 6
vinst_unit (244)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26, on right: 5 6
empty_line (245)
    on left: 27, on right: 7 162
debug_information (246)
    on left: 28, on right: 8 163
port_info (247)
    on left: 29, on right: 9 46 47
direction (248)
    on left: 30 31 32, on right: 29
opt_port_attrib (249)
    on left: 33 34, on right: 29
port_attribs (250)
    on left: 35 36, on right: 34 36
port_attrib (251)
    on left: 37 38 39 40 41 42, on right: 35 36
int_value (252)
    on left: 43 44, on right: 37 38
portset_info (253)
    on left: 45, on right: 10
port_infos (254)
    on left: 46 47, on right: 45 47
connection_info (255)
    on left: 48 49, on right: 11
variable_dcl (256)
    on left: 50, on right: 12 139 145
data_type (257)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62, on right: 50 85 102
    103 119 148 166 167 173 174 175
array_range (258)
    on left: 63 64 65 66 67 68, on right: 50 102 148 166 167 173 174
    175
range_list (259)
    on left: 69 70, on right: 65 70 356
opt_var_attribs (260)
    on left: 71 72, on right: 50 148
var_attribs (261)
    on left: 73 74, on right: 72 74
var_attrib (262)
    on left: 75 76 77 78 79 80 81, on right: 73 74
enum_dcl (263)
    on left: 82, on right: 13 161
enum_members (264)
    on left: 83 84, on right: 82 84
function_info (265)
    on left: 85, on right: 14 140 146
opt_func_options (266)
    on left: 86 87, on right: 85 119
func_options (267)
    on left: 88 89, on right: 87 89
func_option (268)
    on left: 90 91 92 93 94 95 96 97, on right: 88 89
opt_arguments (269)
    on left: 98 99, on right: 85 119 124
arguments (270)
    on left: 100 101, on right: 99 101
argument (271)
    on left: 102 103 104 105 106 107, on right: 100 101 104 106 107
opt_var (272)
    on left: 108 109, on right: 102 175 225 226 229 230 271 272 273
pointcuts (273)
    on left: 110 111, on right: 111 119
pointcut (274)
    on left: 112 113 114, on right: 110 111
pointcut_names (275)
    on left: 115 116, on right: 112 113 114 116
pointcut_name (276)
    on left: 117 118, on right: 115 116
advice_info (277)
    on left: 119, on right: 147
class_info (278)
    on left: 121, on right: 15
@1 (279)
    on left: 120, on right: 121
aspect_info (280)
    on left: 123, on right: 16
@2 (281)
    on left: 122, on right: 123
verilog_task_info (282)
    on left: 124, on right: 17
opt_extention (283)
    on left: 125 126, on right: 121
opt_class_attribs (284)
    on left: 127 128, on right: 121
class_attribs (285)
    on left: 129 130, on right: 128 130
class_attrib (286)
    on left: 131 132 133 134, on right: 129 130
opt_class_members (287)
    on left: 135 136, on right: 121
class_members (288)
    on left: 137 138, on right: 136 138
class_member (289)
    on left: 139 140, on right: 137 138
opt_aspect_members (290)
    on left: 141 142, on right: 123
aspect_members (291)
    on left: 143 144, on right: 142 144
aspect_member (292)
    on left: 145 146 147, on right: 143 144
static_var_dcl (293)
    on left: 148, on right: 18
static_init_code (294)
    on left: 149, on right: 19
init_code (295)
    on left: 150, on right: 20
class_init_code (296)
    on left: 151, on right: 21
class_alloc_code (297)
    on left: 152, on right: 22
mfunc_code (298)
    on left: 153, on right: 25
func_code (299)
    on left: 154, on right: 26
afunc_code (300)
    on left: 155, on right: 23
advice_code (301)
    on left: 156, on right: 24
opt_vinsts (302)
    on left: 157 158, on right: 149 150 151 152 153 154 155 156
vinsts (303)
    on left: 159 160, on right: 158 160
vinst (304)
    on left: 161 162 163 164 165 166 167 168 170 171 172 173 174 175
    176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191
    192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207
    208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223
    224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239
    240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255
    256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271
    272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
    288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303
    304 305 306 307 308 309 310 311 312 313 314 315 316 317,
    on right: 159 160
@3 (305)
    on left: 169, on right: 170
pointcut_specs (306)
    on left: 318 319, on right: 311 312 319
pointcut_spec (307)
    on left: 320, on right: 318 319
opt_class_pointcut (308)
    on left: 321 322, on right: 320
stype (309)
    on left: 323, on right: 178 179 180 181 182 194 195 196 213 214
    215 216 217 218 219 220 221 224 232 233 245 246 307
dtype (310)
    on left: 324, on right: 183 184 185 186 187 188 189 190 191 192
    193 197 198 199 200 201 202 203 204 205 206 207 208 210 211 212
    231 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300
    301 302 303 304 305 306
ttype (311)
    on left: 325, on right: 209
opt_flags (312)
    on left: 326 327 328 329 330, on right: 166 167 173 174 175
type_code (313)
    on left: 331 332 333 334 335 336 337 338 339 340 341 342 343 344
    345, on right: 323 324 325
const_data (314)
    on left: 346 347 348, on right: 224
label (315)
    on left: 349, on right: 227 244 245 246 255
edge (316)
    on left: 350 351 352 353, on right: 37 38 265 266 267 268 269 270
opt_array_access (317)
    on left: 354 355 356 357 358 359, on right: 271 272 273 285 286
    287 288 289 290 291 296 297 298 299 300 301 302 303 304 305
opt_static (318)
    on left: 360 361, on right: 271 273 286 287 288 289 290 291 296
    297 298 299 300 301
opt_bit_type (319)
    on left: 362 363 364, on right: 234 287 289 291 293 295 299 300
    301 304 305
number (320)
    on left: 365 366 367 368 369 370 371 372 373 374,
    on right: 346
strength (321)
    on left: 375 376 377, on right: 292 293 294 295 296 297 298 299
    300 301 303 305
name (322)
    on left: 378, on right: 29 41 42 45 48 49 50 57 58 62 82 83 84
    85 102 117 119 121 123 126 148 151 152 153 154 155 156 166 167
    170 173 174 175 250 251 252 253 265 266 268 269 272 273 274 275
    276 277 278 279 280 281 285 288 289 290 291 292 293 294 295 297
    298 300 301 302 303 304 305 306 308 309 310 320 322 348


state 0

    VI_jedacmp	shift, and go to state 1

    object_files	go to state 2
    virtual_code	go to state 3
    inital_header	go to state 4



state 1

    inital_header  ->  VI_jedacmp . Decimal_num Decimal_num EOL   (rule 4)

    Decimal_num	shift, and go to state 5



state 2

    object_files  ->  object_files . virtual_code   (rule 2)

    $   	go to state 996
    VI_jedacmp	shift, and go to state 1

    virtual_code	go to state 6
    inital_header	go to state 4



state 3

    object_files  ->  virtual_code .   (rule 1)

    $default	reduce using rule 1 (object_files)



state 4

    virtual_code  ->  inital_header . vinst_units   (rule 3)

    DebugInfo	shift, and go to state 7
    EOL 	shift, and go to state 8
    VI_aspect	shift, and go to state 9
    VI_advice	shift, and go to state 10
    VI_afunc	shift, and go to state 11
    VI_class	shift, and go to state 12
    VI_class_alloc	shift, and go to state 13
    VI_class_initial_begin	shift, and go to state 14
    VI_connection	shift, and go to state 15
    VI_enum	shift, and go to state 16
    VI_func	shift, and go to state 17
    VI_function	shift, and go to state 18
    VI_initial_begin	shift, and go to state 19
    VI_mfunc	shift, and go to state 20
    VI_port	shift, and go to state 21
    VI_portset	shift, and go to state 22
    VI_stat_var	shift, and go to state 23
    VI_static_init	shift, and go to state 24
    VI_variable	shift, and go to state 25
    VI_verilog_task	shift, and go to state 26

    vinst_units	go to state 27
    vinst_unit	go to state 28
    empty_line	go to state 29
    debug_information	go to state 30
    port_info	go to state 31
    portset_info	go to state 32
    connection_info	go to state 33
    variable_dcl	go to state 34
    enum_dcl	go to state 35
    function_info	go to state 36
    class_info	go to state 37
    aspect_info	go to state 38
    verilog_task_info	go to state 39
    static_var_dcl	go to state 40
    static_init_code	go to state 41
    init_code	go to state 42
    class_init_code	go to state 43
    class_alloc_code	go to state 44
    mfunc_code	go to state 45
    func_code	go to state 46
    afunc_code	go to state 47
    advice_code	go to state 48



state 5

    inital_header  ->  VI_jedacmp Decimal_num . Decimal_num EOL   (rule 4)

    Decimal_num	shift, and go to state 49



state 6

    object_files  ->  object_files virtual_code .   (rule 2)

    $default	reduce using rule 2 (object_files)



state 7

    debug_information  ->  DebugInfo . EOL   (rule 28)

    EOL 	shift, and go to state 50



state 8

    empty_line  ->  EOL .   (rule 27)

    $default	reduce using rule 27 (empty_line)



state 9

    aspect_info  ->  VI_aspect . name Decimal_num String_lit '{' EOL @2 opt_aspect_members '}' EOL   (rule 123)

    Name	shift, and go to state 51

    name	go to state 52



state 10

    advice_code  ->  VI_advice . name name EOL opt_vinsts VI_advice_end EOL   (rule 156)

    Name	shift, and go to state 51

    name	go to state 53



state 11

    afunc_code  ->  VI_afunc . name name EOL opt_vinsts VI_func_end EOL   (rule 155)

    Name	shift, and go to state 51

    name	go to state 54



state 12

    class_info  ->  VI_class . name opt_extention opt_class_attribs Decimal_num String_lit '{' EOL @1 opt_class_members '}' EOL   (rule 121)

    Name	shift, and go to state 51

    name	go to state 55



state 13

    class_alloc_code  ->  VI_class_alloc . name EOL opt_vinsts VI_class_alloc_end EOL   (rule 152)

    Name	shift, and go to state 51

    name	go to state 56



state 14

    class_init_code  ->  VI_class_initial_begin . name EOL opt_vinsts VI_class_initial_end EOL   (rule 151)

    Name	shift, and go to state 51

    name	go to state 57



state 15

    connection_info  ->  VI_connection . VI_port name '=' String_lit EOL   (rule 48)
    connection_info  ->  VI_connection . VI_portset name name '=' String_lit EOL   (rule 49)

    VI_port	shift, and go to state 58
    VI_portset	shift, and go to state 59



state 16

    enum_dcl  ->  VI_enum . name enum_members EOL   (rule 82)

    Name	shift, and go to state 51

    name	go to state 60



state 17

    func_code  ->  VI_func . name EOL opt_vinsts VI_func_end EOL   (rule 154)

    Name	shift, and go to state 51

    name	go to state 61



state 18

    function_info  ->  VI_function . Decimal_num opt_func_options data_type name Decimal_num String_lit '(' EOL opt_arguments ')' EOL   (rule 85)

    Decimal_num	shift, and go to state 62



state 19

    init_code  ->  VI_initial_begin . EOL opt_vinsts VI_initial_end EOL   (rule 150)

    EOL 	shift, and go to state 63



state 20

    mfunc_code  ->  VI_mfunc . name name EOL opt_vinsts VI_func_end EOL   (rule 153)

    Name	shift, and go to state 51

    name	go to state 64



state 21

    port_info  ->  VI_port . direction '[' Decimal_num ':' Decimal_num ']' name opt_port_attrib EOL   (rule 29)

    VI_input	shift, and go to state 65
    VI_inout	shift, and go to state 66
    VI_output	shift, and go to state 67

    direction	go to state 68



state 22

    portset_info  ->  VI_portset . name '{' EOL port_infos '}' EOL   (rule 45)

    Name	shift, and go to state 51

    name	go to state 69



state 23

    static_var_dcl  ->  VI_stat_var . name name data_type name array_range opt_var_attribs EOL   (rule 148)

    Name	shift, and go to state 51

    name	go to state 70



state 24

    static_init_code  ->  VI_static_init . EOL opt_vinsts VI_static_init_end EOL   (rule 149)

    EOL 	shift, and go to state 71



state 25

    variable_dcl  ->  VI_variable . Decimal_num data_type name array_range opt_var_attribs EOL   (rule 50)

    Decimal_num	shift, and go to state 72



state 26

    verilog_task_info  ->  VI_verilog_task . Name '(' EOL opt_arguments ')' String_lit EOL   (rule 124)

    Name	shift, and go to state 73



state 27

    virtual_code  ->  inital_header vinst_units .   (rule 3)
    vinst_units  ->  vinst_units . vinst_unit   (rule 6)

    DebugInfo	shift, and go to state 7
    EOL 	shift, and go to state 8
    VI_aspect	shift, and go to state 9
    VI_advice	shift, and go to state 10
    VI_afunc	shift, and go to state 11
    VI_class	shift, and go to state 12
    VI_class_alloc	shift, and go to state 13
    VI_class_initial_begin	shift, and go to state 14
    VI_connection	shift, and go to state 15
    VI_enum	shift, and go to state 16
    VI_func	shift, and go to state 17
    VI_function	shift, and go to state 18
    VI_initial_begin	shift, and go to state 19
    VI_mfunc	shift, and go to state 20
    VI_port	shift, and go to state 21
    VI_portset	shift, and go to state 22
    VI_stat_var	shift, and go to state 23
    VI_static_init	shift, and go to state 24
    VI_variable	shift, and go to state 25
    VI_verilog_task	shift, and go to state 26

    $default	reduce using rule 3 (virtual_code)

    vinst_unit	go to state 74
    empty_line	go to state 29
    debug_information	go to state 30
    port_info	go to state 31
    portset_info	go to state 32
    connection_info	go to state 33
    variable_dcl	go to state 34
    enum_dcl	go to state 35
    function_info	go to state 36
    class_info	go to state 37
    aspect_info	go to state 38
    verilog_task_info	go to state 39
    static_var_dcl	go to state 40
    static_init_code	go to state 41
    init_code	go to state 42
    class_init_code	go to state 43
    class_alloc_code	go to state 44
    mfunc_code	go to state 45
    func_code	go to state 46
    afunc_code	go to state 47
    advice_code	go to state 48



state 28

    vinst_units  ->  vinst_unit .   (rule 5)

    $default	reduce using rule 5 (vinst_units)



state 29

    vinst_unit  ->  empty_line .   (rule 7)

    $default	reduce using rule 7 (vinst_unit)



state 30

    vinst_unit  ->  debug_information .   (rule 8)

    $default	reduce using rule 8 (vinst_unit)



state 31

    vinst_unit  ->  port_info .   (rule 9)

    $default	reduce using rule 9 (vinst_unit)



state 32

    vinst_unit  ->  portset_info .   (rule 10)

    $default	reduce using rule 10 (vinst_unit)



state 33

    vinst_unit  ->  connection_info .   (rule 11)

    $default	reduce using rule 11 (vinst_unit)



state 34

    vinst_unit  ->  variable_dcl .   (rule 12)

    $default	reduce using rule 12 (vinst_unit)



state 35

    vinst_unit  ->  enum_dcl .   (rule 13)

    $default	reduce using rule 13 (vinst_unit)



state 36

    vinst_unit  ->  function_info .   (rule 14)

    $default	reduce using rule 14 (vinst_unit)



state 37

    vinst_unit  ->  class_info .   (rule 15)

    $default	reduce using rule 15 (vinst_unit)



state 38

    vinst_unit  ->  aspect_info .   (rule 16)

    $default	reduce using rule 16 (vinst_unit)



state 39

    vinst_unit  ->  verilog_task_info .   (rule 17)

    $default	reduce using rule 17 (vinst_unit)



state 40

    vinst_unit  ->  static_var_dcl .   (rule 18)

    $default	reduce using rule 18 (vinst_unit)



state 41

    vinst_unit  ->  static_init_code .   (rule 19)

    $default	reduce using rule 19 (vinst_unit)



state 42

    vinst_unit  ->  init_code .   (rule 20)

    $default	reduce using rule 20 (vinst_unit)



state 43

    vinst_unit  ->  class_init_code .   (rule 21)

    $default	reduce using rule 21 (vinst_unit)



state 44

    vinst_unit  ->  class_alloc_code .   (rule 22)

    $default	reduce using rule 22 (vinst_unit)



state 45

    vinst_unit  ->  mfunc_code .   (rule 25)

    $default	reduce using rule 25 (vinst_unit)



state 46

    vinst_unit  ->  func_code .   (rule 26)

    $default	reduce using rule 26 (vinst_unit)



state 47

    vinst_unit  ->  afunc_code .   (rule 23)

    $default	reduce using rule 23 (vinst_unit)



state 48

    vinst_unit  ->  advice_code .   (rule 24)

    $default	reduce using rule 24 (vinst_unit)



state 49

    inital_header  ->  VI_jedacmp Decimal_num Decimal_num . EOL   (rule 4)

    EOL 	shift, and go to state 75



state 50

    debug_information  ->  DebugInfo EOL .   (rule 28)

    $default	reduce using rule 28 (debug_information)



state 51

    name  ->  Name .   (rule 378)

    $default	reduce using rule 378 (name)



state 52

    aspect_info  ->  VI_aspect name . Decimal_num String_lit '{' EOL @2 opt_aspect_members '}' EOL   (rule 123)

    Decimal_num	shift, and go to state 76



state 53

    advice_code  ->  VI_advice name . name EOL opt_vinsts VI_advice_end EOL   (rule 156)

    Name	shift, and go to state 51

    name	go to state 77



state 54

    afunc_code  ->  VI_afunc name . name EOL opt_vinsts VI_func_end EOL   (rule 155)

    Name	shift, and go to state 51

    name	go to state 78



state 55

    class_info  ->  VI_class name . opt_extention opt_class_attribs Decimal_num String_lit '{' EOL @1 opt_class_members '}' EOL   (rule 121)

    VI_extends	shift, and go to state 79

    $default	reduce using rule 125 (opt_extention)

    opt_extention	go to state 80



state 56

    class_alloc_code  ->  VI_class_alloc name . EOL opt_vinsts VI_class_alloc_end EOL   (rule 152)

    EOL 	shift, and go to state 81



state 57

    class_init_code  ->  VI_class_initial_begin name . EOL opt_vinsts VI_class_initial_end EOL   (rule 151)

    EOL 	shift, and go to state 82



state 58

    connection_info  ->  VI_connection VI_port . name '=' String_lit EOL   (rule 48)

    Name	shift, and go to state 51

    name	go to state 83



state 59

    connection_info  ->  VI_connection VI_portset . name name '=' String_lit EOL   (rule 49)

    Name	shift, and go to state 51

    name	go to state 84



state 60

    enum_dcl  ->  VI_enum name . enum_members EOL   (rule 82)

    Name	shift, and go to state 51

    enum_members	go to state 85
    name	go to state 86



state 61

    func_code  ->  VI_func name . EOL opt_vinsts VI_func_end EOL   (rule 154)

    EOL 	shift, and go to state 87



state 62

    function_info  ->  VI_function Decimal_num . opt_func_options data_type name Decimal_num String_lit '(' EOL opt_arguments ')' EOL   (rule 85)

    VI_abstract	shift, and go to state 88
    VI_export	shift, and go to state 89
    VI_extern	shift, and go to state 90
    VI_final	shift, and go to state 91
    VI_leaf	shift, and go to state 92
    VI_local	shift, and go to state 93
    VI_overwrite	shift, and go to state 94
    VI_protected	shift, and go to state 95

    $default	reduce using rule 86 (opt_func_options)

    opt_func_options	go to state 96
    func_options	go to state 97
    func_option	go to state 98



state 63

    init_code  ->  VI_initial_begin EOL . opt_vinsts VI_initial_end EOL   (rule 150)

    Identifier	shift, and go to state 99
    DebugInfo	shift, and go to state 7
    EOL 	shift, and go to state 8
    VI_Qeqeq	shift, and go to state 100
    VI_alloc	shift, and go to state 101
    VI_alloc_func	shift, and go to state 102
    VI_alloc_static	shift, and go to state 103
    VI_and	shift, and go to state 104
    VI_breakpoint	shift, and go to state 105
    VI_call	shift, and go to state 106
    VI_call_m	shift, and go to state 107
    VI_call_a	shift, and go to state 108
    VI_call_advice	shift, and go to state 109
    VI_chk_overwrite	shift, and go to state 110
    VI_cmp	shift, and go to state 111
    VI_cmpx	shift, and go to state 112
    VI_cmpz	shift, and go to state 113
    VI_concat	shift, and go to state 114
    VI_copy	shift, and go to state 115
    VI_copy_obj	shift, and go to state 116
    VI_convert	shift, and go to state 117
    VI_dec	shift, and go to state 118
    VI_div	shift, and go to state 119
    VI_dup	shift, and go to state 120
    VI_duplicate	shift, and go to state 121
    VI_enter_advice	shift, and go to state 122
    VI_enum	shift, and go to state 16
    VI_eor	shift, and go to state 123
    VI_eqQeq	shift, and go to state 124
    VI_eqeq	shift, and go to state 125
    VI_eqeqQ	shift, and go to state 126
    VI_eqeqeq	shift, and go to state 127
    VI_eqCeq	shift, and go to state 128
    VI_Qne	shift, and go to state 129
    VI_error	shift, and go to state 130
    VI_exec	shift, and go to state 131
    VI_exit	shift, and go to state 132
    VI_fork	shift, and go to state 133
    VI_ge	shift, and go to state 134
    VI_gen_child	shift, and go to state 135
    VI_gen_frame	shift, and go to state 136
    VI_gen_m_frame	shift, and go to state 137
    VI_gen_a_frame	shift, and go to state 138
    VI_get_this	shift, and go to state 139
    VI_get_sig_subbit	shift, and go to state 140
    VI_get_subbit	shift, and go to state 141
    VI_get_super	shift, and go to state 142
    VI_get_child	shift, and go to state 143
    VI_get_return	shift, and go to state 144
    VI_gt	shift, and go to state 145
    VI_inc	shift, and go to state 146
    VI_jmp	shift, and go to state 147
    VI_jnz	shift, and go to state 148
    VI_join	shift, and go to state 149
    VI_jz	shift, and go to state 150
    VI_knife	shift, and go to state 151
    VI_le	shift, and go to state 152
    VI_list	shift, and go to state 153
    VI_load_const	shift, and go to state 154
    VI_load_one	shift, and go to state 155
    VI_load_port	shift, and go to state 156
    VI_load_port_ptr	shift, and go to state 157
    VI_load_pset_port	shift, and go to state 158
    VI_load_pset_port_ptr	shift, and go to state 159
    VI_load_sig_pt	shift, and go to state 160
    VI_load_static	shift, and go to state 161
    VI_load_super	shift, and go to state 162
    VI_load_this	shift, and go to state 163
    VI_load_thread	shift, and go to state 164
    VI_load_zero	shift, and go to state 165
    VI_loadg	shift, and go to state 166
    VI_loadl	shift, and go to state 167
    VI_loadm	shift, and go to state 168
    VI_lshift	shift, and go to state 169
    VI_lt	shift, and go to state 170
    VI_lvar	shift, and go to state 171
    VI_minus	shift, and go to state 172
    VI_mod	shift, and go to state 173
    VI_nand	shift, and go to state 174
    VI_ne	shift, and go to state 175
    VI_neor	shift, and go to state 176
    VI_neqeq	shift, and go to state 177
    VI_new	shift, and go to state 178
    VI_new_obj	shift, and go to state 179
    VI_nor	shift, and go to state 180
    VI_null	shift, and go to state 181
    VI_or	shift, and go to state 182
    VI_overwrite	shift, and go to state 183
    VI_plus	shift, and go to state 184
    VI_pop	shift, and go to state 185
    VI_pop_this	shift, and go to state 186
    VI_push	shift, and go to state 187
    VI_restore_acc	shift, and go to state 188
    VI_return	shift, and go to state 189
    VI_return_advice	shift, and go to state 190
    VI_return_l	shift, and go to state 191
    VI_return_n	shift, and go to state 192
    VI_rshift	shift, and go to state 193
    VI_save_acc	shift, and go to state 194
    VI_spoon	shift, and go to state 195
    VI_store_adjust	shift, and go to state 196
    VI_store_obj	shift, and go to state 197
    VI_store_port	shift, and go to state 198
    VI_store_pset_port	shift, and go to state 199
    VI_store_sig_g	shift, and go to state 200
    VI_store_sig_l	shift, and go to state 201
    VI_store_sig_m	shift, and go to state 202
    VI_store_sig_static	shift, and go to state 203
    VI_store_static	shift, and go to state 204
    VI_storeg	shift, and go to state 205
    VI_storel	shift, and go to state 206
    VI_storem	shift, and go to state 207
    VI_sync	shift, and go to state 208
    VI_terminate	shift, and go to state 209
    VI_times	shift, and go to state 210
    VI_to_int	shift, and go to state 211
    VI_u_and	shift, and go to state 212
    VI_u_eor	shift, and go to state 213
    VI_u_minus	shift, and go to state 214
    VI_u_nand	shift, and go to state 215
    VI_u_neor	shift, and go to state 216
    VI_u_nor	shift, and go to state 217
    VI_u_not	shift, and go to state 218
    VI_u_or	shift, and go to state 219
    VI_u_tilde	shift, and go to state 220
    VI_urshift	shift, and go to state 221
    VI_var	shift, and go to state 222
    VI_veri_call	shift, and go to state 223
    VI_void	shift, and go to state 224

    VI_initial_end	reduce using rule 157 (opt_vinsts)
    $default	reduce using rule 108 (opt_var)

    empty_line	go to state 225
    debug_information	go to state 226
    enum_dcl	go to state 227
    opt_var	go to state 228
    opt_vinsts	go to state 229
    vinsts	go to state 230
    vinst	go to state 231



state 64

    mfunc_code  ->  VI_mfunc name . name EOL opt_vinsts VI_func_end EOL   (rule 153)

    Name	shift, and go to state 51

    name	go to state 232



state 65

    direction  ->  VI_input .   (rule 30)

    $default	reduce using rule 30 (direction)



state 66

    direction  ->  VI_inout .   (rule 32)

    $default	reduce using rule 32 (direction)



state 67

    direction  ->  VI_output .   (rule 31)

    $default	reduce using rule 31 (direction)



state 68

    port_info  ->  VI_port direction . '[' Decimal_num ':' Decimal_num ']' name opt_port_attrib EOL   (rule 29)

    '[' 	shift, and go to state 233



state 69

    portset_info  ->  VI_portset name . '{' EOL port_infos '}' EOL   (rule 45)

    '{' 	shift, and go to state 234



state 70

    static_var_dcl  ->  VI_stat_var name . name data_type name array_range opt_var_attribs EOL   (rule 148)

    Name	shift, and go to state 51

    name	go to state 235



state 71

    static_init_code  ->  VI_static_init EOL . opt_vinsts VI_static_init_end EOL   (rule 149)

    Identifier	shift, and go to state 99
    DebugInfo	shift, and go to state 7
    EOL 	shift, and go to state 8
    VI_Qeqeq	shift, and go to state 100
    VI_alloc	shift, and go to state 101
    VI_alloc_func	shift, and go to state 102
    VI_alloc_static	shift, and go to state 103
    VI_and	shift, and go to state 104
    VI_breakpoint	shift, and go to state 105
    VI_call	shift, and go to state 106
    VI_call_m	shift, and go to state 107
    VI_call_a	shift, and go to state 108
    VI_call_advice	shift, and go to state 109
    VI_chk_overwrite	shift, and go to state 110
    VI_cmp	shift, and go to state 111
    VI_cmpx	shift, and go to state 112
    VI_cmpz	shift, and go to state 113
    VI_concat	shift, and go to state 114
    VI_copy	shift, and go to state 115
    VI_copy_obj	shift, and go to state 116
    VI_convert	shift, and go to state 117
    VI_dec	shift, and go to state 118
    VI_div	shift, and go to state 119
    VI_dup	shift, and go to state 120
    VI_duplicate	shift, and go to state 121
    VI_enter_advice	shift, and go to state 122
    VI_enum	shift, and go to state 16
    VI_eor	shift, and go to state 123
    VI_eqQeq	shift, and go to state 124
    VI_eqeq	shift, and go to state 125
    VI_eqeqQ	shift, and go to state 126
    VI_eqeqeq	shift, and go to state 127
    VI_eqCeq	shift, and go to state 128
    VI_Qne	shift, and go to state 129
    VI_error	shift, and go to state 130
    VI_exec	shift, and go to state 131
    VI_exit	shift, and go to state 132
    VI_fork	shift, and go to state 133
    VI_ge	shift, and go to state 134
    VI_gen_child	shift, and go to state 135
    VI_gen_frame	shift, and go to state 136
    VI_gen_m_frame	shift, and go to state 137
    VI_gen_a_frame	shift, and go to state 138
    VI_get_this	shift, and go to state 139
    VI_get_sig_subbit	shift, and go to state 140
    VI_get_subbit	shift, and go to state 141
    VI_get_super	shift, and go to state 142
    VI_get_child	shift, and go to state 143
    VI_get_return	shift, and go to state 144
    VI_gt	shift, and go to state 145
    VI_inc	shift, and go to state 146
    VI_jmp	shift, and go to state 147
    VI_jnz	shift, and go to state 148
    VI_join	shift, and go to state 149
    VI_jz	shift, and go to state 150
    VI_knife	shift, and go to state 151
    VI_le	shift, and go to state 152
    VI_list	shift, and go to state 153
    VI_load_const	shift, and go to state 154
    VI_load_one	shift, and go to state 155
    VI_load_port	shift, and go to state 156
    VI_load_port_ptr	shift, and go to state 157
    VI_load_pset_port	shift, and go to state 158
    VI_load_pset_port_ptr	shift, and go to state 159
    VI_load_sig_pt	shift, and go to state 160
    VI_load_static	shift, and go to state 161
    VI_load_super	shift, and go to state 162
    VI_load_this	shift, and go to state 163
    VI_load_thread	shift, and go to state 164
    VI_load_zero	shift, and go to state 165
    VI_loadg	shift, and go to state 166
    VI_loadl	shift, and go to state 167
    VI_loadm	shift, and go to state 168
    VI_lshift	shift, and go to state 169
    VI_lt	shift, and go to state 170
    VI_lvar	shift, and go to state 171
    VI_minus	shift, and go to state 172
    VI_mod	shift, and go to state 173
    VI_nand	shift, and go to state 174
    VI_ne	shift, and go to state 175
    VI_neor	shift, and go to state 176
    VI_neqeq	shift, and go to state 177
    VI_new	shift, and go to state 178
    VI_new_obj	shift, and go to state 179
    VI_nor	shift, and go to state 180
    VI_null	shift, and go to state 181
    VI_or	shift, and go to state 182
    VI_overwrite	shift, and go to state 183
    VI_plus	shift, and go to state 184
    VI_pop	shift, and go to state 185
    VI_pop_this	shift, and go to state 186
    VI_push	shift, and go to state 187
    VI_restore_acc	shift, and go to state 188
    VI_return	shift, and go to state 189
    VI_return_advice	shift, and go to state 190
    VI_return_l	shift, and go to state 191
    VI_return_n	shift, and go to state 192
    VI_rshift	shift, and go to state 193
    VI_save_acc	shift, and go to state 194
    VI_spoon	shift, and go to state 195
    VI_store_adjust	shift, and go to state 196
    VI_store_obj	shift, and go to state 197
    VI_store_port	shift, and go to state 198
    VI_store_pset_port	shift, and go to state 199
    VI_store_sig_g	shift, and go to state 200
    VI_store_sig_l	shift, and go to state 201
    VI_store_sig_m	shift, and go to state 202
    VI_store_sig_static	shift, and go to state 203
    VI_store_static	shift, and go to state 204
    VI_storeg	shift, and go to state 205
    VI_storel	shift, and go to state 206
    VI_storem	shift, and go to state 207
    VI_sync	shift, and go to state 208
    VI_terminate	shift, and go to state 209
    VI_times	shift, and go to state 210
    VI_to_int	shift, and go to state 211
    VI_u_and	shift, and go to state 212
    VI_u_eor	shift, and go to state 213
    VI_u_minus	shift, and go to state 214
    VI_u_nand	shift, and go to state 215
    VI_u_neor	shift, and go to state 216
    VI_u_nor	shift, and go to state 217
    VI_u_not	shift, and go to state 218
    VI_u_or	shift, and go to state 219
    VI_u_tilde	shift, and go to state 220
    VI_urshift	shift, and go to state 221
    VI_var	shift, and go to state 222
    VI_veri_call	shift, and go to state 223
    VI_void	shift, and go to state 224

    VI_static_init_end	reduce using rule 157 (opt_vinsts)
    $default	reduce using rule 108 (opt_var)

    empty_line	go to state 225
    debug_information	go to state 226
    enum_dcl	go to state 227
    opt_var	go to state 228
    opt_vinsts	go to state 236
    vinsts	go to state 230
    vinst	go to state 231



state 72

    variable_dcl  ->  VI_variable Decimal_num . data_type name array_range opt_var_attribs EOL   (rule 50)

    VI_bit	shift, and go to state 237
    VI_class	shift, and go to state 238
    VI_class_type	shift, and go to state 239
    VI_double	shift, and go to state 240
    VI_enum	shift, and go to state 241
    VI_float	shift, and go to state 242
    VI_int	shift, and go to state 243
    VI_long	shift, and go to state 244
    VI_signal	shift, and go to state 245
    VI_string	shift, and go to state 246
    VI_sys_class	shift, and go to state 247
    VI_void	shift, and go to state 248

    data_type	go to state 249



state 73

    verilog_task_info  ->  VI_verilog_task Name . '(' EOL opt_arguments ')' String_lit EOL   (rule 124)

    '(' 	shift, and go to state 250



state 74

    vinst_units  ->  vinst_units vinst_unit .   (rule 6)

    $default	reduce using rule 6 (vinst_units)



state 75

    inital_header  ->  VI_jedacmp Decimal_num Decimal_num EOL .   (rule 4)

    $default	reduce using rule 4 (inital_header)



state 76

    aspect_info  ->  VI_aspect name Decimal_num . String_lit '{' EOL @2 opt_aspect_members '}' EOL   (rule 123)

    String_lit	shift, and go to state 251



state 77

    advice_code  ->  VI_advice name name . EOL opt_vinsts VI_advice_end EOL   (rule 156)

    EOL 	shift, and go to state 252



state 78

    afunc_code  ->  VI_afunc name name . EOL opt_vinsts VI_func_end EOL   (rule 155)

    EOL 	shift, and go to state 253



state 79

    opt_extention  ->  VI_extends . name   (rule 126)

    Name	shift, and go to state 51

    name	go to state 254



state 80

    class_info  ->  VI_class name opt_extention . opt_class_attribs Decimal_num String_lit '{' EOL @1 opt_class_members '}' EOL   (rule 121)

    VI_abstract	shift, and go to state 255
    VI_extern	shift, and go to state 256
    VI_final	shift, and go to state 257
    VI_local	shift, and go to state 258

    $default	reduce using rule 127 (opt_class_attribs)

    opt_class_attribs	go to state 259
    class_attribs	go to state 260
    class_attrib	go to state 261



state 81

    class_alloc_code  ->  VI_class_alloc name EOL . opt_vinsts VI_class_alloc_end EOL   (rule 152)

    Identifier	shift, and go to state 99
    DebugInfo	shift, and go to state 7
    EOL 	shift, and go to state 8
    VI_Qeqeq	shift, and go to state 100
    VI_alloc	shift, and go to state 101
    VI_alloc_func	shift, and go to state 102
    VI_alloc_static	shift, and go to state 103
    VI_and	shift, and go to state 104
    VI_breakpoint	shift, and go to state 105
    VI_call	shift, and go to state 106
    VI_call_m	shift, and go to state 107
    VI_call_a	shift, and go to state 108
    VI_call_advice	shift, and go to state 109
    VI_chk_overwrite	shift, and go to state 110
    VI_cmp	shift, and go to state 111
    VI_cmpx	shift, and go to state 112
    VI_cmpz	shift, and go to state 113
    VI_concat	shift, and go to state 114
    VI_copy	shift, and go to state 115
    VI_copy_obj	shift, and go to state 116
    VI_convert	shift, and go to state 117
    VI_dec	shift, and go to state 118
    VI_div	shift, and go to state 119
    VI_dup	shift, and go to state 120
    VI_duplicate	shift, and go to state 121
    VI_enter_advice	shift, and go to state 122
    VI_enum	shift, and go to state 16
    VI_eor	shift, and go to state 123
    VI_eqQeq	shift, and go to state 124
    VI_eqeq	shift, and go to state 125
    VI_eqeqQ	shift, and go to state 126
    VI_eqeqeq	shift, and go to state 127
    VI_eqCeq	shift, and go to state 128
    VI_Qne	shift, and go to state 129
    VI_error	shift, and go to state 130
    VI_exec	shift, and go to state 131
    VI_exit	shift, and go to state 132
    VI_fork	shift, and go to state 133
    VI_ge	shift, and go to state 134
    VI_gen_child	shift, and go to state 135
    VI_gen_frame	shift, and go to state 136
    VI_gen_m_frame	shift, and go to state 137
    VI_gen_a_frame	shift, and go to state 138
    VI_get_this	shift, and go to state 139
    VI_get_sig_subbit	shift, and go to state 140
    VI_get_subbit	shift, and go to state 141
    VI_get_super	shift, and go to state 142
    VI_get_child	shift, and go to state 143
    VI_get_return	shift, and go to state 144
    VI_gt	shift, and go to state 145
    VI_inc	shift, and go to state 146
    VI_jmp	shift, and go to state 147
    VI_jnz	shift, and go to state 148
    VI_join	shift, and go to state 149
    VI_jz	shift, and go to state 150
    VI_knife	shift, and go to state 151
    VI_le	shift, and go to state 152
    VI_list	shift, and go to state 153
    VI_load_const	shift, and go to state 154
    VI_load_one	shift, and go to state 155
    VI_load_port	shift, and go to state 156
    VI_load_port_ptr	shift, and go to state 157
    VI_load_pset_port	shift, and go to state 158
    VI_load_pset_port_ptr	shift, and go to state 159
    VI_load_sig_pt	shift, and go to state 160
    VI_load_static	shift, and go to state 161
    VI_load_super	shift, and go to state 162
    VI_load_this	shift, and go to state 163
    VI_load_thread	shift, and go to state 164
    VI_load_zero	shift, and go to state 165
    VI_loadg	shift, and go to state 166
    VI_loadl	shift, and go to state 167
    VI_loadm	shift, and go to state 168
    VI_lshift	shift, and go to state 169
    VI_lt	shift, and go to state 170
    VI_lvar	shift, and go to state 171
    VI_minus	shift, and go to state 172
    VI_mod	shift, and go to state 173
    VI_nand	shift, and go to state 174
    VI_ne	shift, and go to state 175
    VI_neor	shift, and go to state 176
    VI_neqeq	shift, and go to state 177
    VI_new	shift, and go to state 178
    VI_new_obj	shift, and go to state 179
    VI_nor	shift, and go to state 180
    VI_null	shift, and go to state 181
    VI_or	shift, and go to state 182
    VI_overwrite	shift, and go to state 183
    VI_plus	shift, and go to state 184
    VI_pop	shift, and go to state 185
    VI_pop_this	shift, and go to state 186
    VI_push	shift, and go to state 187
    VI_restore_acc	shift, and go to state 188
    VI_return	shift, and go to state 189
    VI_return_advice	shift, and go to state 190
    VI_return_l	shift, and go to state 191
    VI_return_n	shift, and go to state 192
    VI_rshift	shift, and go to state 193
    VI_save_acc	shift, and go to state 194
    VI_spoon	shift, and go to state 195
    VI_store_adjust	shift, and go to state 196
    VI_store_obj	shift, and go to state 197
    VI_store_port	shift, and go to state 198
    VI_store_pset_port	shift, and go to state 199
    VI_store_sig_g	shift, and go to state 200
    VI_store_sig_l	shift, and go to state 201
    VI_store_sig_m	shift, and go to state 202
    VI_store_sig_static	shift, and go to state 203
    VI_store_static	shift, and go to state 204
    VI_storeg	shift, and go to state 205
    VI_storel	shift, and go to state 206
    VI_storem	shift, and go to state 207
    VI_sync	shift, and go to state 208
    VI_terminate	shift, and go to state 209
    VI_times	shift, and go to state 210
    VI_to_int	shift, and go to state 211
    VI_u_and	shift, and go to state 212
    VI_u_eor	shift, and go to state 213
    VI_u_minus	shift, and go to state 214
    VI_u_nand	shift, and go to state 215
    VI_u_neor	shift, and go to state 216
    VI_u_nor	shift, and go to state 217
    VI_u_not	shift, and go to state 218
    VI_u_or	shift, and go to state 219
    VI_u_tilde	shift, and go to state 220
    VI_urshift	shift, and go to state 221
    VI_var	shift, and go to state 222
    VI_veri_call	shift, and go to state 223
    VI_void	shift, and go to state 224

    VI_class_alloc_end	reduce using rule 157 (opt_vinsts)
    $default	reduce using rule 108 (opt_var)

    empty_line	go to state 225
    debug_information	go to state 226
    enum_dcl	go to state 227
    opt_var	go to state 228
    opt_vinsts	go to state 262
    vinsts	go to state 230
    vinst	go to state 231



state 82

    class_init_code  ->  VI_class_initial_begin name EOL . opt_vinsts VI_class_initial_end EOL   (rule 151)

    Identifier	shift, and go to state 99
    DebugInfo	shift, and go to state 7
    EOL 	shift, and go to state 8
    VI_Qeqeq	shift, and go to state 100
    VI_alloc	shift, and go to state 101
    VI_alloc_func	shift, and go to state 102
    VI_alloc_static	shift, and go to state 103
    VI_and	shift, and go to state 104
    VI_breakpoint	shift, and go to state 105
    VI_call	shift, and go to state 106
    VI_call_m	shift, and go to state 107
    VI_call_a	shift, and go to state 108
    VI_call_advice	shift, and go to state 109
    VI_chk_overwrite	shift, and go to state 110
    VI_cmp	shift, and go to state 111
    VI_cmpx	shift, and go to state 112
    VI_cmpz	shift, and go to state 113
    VI_concat	shift, and go to state 114
    VI_copy	shift, and go to state 115
    VI_copy_obj	shift, and go to state 116
    VI_convert	shift, and go to state 117
    VI_dec	shift, and go to state 118
    VI_div	shift, and go to state 119
    VI_dup	shift, and go to state 120
    VI_duplicate	shift, and go to state 121
    VI_enter_advice	shift, and go to state 122
    VI_enum	shift, and go to state 16
    VI_eor	shift, and go to state 123
    VI_eqQeq	shift, and go to state 124
    VI_eqeq	shift, and go to state 125
    VI_eqeqQ	shift, and go to state 126
    VI_eqeqeq	shift, and go to state 127
    VI_eqCeq	shift, and go to state 128
    VI_Qne	shift, and go to state 129
    VI_error	shift, and go to state 130
    VI_exec	shift, and go to state 131
    VI_exit	shift, and go to state 132
    VI_fork	shift, and go to state 133
    VI_ge	shift, and go to state 134
    VI_gen_child	shift, and go to state 135
    VI_gen_frame	shift, and go to state 136
    VI_gen_m_frame	shift, and go to state 137
    VI_gen_a_frame	shift, and go to state 138
    VI_get_this	shift, and go to state 139
    VI_get_sig_subbit	shift, and go to state 140
    VI_get_subbit	shift, and go to state 141
    VI_get_super	shift, and go to state 142
    VI_get_child	shift, and go to state 143
    VI_get_return	shift, and go to state 144
    VI_gt	shift, and go to state 145
    VI_inc	shift, and go to state 146
    VI_jmp	shift, and go to state 147
    VI_jnz	shift, and go to state 148
    VI_join	shift, and go to state 149
    VI_jz	shift, and go to state 150
    VI_knife	shift, and go to state 151
    VI_le	shift, and go to state 152
    VI_list	shift, and go to state 153
    VI_load_const	shift, and go to state 154
    VI_load_one	shift, and go to state 155
    VI_load_port	shift, and go to state 156
    VI_load_port_ptr	shift, and go to state 157
    VI_load_pset_port	shift, and go to state 158
    VI_load_pset_port_ptr	shift, and go to state 159
    VI_load_sig_pt	shift, and go to state 160
    VI_load_static	shift, and go to state 161
    VI_load_super	shift, and go to state 162
    VI_load_this	shift, and go to state 163
    VI_load_thread	shift, and go to state 164
    VI_load_zero	shift, and go to state 165
    VI_loadg	shift, and go to state 166
    VI_loadl	shift, and go to state 167
    VI_loadm	shift, and go to state 168
    VI_lshift	shift, and go to state 169
    VI_lt	shift, and go to state 170
    VI_lvar	shift, and go to state 171
    VI_minus	shift, and go to state 172
    VI_mod	shift, and go to state 173
    VI_nand	shift, and go to state 174
    VI_ne	shift, and go to state 175
    VI_neor	shift, and go to state 176
    VI_neqeq	shift, and go to state 177
    VI_new	shift, and go to state 178
    VI_new_obj	shift, and go to state 179
    VI_nor	shift, and go to state 180
    VI_null	shift, and go to state 181
    VI_or	shift, and go to state 182
    VI_overwrite	shift, and go to state 183
    VI_plus	shift, and go to state 184
    VI_pop	shift, and go to state 185
    VI_pop_this	shift, and go to state 186
    VI_push	shift, and go to state 187
    VI_restore_acc	shift, and go to state 188
    VI_return	shift, and go to state 189
    VI_return_advice	shift, and go to state 190
    VI_return_l	shift, and go to state 191
    VI_return_n	shift, and go to state 192
    VI_rshift	shift, and go to state 193
    VI_save_acc	shift, and go to state 194
    VI_spoon	shift, and go to state 195
    VI_store_adjust	shift, and go to state 196
    VI_store_obj	shift, and go to state 197
    VI_store_port	shift, and go to state 198
    VI_store_pset_port	shift, and go to state 199
    VI_store_sig_g	shift, and go to state 200
    VI_store_sig_l	shift, and go to state 201
    VI_store_sig_m	shift, and go to state 202
    VI_store_sig_static	shift, and go to state 203
    VI_store_static	shift, and go to state 204
    VI_storeg	shift, and go to state 205
    VI_storel	shift, and go to state 206
    VI_storem	shift, and go to state 207
    VI_sync	shift, and go to state 208
    VI_terminate	shift, and go to state 209
    VI_times	shift, and go to state 210
    VI_to_int	shift, and go to state 211
    VI_u_and	shift, and go to state 212
    VI_u_eor	shift, and go to state 213
    VI_u_minus	shift, and go to state 214
    VI_u_nand	shift, and go to state 215
    VI_u_neor	shift, and go to state 216
    VI_u_nor	shift, and go to state 217
    VI_u_not	shift, and go to state 218
    VI_u_or	shift, and go to state 219
    VI_u_tilde	shift, and go to state 220
    VI_urshift	shift, and go to state 221
    VI_var	shift, and go to state 222
    VI_veri_call	shift, and go to state 223
    VI_void	shift, and go to state 224

    VI_class_initial_end	reduce using rule 157 (opt_vinsts)
    $default	reduce using rule 108 (opt_var)

    empty_line	go to state 225
    debug_information	go to state 226
    enum_dcl	go to state 227
    opt_var	go to state 228
    opt_vinsts	go to state 263
    vinsts	go to state 230
    vinst	go to state 231



state 83

    connection_info  ->  VI_connection VI_port name . '=' String_lit EOL   (rule 48)

    '=' 	shift, and go to state 264



state 84

    connection_info  ->  VI_connection VI_portset name . name '=' String_lit EOL   (rule 49)

    Name	shift, and go to state 51

    name	go to state 265



state 85

    enum_dcl  ->  VI_enum name enum_members . EOL   (rule 82)
    enum_members  ->  enum_members . name   (rule 84)

    Name	shift, and go to state 51
    EOL 	shift, and go to state 266

    name	go to state 267



state 86

    enum_members  ->  name .   (rule 83)

    $default	reduce using rule 83 (enum_members)



state 87

    func_code  ->  VI_func name EOL . opt_vinsts VI_func_end EOL   (rule 154)

    Identifier	shift, and go to state 99
    DebugInfo	shift, and go to state 7
    EOL 	shift, and go to state 8
    VI_Qeqeq	shift, and go to state 100
    VI_alloc	shift, and go to state 101
    VI_alloc_func	shift, and go to state 102
    VI_alloc_static	shift, and go to state 103
    VI_and	shift, and go to state 104
    VI_breakpoint	shift, and go to state 105
    VI_call	shift, and go to state 106
    VI_call_m	shift, and go to state 107
    VI_call_a	shift, and go to state 108
    VI_call_advice	shift, and go to state 109
    VI_chk_overwrite	shift, and go to state 110
    VI_cmp	shift, and go to state 111
    VI_cmpx	shift, and go to state 112
    VI_cmpz	shift, and go to state 113
    VI_concat	shift, and go to state 114
    VI_copy	shift, and go to state 115
    VI_copy_obj	shift, and go to state 116
    VI_convert	shift, and go to state 117
    VI_dec	shift, and go to state 118
    VI_div	shift, and go to state 119
    VI_dup	shift, and go to state 120
    VI_duplicate	shift, and go to state 121
    VI_enter_advice	shift, and go to state 122
    VI_enum	shift, and go to state 16
    VI_eor	shift, and go to state 123
    VI_eqQeq	shift, and go to state 124
    VI_eqeq	shift, and go to state 125
    VI_eqeqQ	shift, and go to state 126
    VI_eqeqeq	shift, and go to state 127
    VI_eqCeq	shift, and go to state 128
    VI_Qne	shift, and go to state 129
    VI_error	shift, and go to state 130
    VI_exec	shift, and go to state 131
    VI_exit	shift, and go to state 132
    VI_fork	shift, and go to state 133
    VI_ge	shift, and go to state 134
    VI_gen_child	shift, and go to state 135
    VI_gen_frame	shift, and go to state 136
    VI_gen_m_frame	shift, and go to state 137
    VI_gen_a_frame	shift, and go to state 138
    VI_get_this	shift, and go to state 139
    VI_get_sig_subbit	shift, and go to state 140
    VI_get_subbit	shift, and go to state 141
    VI_get_super	shift, and go to state 142
    VI_get_child	shift, and go to state 143
    VI_get_return	shift, and go to state 144
    VI_gt	shift, and go to state 145
    VI_inc	shift, and go to state 146
    VI_jmp	shift, and go to state 147
    VI_jnz	shift, and go to state 148
    VI_join	shift, and go to state 149
    VI_jz	shift, and go to state 150
    VI_knife	shift, and go to state 151
    VI_le	shift, and go to state 152
    VI_list	shift, and go to state 153
    VI_load_const	shift, and go to state 154
    VI_load_one	shift, and go to state 155
    VI_load_port	shift, and go to state 156
    VI_load_port_ptr	shift, and go to state 157
    VI_load_pset_port	shift, and go to state 158
    VI_load_pset_port_ptr	shift, and go to state 159
    VI_load_sig_pt	shift, and go to state 160
    VI_load_static	shift, and go to state 161
    VI_load_super	shift, and go to state 162
    VI_load_this	shift, and go to state 163
    VI_load_thread	shift, and go to state 164
    VI_load_zero	shift, and go to state 165
    VI_loadg	shift, and go to state 166
    VI_loadl	shift, and go to state 167
    VI_loadm	shift, and go to state 168
    VI_lshift	shift, and go to state 169
    VI_lt	shift, and go to state 170
    VI_lvar	shift, and go to state 171
    VI_minus	shift, and go to state 172
    VI_mod	shift, and go to state 173
    VI_nand	shift, and go to state 174
    VI_ne	shift, and go to state 175
    VI_neor	shift, and go to state 176
    VI_neqeq	shift, and go to state 177
    VI_new	shift, and go to state 178
    VI_new_obj	shift, and go to state 179
    VI_nor	shift, and go to state 180
    VI_null	shift, and go to state 181
    VI_or	shift, and go to state 182
    VI_overwrite	shift, and go to state 183
    VI_plus	shift, and go to state 184
    VI_pop	shift, and go to state 185
    VI_pop_this	shift, and go to state 186
    VI_push	shift, and go to state 187
    VI_restore_acc	shift, and go to state 188
    VI_return	shift, and go to state 189
    VI_return_advice	shift, and go to state 190
    VI_return_l	shift, and go to state 191
    VI_return_n	shift, and go to state 192
    VI_rshift	shift, and go to state 193
    VI_save_acc	shift, and go to state 194
    VI_spoon	shift, and go to state 195
    VI_store_adjust	shift, and go to state 196
    VI_store_obj	shift, and go to state 197
    VI_store_port	shift, and go to state 198
    VI_store_pset_port	shift, and go to state 199
    VI_store_sig_g	shift, and go to state 200
    VI_store_sig_l	shift, and go to state 201
    VI_store_sig_m	shift, and go to state 202
    VI_store_sig_static	shift, and go to state 203
    VI_store_static	shift, and go to state 204
    VI_storeg	shift, and go to state 205
    VI_storel	shift, and go to state 206
    VI_storem	shift, and go to state 207
    VI_sync	shift, and go to state 208
    VI_terminate	shift, and go to state 209
    VI_times	shift, and go to state 210
    VI_to_int	shift, and go to state 211
    VI_u_and	shift, and go to state 212
    VI_u_eor	shift, and go to state 213
    VI_u_minus	shift, and go to state 214
    VI_u_nand	shift, and go to state 215
    VI_u_neor	shift, and go to state 216
    VI_u_nor	shift, and go to state 217
    VI_u_not	shift, and go to state 218
    VI_u_or	shift, and go to state 219
    VI_u_tilde	shift, and go to state 220
    VI_urshift	shift, and go to state 221
    VI_var	shift, and go to state 222
    VI_veri_call	shift, and go to state 223
    VI_void	shift, and go to state 224

    VI_func_end	reduce using rule 157 (opt_vinsts)
    $default	reduce using rule 108 (opt_var)

    empty_line	go to state 225
    debug_information	go to state 226
    enum_dcl	go to state 227
    opt_var	go to state 228
    opt_vinsts	go to state 268
    vinsts	go to state 230
    vinst	go to state 231



state 88

    func_option  ->  VI_abstract .   (rule 90)

    $default	reduce using rule 90 (func_option)



state 89

    func_option  ->  VI_export .   (rule 94)

    $default	reduce using rule 94 (func_option)



state 90

    func_option  ->  VI_extern .   (rule 97)

    $default	reduce using rule 97 (func_option)



state 91

    func_option  ->  VI_final .   (rule 93)

    $default	reduce using rule 93 (func_option)



state 92

    func_option  ->  VI_leaf .   (rule 95)

    $default	reduce using rule 95 (func_option)



state 93

    func_option  ->  VI_local .   (rule 91)

    $default	reduce using rule 91 (func_option)



state 94

    func_option  ->  VI_overwrite .   (rule 96)

    $default	reduce using rule 96 (func_option)



state 95

    func_option  ->  VI_protected .   (rule 92)

    $default	reduce using rule 92 (func_option)



state 96

    function_info  ->  VI_function Decimal_num opt_func_options . data_type name Decimal_num String_lit '(' EOL opt_arguments ')' EOL   (rule 85)

    VI_bit	shift, and go to state 237
    VI_class	shift, and go to state 238
    VI_class_type	shift, and go to state 239
    VI_double	shift, and go to state 240
    VI_enum	shift, and go to state 241
    VI_float	shift, and go to state 242
    VI_int	shift, and go to state 243
    VI_long	shift, and go to state 244
    VI_signal	shift, and go to state 245
    VI_string	shift, and go to state 246
    VI_sys_class	shift, and go to state 247
    VI_void	shift, and go to state 248

    data_type	go to state 269



state 97

    opt_func_options  ->  func_options .   (rule 87)
    func_options  ->  func_options . func_option   (rule 89)

    VI_abstract	shift, and go to state 88
    VI_export	shift, and go to state 89
    VI_extern	shift, and go to state 90
    VI_final	shift, and go to state 91
    VI_leaf	shift, and go to state 92
    VI_local	shift, and go to state 93
    VI_overwrite	shift, and go to state 94
    VI_protected	shift, and go to state 95

    $default	reduce using rule 87 (opt_func_options)

    func_option	go to state 270



state 98

    func_options  ->  func_option .   (rule 88)

    $default	reduce using rule 88 (func_options)



state 99

    vinst  ->  Identifier . ':' EOL   (rule 164)

    ':' 	shift, and go to state 271



state 100

    vinst  ->  VI_Qeqeq . dtype EOL   (rule 207)

    '(' 	shift, and go to state 272

    dtype	go to state 273



state 101

    vinst  ->  VI_alloc . Decimal_num data_type name array_range opt_flags EOL   (rule 173)

    Decimal_num	shift, and go to state 274



state 102

    vinst  ->  VI_alloc_func . Decimal_num name   (rule 308)

    Decimal_num	shift, and go to state 275



state 103

    vinst  ->  VI_alloc_static . name name Decimal_num data_type name array_range opt_flags EOL   (rule 174)

    Name	shift, and go to state 51

    name	go to state 276



state 104

    vinst  ->  VI_and . dtype EOL   (rule 188)

    '(' 	shift, and go to state 272

    dtype	go to state 277



state 105

    vinst  ->  VI_breakpoint . String_lit EOL   (rule 264)

    String_lit	shift, and go to state 278



state 106

    vinst  ->  VI_call . name Decimal_num EOL   (rule 250)

    Name	shift, and go to state 51

    name	go to state 279



state 107

    vinst  ->  VI_call_m . name name Decimal_num EOL   (rule 251)

    Name	shift, and go to state 51

    name	go to state 280



state 108

    vinst  ->  VI_call_a . name name Decimal_num EOL   (rule 252)

    Name	shift, and go to state 51

    name	go to state 281



state 109

    vinst  ->  VI_call_advice . pointcut_specs EOL   (rule 311)

    Name	shift, and go to state 51

    pointcut_specs	go to state 282
    pointcut_spec	go to state 283
    name	go to state 284



state 110

    vinst  ->  VI_chk_overwrite . Decimal_num name   (rule 310)

    Decimal_num	shift, and go to state 285



state 111

    vinst  ->  VI_cmp . dtype EOL   (rule 210)

    '(' 	shift, and go to state 272

    dtype	go to state 286



state 112

    vinst  ->  VI_cmpx . dtype EOL   (rule 212)

    '(' 	shift, and go to state 272

    dtype	go to state 287



state 113

    vinst  ->  VI_cmpz . dtype EOL   (rule 211)

    '(' 	shift, and go to state 272

    dtype	go to state 288



state 114

    vinst  ->  VI_concat . dtype EOL   (rule 231)

    '(' 	shift, and go to state 272

    dtype	go to state 289



state 115

    vinst  ->  VI_copy . VI_alu Decimal_num EOL   (rule 239)

    VI_alu	shift, and go to state 290



state 116

    vinst  ->  VI_copy_obj . EOL   (rule 171)

    EOL 	shift, and go to state 291



state 117

    vinst  ->  VI_convert . VI_bit Decimal_num Decimal_num stype EOL   (rule 178)
    vinst  ->  VI_convert . VI_string stype EOL   (rule 179)
    vinst  ->  VI_convert . VI_float stype EOL   (rule 180)

    VI_bit	shift, and go to state 292
    VI_float	shift, and go to state 293
    VI_string	shift, and go to state 294



state 118

    vinst  ->  VI_dec . stype EOL   (rule 182)

    '(' 	shift, and go to state 295

    stype	go to state 296



state 119

    vinst  ->  VI_div . dtype EOL   (rule 186)

    '(' 	shift, and go to state 272

    dtype	go to state 297



state 120

    vinst  ->  VI_dup . Decimal_num EOL   (rule 236)

    Decimal_num	shift, and go to state 298



state 121

    vinst  ->  VI_duplicate . stype EOL   (rule 232)

    '(' 	shift, and go to state 295

    stype	go to state 299



state 122

    vinst  ->  VI_enter_advice . EOL   (rule 315)

    EOL 	shift, and go to state 300



state 123

    vinst  ->  VI_eor . dtype EOL   (rule 190)

    '(' 	shift, and go to state 272

    dtype	go to state 301



state 124

    vinst  ->  VI_eqQeq . dtype EOL   (rule 205)

    '(' 	shift, and go to state 272

    dtype	go to state 302



state 125

    vinst  ->  VI_eqeq . dtype EOL   (rule 199)

    '(' 	shift, and go to state 272

    dtype	go to state 303



state 126

    vinst  ->  VI_eqeqQ . dtype EOL   (rule 206)

    '(' 	shift, and go to state 272

    dtype	go to state 304



state 127

    vinst  ->  VI_eqeqeq . dtype EOL   (rule 203)

    '(' 	shift, and go to state 272

    dtype	go to state 305



state 128

    vinst  ->  VI_eqCeq . ttype EOL   (rule 209)

    '(' 	shift, and go to state 306

    ttype	go to state 307



state 129

    vinst  ->  VI_Qne . dtype EOL   (rule 208)

    '(' 	shift, and go to state 272

    dtype	go to state 308



state 130

    vinst  ->  VI_error .   (rule 317)

    $default	reduce using rule 317 (vinst)



state 131

    vinst  ->  VI_exec . label EOL   (rule 255)

    Identifier	shift, and go to state 309

    label	go to state 310



state 132

    vinst  ->  VI_exit . EOL   (rule 260)
    vinst  ->  VI_exit . VI_p_and EOL   (rule 261)
    vinst  ->  VI_exit . VI_p_or EOL   (rule 262)

    EOL 	shift, and go to state 311
    VI_p_and	shift, and go to state 312
    VI_p_or	shift, and go to state 313



state 133

    vinst  ->  VI_fork . EOL   (rule 254)

    EOL 	shift, and go to state 314



state 134

    vinst  ->  VI_ge . dtype EOL   (rule 201)

    '(' 	shift, and go to state 272

    dtype	go to state 315



state 135

    vinst  ->  VI_gen_child . EOL   (rule 172)

    EOL 	shift, and go to state 316



state 136

    vinst  ->  VI_gen_frame . EOL   (rule 240)

    EOL 	shift, and go to state 317



state 137

    vinst  ->  VI_gen_m_frame . EOL   (rule 241)

    EOL 	shift, and go to state 318



state 138

    vinst  ->  VI_gen_a_frame . EOL   (rule 242)

    EOL 	shift, and go to state 319



state 139

    vinst  ->  VI_get_this . EOL   (rule 228)

    EOL 	shift, and go to state 320



state 140

    vinst  ->  VI_get_sig_subbit . EOL   (rule 284)

    EOL 	shift, and go to state 321



state 141

    vinst  ->  VI_get_subbit . opt_bit_type EOL   (rule 234)

    VI_i_endian	shift, and go to state 322
    VI_nz_lsb	shift, and go to state 323

    $default	reduce using rule 362 (opt_bit_type)

    opt_bit_type	go to state 324



state 142

    vinst  ->  VI_get_super . opt_var Decimal_num EOL   (rule 229)

    VI_var	shift, and go to state 222

    $default	reduce using rule 108 (opt_var)

    opt_var	go to state 325



state 143

    vinst  ->  VI_get_child . opt_var Decimal_num EOL   (rule 230)

    VI_var	shift, and go to state 222

    $default	reduce using rule 108 (opt_var)

    opt_var	go to state 326



state 144

    vinst  ->  VI_get_return . EOL   (rule 316)

    EOL 	shift, and go to state 327



state 145

    vinst  ->  VI_gt . dtype EOL   (rule 198)

    '(' 	shift, and go to state 272

    dtype	go to state 328



state 146

    vinst  ->  VI_inc . stype EOL   (rule 181)

    '(' 	shift, and go to state 295

    stype	go to state 329



state 147

    vinst  ->  VI_jmp . label EOL   (rule 244)

    Identifier	shift, and go to state 309

    label	go to state 330



state 148

    vinst  ->  VI_jnz . stype label EOL   (rule 246)

    '(' 	shift, and go to state 295

    stype	go to state 331



state 149

    vinst  ->  VI_join . EOL   (rule 256)

    EOL 	shift, and go to state 332



state 150

    vinst  ->  VI_jz . stype label EOL   (rule 245)

    '(' 	shift, and go to state 295

    stype	go to state 333



state 151

    vinst  ->  VI_knife . EOL   (rule 259)

    EOL 	shift, and go to state 334



state 152

    vinst  ->  VI_le . dtype EOL   (rule 200)

    '(' 	shift, and go to state 272

    dtype	go to state 335



state 153

    vinst  ->  VI_list . stype Decimal_num EOL   (rule 233)

    '(' 	shift, and go to state 295

    stype	go to state 336



state 154

    vinst  ->  VI_load_const . stype const_data EOL   (rule 224)

    '(' 	shift, and go to state 295

    stype	go to state 337



state 155

    vinst  ->  VI_load_one . EOL   (rule 223)

    EOL 	shift, and go to state 338



state 156

    vinst  ->  VI_load_port . name EOL   (rule 274)
    vinst  ->  VI_load_port . VI_subbit name EOL   (rule 278)

    Name	shift, and go to state 51
    VI_subbit	shift, and go to state 339

    name	go to state 340



state 157

    vinst  ->  VI_load_port_ptr . name EOL   (rule 276)
    vinst  ->  VI_load_port_ptr . VI_subbit name EOL   (rule 280)

    Name	shift, and go to state 51
    VI_subbit	shift, and go to state 341

    name	go to state 342



state 158

    vinst  ->  VI_load_pset_port . name name EOL   (rule 275)
    vinst  ->  VI_load_pset_port . VI_subbit name name EOL   (rule 279)

    Name	shift, and go to state 51
    VI_subbit	shift, and go to state 343

    name	go to state 344



state 159

    vinst  ->  VI_load_pset_port_ptr . name name EOL   (rule 277)
    vinst  ->  VI_load_pset_port_ptr . VI_subbit name name EOL   (rule 281)

    Name	shift, and go to state 51
    VI_subbit	shift, and go to state 345

    name	go to state 346



state 160

    vinst  ->  VI_load_sig_pt . EOL   (rule 282)
    vinst  ->  VI_load_sig_pt . VI_subbit EOL   (rule 283)

    EOL 	shift, and go to state 347
    VI_subbit	shift, and go to state 348



state 161

    vinst  ->  VI_load_static . opt_array_access name name name EOL   (rule 285)

    VI_array	shift, and go to state 349
    VI_assoc	shift, and go to state 350
    VI_list	shift, and go to state 351
    VI_marray	shift, and go to state 352
    VI_stridx	shift, and go to state 353

    $default	reduce using rule 354 (opt_array_access)

    opt_array_access	go to state 354



state 162

    vinst  ->  VI_load_super . opt_var EOL   (rule 226)

    VI_var	shift, and go to state 222

    $default	reduce using rule 108 (opt_var)

    opt_var	go to state 355



state 163

    vinst  ->  VI_load_this . opt_var EOL   (rule 225)

    VI_var	shift, and go to state 222

    $default	reduce using rule 108 (opt_var)

    opt_var	go to state 356



state 164

    vinst  ->  VI_load_thread . label EOL   (rule 227)

    Identifier	shift, and go to state 309

    label	go to state 357



state 165

    vinst  ->  VI_load_zero . EOL   (rule 222)

    EOL 	shift, and go to state 358



state 166

    vinst  ->  VI_loadg . opt_array_access opt_var name EOL   (rule 272)

    VI_array	shift, and go to state 349
    VI_assoc	shift, and go to state 350
    VI_list	shift, and go to state 351
    VI_marray	shift, and go to state 352
    VI_stridx	shift, and go to state 353

    $default	reduce using rule 354 (opt_array_access)

    opt_array_access	go to state 359



state 167

    vinst  ->  VI_loadl . opt_array_access opt_static opt_var Decimal_num EOL   (rule 271)

    VI_array	shift, and go to state 349
    VI_assoc	shift, and go to state 350
    VI_list	shift, and go to state 351
    VI_marray	shift, and go to state 352
    VI_stridx	shift, and go to state 353

    $default	reduce using rule 354 (opt_array_access)

    opt_array_access	go to state 360



state 168

    vinst  ->  VI_loadm . opt_array_access opt_static opt_var name name EOL   (rule 273)

    VI_array	shift, and go to state 349
    VI_assoc	shift, and go to state 350
    VI_list	shift, and go to state 351
    VI_marray	shift, and go to state 352
    VI_stridx	shift, and go to state 353

    $default	reduce using rule 354 (opt_array_access)

    opt_array_access	go to state 361



state 169

    vinst  ->  VI_lshift . stype EOL   (rule 196)

    '(' 	shift, and go to state 295

    stype	go to state 362



state 170

    vinst  ->  VI_lt . dtype EOL   (rule 197)

    '(' 	shift, and go to state 272

    dtype	go to state 363



state 171

    vinst  ->  VI_lvar . Decimal_num data_type name array_range opt_flags EOL   (rule 166)
    vinst  ->  VI_lvar . VI_static Decimal_num data_type name name name array_range opt_flags EOL   (rule 167)

    Decimal_num	shift, and go to state 364
    VI_static	shift, and go to state 365



state 172

    vinst  ->  VI_minus . dtype EOL   (rule 183)

    '(' 	shift, and go to state 272

    dtype	go to state 366



state 173

    vinst  ->  VI_mod . dtype EOL   (rule 187)

    '(' 	shift, and go to state 272

    dtype	go to state 367



state 174

    vinst  ->  VI_nand . dtype EOL   (rule 191)

    '(' 	shift, and go to state 272

    dtype	go to state 368



state 175

    vinst  ->  VI_ne . dtype EOL   (rule 202)

    '(' 	shift, and go to state 272

    dtype	go to state 369



state 176

    vinst  ->  VI_neor . dtype EOL   (rule 193)

    '(' 	shift, and go to state 272

    dtype	go to state 370



state 177

    vinst  ->  VI_neqeq . dtype EOL   (rule 204)

    '(' 	shift, and go to state 272

    dtype	go to state 371



state 178

    vinst  ->  VI_new . EOL   (rule 168)

    EOL 	shift, and go to state 372



state 179

    vinst  ->  VI_new_obj . name EOL @3   (rule 170)

    Name	shift, and go to state 51

    name	go to state 373



state 180

    vinst  ->  VI_nor . dtype EOL   (rule 192)

    '(' 	shift, and go to state 272

    dtype	go to state 374



state 181

    vinst  ->  VI_null . EOL   (rule 165)

    EOL 	shift, and go to state 375



state 182

    vinst  ->  VI_or . dtype EOL   (rule 189)

    '(' 	shift, and go to state 272

    dtype	go to state 376



state 183

    vinst  ->  VI_overwrite . name name name   (rule 309)

    Name	shift, and go to state 51

    name	go to state 377



state 184

    vinst  ->  VI_plus . dtype EOL   (rule 184)

    '(' 	shift, and go to state 272

    dtype	go to state 378



state 185

    vinst  ->  VI_pop . Decimal_num EOL   (rule 235)
    vinst  ->  VI_pop . VI_alu EOL   (rule 237)

    Decimal_num	shift, and go to state 379
    VI_alu	shift, and go to state 380



state 186

    vinst  ->  VI_pop_this . EOL   (rule 243)

    EOL 	shift, and go to state 381



state 187

    vinst  ->  VI_push . VI_alu EOL   (rule 238)

    VI_alu	shift, and go to state 382



state 188

    vinst  ->  VI_restore_acc . EOL   (rule 314)

    EOL 	shift, and go to state 383



state 189

    vinst  ->  VI_return . EOL   (rule 248)

    EOL 	shift, and go to state 384



state 190

    vinst  ->  VI_return_advice . pointcut_specs EOL   (rule 312)

    Name	shift, and go to state 51

    pointcut_specs	go to state 385
    pointcut_spec	go to state 283
    name	go to state 284



state 191

    vinst  ->  VI_return_l . EOL   (rule 247)

    EOL 	shift, and go to state 386



state 192

    vinst  ->  VI_return_n . EOL   (rule 249)

    EOL 	shift, and go to state 387



state 193

    vinst  ->  VI_rshift . stype EOL   (rule 194)

    '(' 	shift, and go to state 295

    stype	go to state 388



state 194

    vinst  ->  VI_save_acc . EOL   (rule 313)

    EOL 	shift, and go to state 389



state 195

    vinst  ->  VI_spoon . EOL   (rule 257)
    vinst  ->  VI_spoon . VI_cancel EOL   (rule 258)

    EOL 	shift, and go to state 390
    VI_cancel	shift, and go to state 391



state 196

    vinst  ->  VI_store_adjust . stype EOL   (rule 307)

    '(' 	shift, and go to state 295

    stype	go to state 392



state 197

    vinst  ->  VI_store_obj . dtype name name EOL   (rule 306)

    '(' 	shift, and go to state 272

    dtype	go to state 393



state 198

    vinst  ->  VI_store_port . dtype strength name EOL   (rule 292)
    vinst  ->  VI_store_port . VI_subbit opt_bit_type dtype strength name EOL   (rule 293)

    VI_subbit	shift, and go to state 394
    '(' 	shift, and go to state 272

    dtype	go to state 395



state 199

    vinst  ->  VI_store_pset_port . dtype strength name name EOL   (rule 294)
    vinst  ->  VI_store_pset_port . VI_subbit opt_bit_type dtype strength name name EOL   (rule 295)

    VI_subbit	shift, and go to state 396
    '(' 	shift, and go to state 272

    dtype	go to state 397



state 200

    vinst  ->  VI_store_sig_g . opt_array_access opt_static dtype strength name EOL   (rule 297)
    vinst  ->  VI_store_sig_g . opt_array_access opt_static VI_subbit opt_bit_type dtype strength name EOL   (rule 300)

    VI_array	shift, and go to state 349
    VI_assoc	shift, and go to state 350
    VI_list	shift, and go to state 351
    VI_marray	shift, and go to state 352
    VI_stridx	shift, and go to state 353

    $default	reduce using rule 354 (opt_array_access)

    opt_array_access	go to state 398



state 201

    vinst  ->  VI_store_sig_l . opt_array_access opt_static dtype strength Decimal_num EOL   (rule 296)
    vinst  ->  VI_store_sig_l . opt_array_access opt_static VI_subbit opt_bit_type dtype strength Decimal_num EOL   (rule 299)

    VI_array	shift, and go to state 349
    VI_assoc	shift, and go to state 350
    VI_list	shift, and go to state 351
    VI_marray	shift, and go to state 352
    VI_stridx	shift, and go to state 353

    $default	reduce using rule 354 (opt_array_access)

    opt_array_access	go to state 399



state 202

    vinst  ->  VI_store_sig_m . opt_array_access opt_static dtype strength name name EOL   (rule 298)
    vinst  ->  VI_store_sig_m . opt_array_access opt_static VI_subbit opt_bit_type dtype strength name name EOL   (rule 301)

    VI_array	shift, and go to state 349
    VI_assoc	shift, and go to state 350
    VI_list	shift, and go to state 351
    VI_marray	shift, and go to state 352
    VI_stridx	shift, and go to state 353

    $default	reduce using rule 354 (opt_array_access)

    opt_array_access	go to state 400



state 203

    vinst  ->  VI_store_sig_static . opt_array_access dtype strength name name name EOL   (rule 303)
    vinst  ->  VI_store_sig_static . opt_array_access VI_subbit opt_bit_type dtype strength name name name EOL   (rule 305)

    VI_array	shift, and go to state 349
    VI_assoc	shift, and go to state 350
    VI_list	shift, and go to state 351
    VI_marray	shift, and go to state 352
    VI_stridx	shift, and go to state 353

    $default	reduce using rule 354 (opt_array_access)

    opt_array_access	go to state 401



state 204

    vinst  ->  VI_store_static . opt_array_access dtype name name name EOL   (rule 302)
    vinst  ->  VI_store_static . opt_array_access VI_subbit opt_bit_type dtype name name name EOL   (rule 304)

    VI_array	shift, and go to state 349
    VI_assoc	shift, and go to state 350
    VI_list	shift, and go to state 351
    VI_marray	shift, and go to state 352
    VI_stridx	shift, and go to state 353

    $default	reduce using rule 354 (opt_array_access)

    opt_array_access	go to state 402



state 205

    vinst  ->  VI_storeg . opt_array_access opt_static dtype name EOL   (rule 288)
    vinst  ->  VI_storeg . opt_array_access opt_static VI_subbit opt_bit_type dtype name EOL   (rule 289)

    VI_array	shift, and go to state 349
    VI_assoc	shift, and go to state 350
    VI_list	shift, and go to state 351
    VI_marray	shift, and go to state 352
    VI_stridx	shift, and go to state 353

    $default	reduce using rule 354 (opt_array_access)

    opt_array_access	go to state 403



state 206

    vinst  ->  VI_storel . opt_array_access opt_static dtype Decimal_num EOL   (rule 286)
    vinst  ->  VI_storel . opt_array_access opt_static VI_subbit opt_bit_type dtype Decimal_num EOL   (rule 287)

    VI_array	shift, and go to state 349
    VI_assoc	shift, and go to state 350
    VI_list	shift, and go to state 351
    VI_marray	shift, and go to state 352
    VI_stridx	shift, and go to state 353

    $default	reduce using rule 354 (opt_array_access)

    opt_array_access	go to state 404



state 207

    vinst  ->  VI_storem . opt_array_access opt_static dtype name name EOL   (rule 290)
    vinst  ->  VI_storem . opt_array_access opt_static VI_subbit opt_bit_type dtype name name EOL   (rule 291)

    VI_array	shift, and go to state 349
    VI_assoc	shift, and go to state 350
    VI_list	shift, and go to state 351
    VI_marray	shift, and go to state 352
    VI_stridx	shift, and go to state 353

    $default	reduce using rule 354 (opt_array_access)

    opt_array_access	go to state 405



state 208

    vinst  ->  VI_sync . VI_clk_of_pset_port edge name name EOL   (rule 265)
    vinst  ->  VI_sync . VI_clk_of_port edge name EOL   (rule 266)
    vinst  ->  VI_sync . VI_clk_of_signal edge EOL   (rule 267)
    vinst  ->  VI_sync . VI_pset_port edge name name EOL   (rule 268)
    vinst  ->  VI_sync . VI_port edge name EOL   (rule 269)
    vinst  ->  VI_sync . VI_signal edge EOL   (rule 270)

    VI_clk_of_port	shift, and go to state 406
    VI_clk_of_pset_port	shift, and go to state 407
    VI_clk_of_signal	shift, and go to state 408
    VI_port	shift, and go to state 409
    VI_pset_port	shift, and go to state 410
    VI_signal	shift, and go to state 411



state 209

    vinst  ->  VI_terminate . EOL   (rule 263)

    EOL 	shift, and go to state 412



state 210

    vinst  ->  VI_times . dtype EOL   (rule 185)

    '(' 	shift, and go to state 272

    dtype	go to state 413



state 211

    vinst  ->  VI_to_int . EOL   (rule 177)

    EOL 	shift, and go to state 414



state 212

    vinst  ->  VI_u_and . stype EOL   (rule 216)

    '(' 	shift, and go to state 295

    stype	go to state 415



state 213

    vinst  ->  VI_u_eor . stype EOL   (rule 218)

    '(' 	shift, and go to state 295

    stype	go to state 416



state 214

    vinst  ->  VI_u_minus . stype EOL   (rule 213)

    '(' 	shift, and go to state 295

    stype	go to state 417



state 215

    vinst  ->  VI_u_nand . stype EOL   (rule 219)

    '(' 	shift, and go to state 295

    stype	go to state 418



state 216

    vinst  ->  VI_u_neor . stype EOL   (rule 221)

    '(' 	shift, and go to state 295

    stype	go to state 419



state 217

    vinst  ->  VI_u_nor . stype EOL   (rule 220)

    '(' 	shift, and go to state 295

    stype	go to state 420



state 218

    vinst  ->  VI_u_not . stype EOL   (rule 215)

    '(' 	shift, and go to state 295

    stype	go to state 421



state 219

    vinst  ->  VI_u_or . stype EOL   (rule 217)

    '(' 	shift, and go to state 295

    stype	go to state 422



state 220

    vinst  ->  VI_u_tilde . stype EOL   (rule 214)

    '(' 	shift, and go to state 295

    stype	go to state 423



state 221

    vinst  ->  VI_urshift . stype EOL   (rule 195)

    '(' 	shift, and go to state 295

    stype	go to state 424



state 222

    opt_var  ->  VI_var .   (rule 109)

    $default	reduce using rule 109 (opt_var)



state 223

    vinst  ->  VI_veri_call . name Decimal_num EOL   (rule 253)

    Name	shift, and go to state 51

    name	go to state 425



state 224

    vinst  ->  VI_void . EOL   (rule 176)

    EOL 	shift, and go to state 426



state 225

    vinst  ->  empty_line .   (rule 162)

    $default	reduce using rule 162 (vinst)



state 226

    vinst  ->  debug_information .   (rule 163)

    $default	reduce using rule 163 (vinst)



state 227

    vinst  ->  enum_dcl .   (rule 161)

    $default	reduce using rule 161 (vinst)



state 228

    vinst  ->  opt_var . VI_arg Decimal_num Decimal_num data_type name array_range opt_flags EOL   (rule 175)

    VI_arg	shift, and go to state 427



state 229

    init_code  ->  VI_initial_begin EOL opt_vinsts . VI_initial_end EOL   (rule 150)

    VI_initial_end	shift, and go to state 428



state 230

    opt_vinsts  ->  vinsts .   (rule 158)
    vinsts  ->  vinsts . vinst   (rule 160)

    Identifier	shift, and go to state 99
    DebugInfo	shift, and go to state 7
    EOL 	shift, and go to state 8
    VI_Qeqeq	shift, and go to state 100
    VI_alloc	shift, and go to state 101
    VI_alloc_func	shift, and go to state 102
    VI_alloc_static	shift, and go to state 103
    VI_and	shift, and go to state 104
    VI_breakpoint	shift, and go to state 105
    VI_call	shift, and go to state 106
    VI_call_m	shift, and go to state 107
    VI_call_a	shift, and go to state 108
    VI_call_advice	shift, and go to state 109
    VI_chk_overwrite	shift, and go to state 110
    VI_cmp	shift, and go to state 111
    VI_cmpx	shift, and go to state 112
    VI_cmpz	shift, and go to state 113
    VI_concat	shift, and go to state 114
    VI_copy	shift, and go to state 115
    VI_copy_obj	shift, and go to state 116
    VI_convert	shift, and go to state 117
    VI_dec	shift, and go to state 118
    VI_div	shift, and go to state 119
    VI_dup	shift, and go to state 120
    VI_duplicate	shift, and go to state 121
    VI_enter_advice	shift, and go to state 122
    VI_enum	shift, and go to state 16
    VI_eor	shift, and go to state 123
    VI_eqQeq	shift, and go to state 124
    VI_eqeq	shift, and go to state 125
    VI_eqeqQ	shift, and go to state 126
    VI_eqeqeq	shift, and go to state 127
    VI_eqCeq	shift, and go to state 128
    VI_Qne	shift, and go to state 129
    VI_error	shift, and go to state 130
    VI_exec	shift, and go to state 131
    VI_exit	shift, and go to state 132
    VI_fork	shift, and go to state 133
    VI_ge	shift, and go to state 134
    VI_gen_child	shift, and go to state 135
    VI_gen_frame	shift, and go to state 136
    VI_gen_m_frame	shift, and go to state 137
    VI_gen_a_frame	shift, and go to state 138
    VI_get_this	shift, and go to state 139
    VI_get_sig_subbit	shift, and go to state 140
    VI_get_subbit	shift, and go to state 141
    VI_get_super	shift, and go to state 142
    VI_get_child	shift, and go to state 143
    VI_get_return	shift, and go to state 144
    VI_gt	shift, and go to state 145
    VI_inc	shift, and go to state 146
    VI_jmp	shift, and go to state 147
    VI_jnz	shift, and go to state 148
    VI_join	shift, and go to state 149
    VI_jz	shift, and go to state 150
    VI_knife	shift, and go to state 151
    VI_le	shift, and go to state 152
    VI_list	shift, and go to state 153
    VI_load_const	shift, and go to state 154
    VI_load_one	shift, and go to state 155
    VI_load_port	shift, and go to state 156
    VI_load_port_ptr	shift, and go to state 157
    VI_load_pset_port	shift, and go to state 158
    VI_load_pset_port_ptr	shift, and go to state 159
    VI_load_sig_pt	shift, and go to state 160
    VI_load_static	shift, and go to state 161
    VI_load_super	shift, and go to state 162
    VI_load_this	shift, and go to state 163
    VI_load_thread	shift, and go to state 164
    VI_load_zero	shift, and go to state 165
    VI_loadg	shift, and go to state 166
    VI_loadl	shift, and go to state 167
    VI_loadm	shift, and go to state 168
    VI_lshift	shift, and go to state 169
    VI_lt	shift, and go to state 170
    VI_lvar	shift, and go to state 171
    VI_minus	shift, and go to state 172
    VI_mod	shift, and go to state 173
    VI_nand	shift, and go to state 174
    VI_ne	shift, and go to state 175
    VI_neor	shift, and go to state 176
    VI_neqeq	shift, and go to state 177
    VI_new	shift, and go to state 178
    VI_new_obj	shift, and go to state 179
    VI_nor	shift, and go to state 180
    VI_null	shift, and go to state 181
    VI_or	shift, and go to state 182
    VI_overwrite	shift, and go to state 183
    VI_plus	shift, and go to state 184
    VI_pop	shift, and go to state 185
    VI_pop_this	shift, and go to state 186
    VI_push	shift, and go to state 187
    VI_restore_acc	shift, and go to state 188
    VI_return	shift, and go to state 189
    VI_return_advice	shift, and go to state 190
    VI_return_l	shift, and go to state 191
    VI_return_n	shift, and go to state 192
    VI_rshift	shift, and go to state 193
    VI_save_acc	shift, and go to state 194
    VI_spoon	shift, and go to state 195
    VI_store_adjust	shift, and go to state 196
    VI_store_obj	shift, and go to state 197
    VI_store_port	shift, and go to state 198
    VI_store_pset_port	shift, and go to state 199
    VI_store_sig_g	shift, and go to state 200
    VI_store_sig_l	shift, and go to state 201
    VI_store_sig_m	shift, and go to state 202
    VI_store_sig_static	shift, and go to state 203
    VI_store_static	shift, and go to state 204
    VI_storeg	shift, and go to state 205
    VI_storel	shift, and go to state 206
    VI_storem	shift, and go to state 207
    VI_sync	shift, and go to state 208
    VI_terminate	shift, and go to state 209
    VI_times	shift, and go to state 210
    VI_to_int	shift, and go to state 211
    VI_u_and	shift, and go to state 212
    VI_u_eor	shift, and go to state 213
    VI_u_minus	shift, and go to state 214
    VI_u_nand	shift, and go to state 215
    VI_u_neor	shift, and go to state 216
    VI_u_nor	shift, and go to state 217
    VI_u_not	shift, and go to state 218
    VI_u_or	shift, and go to state 219
    VI_u_tilde	shift, and go to state 220
    VI_urshift	shift, and go to state 221
    VI_var	shift, and go to state 222
    VI_veri_call	shift, and go to state 223
    VI_void	shift, and go to state 224

    VI_arg	reduce using rule 108 (opt_var)
    $default	reduce using rule 158 (opt_vinsts)

    empty_line	go to state 225
    debug_information	go to state 226
    enum_dcl	go to state 227
    opt_var	go to state 228
    vinst	go to state 429



state 231

    vinsts  ->  vinst .   (rule 159)

    $default	reduce using rule 159 (vinsts)



state 232

    mfunc_code  ->  VI_mfunc name name . EOL opt_vinsts VI_func_end EOL   (rule 153)

    EOL 	shift, and go to state 430



state 233

    port_info  ->  VI_port direction '[' . Decimal_num ':' Decimal_num ']' name opt_port_attrib EOL   (rule 29)

    Decimal_num	shift, and go to state 431



state 234

    portset_info  ->  VI_portset name '{' . EOL port_infos '}' EOL   (rule 45)

    EOL 	shift, and go to state 432



state 235

    static_var_dcl  ->  VI_stat_var name name . data_type name array_range opt_var_attribs EOL   (rule 148)

    VI_bit	shift, and go to state 237
    VI_class	shift, and go to state 238
    VI_class_type	shift, and go to state 239
    VI_double	shift, and go to state 240
    VI_enum	shift, and go to state 241
    VI_float	shift, and go to state 242
    VI_int	shift, and go to state 243
    VI_long	shift, and go to state 244
    VI_signal	shift, and go to state 245
    VI_string	shift, and go to state 246
    VI_sys_class	shift, and go to state 247
    VI_void	shift, and go to state 248

    data_type	go to state 433



state 236

    static_init_code  ->  VI_static_init EOL opt_vinsts . VI_static_init_end EOL   (rule 149)

    VI_static_init_end	shift, and go to state 434



state 237

    data_type  ->  VI_bit . '[' Decimal_num ':' Decimal_num ']'   (rule 56)

    '[' 	shift, and go to state 435



state 238

    data_type  ->  VI_class . name   (rule 57)

    Name	shift, and go to state 51

    name	go to state 436



state 239

    data_type  ->  VI_class_type .   (rule 61)

    $default	reduce using rule 61 (data_type)



state 240

    data_type  ->  VI_double .   (rule 55)

    $default	reduce using rule 55 (data_type)



state 241

    data_type  ->  VI_enum . name   (rule 62)

    Name	shift, and go to state 51

    name	go to state 437



state 242

    data_type  ->  VI_float .   (rule 54)

    $default	reduce using rule 54 (data_type)



state 243

    data_type  ->  VI_int .   (rule 52)

    $default	reduce using rule 52 (data_type)



state 244

    data_type  ->  VI_long .   (rule 53)

    $default	reduce using rule 53 (data_type)



state 245

    data_type  ->  VI_signal .   (rule 60)

    $default	reduce using rule 60 (data_type)



state 246

    data_type  ->  VI_string .   (rule 59)

    $default	reduce using rule 59 (data_type)



state 247

    data_type  ->  VI_sys_class . name   (rule 58)

    Name	shift, and go to state 51

    name	go to state 438



state 248

    data_type  ->  VI_void .   (rule 51)

    $default	reduce using rule 51 (data_type)



state 249

    variable_dcl  ->  VI_variable Decimal_num data_type . name array_range opt_var_attribs EOL   (rule 50)

    Name	shift, and go to state 51

    name	go to state 439



state 250

    verilog_task_info  ->  VI_verilog_task Name '(' . EOL opt_arguments ')' String_lit EOL   (rule 124)

    EOL 	shift, and go to state 440



state 251

    aspect_info  ->  VI_aspect name Decimal_num String_lit . '{' EOL @2 opt_aspect_members '}' EOL   (rule 123)

    '{' 	shift, and go to state 441



state 252

    advice_code  ->  VI_advice name name EOL . opt_vinsts VI_advice_end EOL   (rule 156)

    Identifier	shift, and go to state 99
    DebugInfo	shift, and go to state 7
    EOL 	shift, and go to state 8
    VI_Qeqeq	shift, and go to state 100
    VI_alloc	shift, and go to state 101
    VI_alloc_func	shift, and go to state 102
    VI_alloc_static	shift, and go to state 103
    VI_and	shift, and go to state 104
    VI_breakpoint	shift, and go to state 105
    VI_call	shift, and go to state 106
    VI_call_m	shift, and go to state 107
    VI_call_a	shift, and go to state 108
    VI_call_advice	shift, and go to state 109
    VI_chk_overwrite	shift, and go to state 110
    VI_cmp	shift, and go to state 111
    VI_cmpx	shift, and go to state 112
    VI_cmpz	shift, and go to state 113
    VI_concat	shift, and go to state 114
    VI_copy	shift, and go to state 115
    VI_copy_obj	shift, and go to state 116
    VI_convert	shift, and go to state 117
    VI_dec	shift, and go to state 118
    VI_div	shift, and go to state 119
    VI_dup	shift, and go to state 120
    VI_duplicate	shift, and go to state 121
    VI_enter_advice	shift, and go to state 122
    VI_enum	shift, and go to state 16
    VI_eor	shift, and go to state 123
    VI_eqQeq	shift, and go to state 124
    VI_eqeq	shift, and go to state 125
    VI_eqeqQ	shift, and go to state 126
    VI_eqeqeq	shift, and go to state 127
    VI_eqCeq	shift, and go to state 128
    VI_Qne	shift, and go to state 129
    VI_error	shift, and go to state 130
    VI_exec	shift, and go to state 131
    VI_exit	shift, and go to state 132
    VI_fork	shift, and go to state 133
    VI_ge	shift, and go to state 134
    VI_gen_child	shift, and go to state 135
    VI_gen_frame	shift, and go to state 136
    VI_gen_m_frame	shift, and go to state 137
    VI_gen_a_frame	shift, and go to state 138
    VI_get_this	shift, and go to state 139
    VI_get_sig_subbit	shift, and go to state 140
    VI_get_subbit	shift, and go to state 141
    VI_get_super	shift, and go to state 142
    VI_get_child	shift, and go to state 143
    VI_get_return	shift, and go to state 144
    VI_gt	shift, and go to state 145
    VI_inc	shift, and go to state 146
    VI_jmp	shift, and go to state 147
    VI_jnz	shift, and go to state 148
    VI_join	shift, and go to state 149
    VI_jz	shift, and go to state 150
    VI_knife	shift, and go to state 151
    VI_le	shift, and go to state 152
    VI_list	shift, and go to state 153
    VI_load_const	shift, and go to state 154
    VI_load_one	shift, and go to state 155
    VI_load_port	shift, and go to state 156
    VI_load_port_ptr	shift, and go to state 157
    VI_load_pset_port	shift, and go to state 158
    VI_load_pset_port_ptr	shift, and go to state 159
    VI_load_sig_pt	shift, and go to state 160
    VI_load_static	shift, and go to state 161
    VI_load_super	shift, and go to state 162
    VI_load_this	shift, and go to state 163
    VI_load_thread	shift, and go to state 164
    VI_load_zero	shift, and go to state 165
    VI_loadg	shift, and go to state 166
    VI_loadl	shift, and go to state 167
    VI_loadm	shift, and go to state 168
    VI_lshift	shift, and go to state 169
    VI_lt	shift, and go to state 170
    VI_lvar	shift, and go to state 171
    VI_minus	shift, and go to state 172
    VI_mod	shift, and go to state 173
    VI_nand	shift, and go to state 174
    VI_ne	shift, and go to state 175
    VI_neor	shift, and go to state 176
    VI_neqeq	shift, and go to state 177
    VI_new	shift, and go to state 178
    VI_new_obj	shift, and go to state 179
    VI_nor	shift, and go to state 180
    VI_null	shift, and go to state 181
    VI_or	shift, and go to state 182
    VI_overwrite	shift, and go to state 183
    VI_plus	shift, and go to state 184
    VI_pop	shift, and go to state 185
    VI_pop_this	shift, and go to state 186
    VI_push	shift, and go to state 187
    VI_restore_acc	shift, and go to state 188
    VI_return	shift, and go to state 189
    VI_return_advice	shift, and go to state 190
    VI_return_l	shift, and go to state 191
    VI_return_n	shift, and go to state 192
    VI_rshift	shift, and go to state 193
    VI_save_acc	shift, and go to state 194
    VI_spoon	shift, and go to state 195
    VI_store_adjust	shift, and go to state 196
    VI_store_obj	shift, and go to state 197
    VI_store_port	shift, and go to state 198
    VI_store_pset_port	shift, and go to state 199
    VI_store_sig_g	shift, and go to state 200
    VI_store_sig_l	shift, and go to state 201
    VI_store_sig_m	shift, and go to state 202
    VI_store_sig_static	shift, and go to state 203
    VI_store_static	shift, and go to state 204
    VI_storeg	shift, and go to state 205
    VI_storel	shift, and go to state 206
    VI_storem	shift, and go to state 207
    VI_sync	shift, and go to state 208
    VI_terminate	shift, and go to state 209
    VI_times	shift, and go to state 210
    VI_to_int	shift, and go to state 211
    VI_u_and	shift, and go to state 212
    VI_u_eor	shift, and go to state 213
    VI_u_minus	shift, and go to state 214
    VI_u_nand	shift, and go to state 215
    VI_u_neor	shift, and go to state 216
    VI_u_nor	shift, and go to state 217
    VI_u_not	shift, and go to state 218
    VI_u_or	shift, and go to state 219
    VI_u_tilde	shift, and go to state 220
    VI_urshift	shift, and go to state 221
    VI_var	shift, and go to state 222
    VI_veri_call	shift, and go to state 223
    VI_void	shift, and go to state 224

    VI_advice_end	reduce using rule 157 (opt_vinsts)
    $default	reduce using rule 108 (opt_var)

    empty_line	go to state 225
    debug_information	go to state 226
    enum_dcl	go to state 227
    opt_var	go to state 228
    opt_vinsts	go to state 442
    vinsts	go to state 230
    vinst	go to state 231



state 253

    afunc_code  ->  VI_afunc name name EOL . opt_vinsts VI_func_end EOL   (rule 155)

    Identifier	shift, and go to state 99
    DebugInfo	shift, and go to state 7
    EOL 	shift, and go to state 8
    VI_Qeqeq	shift, and go to state 100
    VI_alloc	shift, and go to state 101
    VI_alloc_func	shift, and go to state 102
    VI_alloc_static	shift, and go to state 103
    VI_and	shift, and go to state 104
    VI_breakpoint	shift, and go to state 105
    VI_call	shift, and go to state 106
    VI_call_m	shift, and go to state 107
    VI_call_a	shift, and go to state 108
    VI_call_advice	shift, and go to state 109
    VI_chk_overwrite	shift, and go to state 110
    VI_cmp	shift, and go to state 111
    VI_cmpx	shift, and go to state 112
    VI_cmpz	shift, and go to state 113
    VI_concat	shift, and go to state 114
    VI_copy	shift, and go to state 115
    VI_copy_obj	shift, and go to state 116
    VI_convert	shift, and go to state 117
    VI_dec	shift, and go to state 118
    VI_div	shift, and go to state 119
    VI_dup	shift, and go to state 120
    VI_duplicate	shift, and go to state 121
    VI_enter_advice	shift, and go to state 122
    VI_enum	shift, and go to state 16
    VI_eor	shift, and go to state 123
    VI_eqQeq	shift, and go to state 124
    VI_eqeq	shift, and go to state 125
    VI_eqeqQ	shift, and go to state 126
    VI_eqeqeq	shift, and go to state 127
    VI_eqCeq	shift, and go to state 128
    VI_Qne	shift, and go to state 129
    VI_error	shift, and go to state 130
    VI_exec	shift, and go to state 131
    VI_exit	shift, and go to state 132
    VI_fork	shift, and go to state 133
    VI_ge	shift, and go to state 134
    VI_gen_child	shift, and go to state 135
    VI_gen_frame	shift, and go to state 136
    VI_gen_m_frame	shift, and go to state 137
    VI_gen_a_frame	shift, and go to state 138
    VI_get_this	shift, and go to state 139
    VI_get_sig_subbit	shift, and go to state 140
    VI_get_subbit	shift, and go to state 141
    VI_get_super	shift, and go to state 142
    VI_get_child	shift, and go to state 143
    VI_get_return	shift, and go to state 144
    VI_gt	shift, and go to state 145
    VI_inc	shift, and go to state 146
    VI_jmp	shift, and go to state 147
    VI_jnz	shift, and go to state 148
    VI_join	shift, and go to state 149
    VI_jz	shift, and go to state 150
    VI_knife	shift, and go to state 151
    VI_le	shift, and go to state 152
    VI_list	shift, and go to state 153
    VI_load_const	shift, and go to state 154
    VI_load_one	shift, and go to state 155
    VI_load_port	shift, and go to state 156
    VI_load_port_ptr	shift, and go to state 157
    VI_load_pset_port	shift, and go to state 158
    VI_load_pset_port_ptr	shift, and go to state 159
    VI_load_sig_pt	shift, and go to state 160
    VI_load_static	shift, and go to state 161
    VI_load_super	shift, and go to state 162
    VI_load_this	shift, and go to state 163
    VI_load_thread	shift, and go to state 164
    VI_load_zero	shift, and go to state 165
    VI_loadg	shift, and go to state 166
    VI_loadl	shift, and go to state 167
    VI_loadm	shift, and go to state 168
    VI_lshift	shift, and go to state 169
    VI_lt	shift, and go to state 170
    VI_lvar	shift, and go to state 171
    VI_minus	shift, and go to state 172
    VI_mod	shift, and go to state 173
    VI_nand	shift, and go to state 174
    VI_ne	shift, and go to state 175
    VI_neor	shift, and go to state 176
    VI_neqeq	shift, and go to state 177
    VI_new	shift, and go to state 178
    VI_new_obj	shift, and go to state 179
    VI_nor	shift, and go to state 180
    VI_null	shift, and go to state 181
    VI_or	shift, and go to state 182
    VI_overwrite	shift, and go to state 183
    VI_plus	shift, and go to state 184
    VI_pop	shift, and go to state 185
    VI_pop_this	shift, and go to state 186
    VI_push	shift, and go to state 187
    VI_restore_acc	shift, and go to state 188
    VI_return	shift, and go to state 189
    VI_return_advice	shift, and go to state 190
    VI_return_l	shift, and go to state 191
    VI_return_n	shift, and go to state 192
    VI_rshift	shift, and go to state 193
    VI_save_acc	shift, and go to state 194
    VI_spoon	shift, and go to state 195
    VI_store_adjust	shift, and go to state 196
    VI_store_obj	shift, and go to state 197
    VI_store_port	shift, and go to state 198
    VI_store_pset_port	shift, and go to state 199
    VI_store_sig_g	shift, and go to state 200
    VI_store_sig_l	shift, and go to state 201
    VI_store_sig_m	shift, and go to state 202
    VI_store_sig_static	shift, and go to state 203
    VI_store_static	shift, and go to state 204
    VI_storeg	shift, and go to state 205
    VI_storel	shift, and go to state 206
    VI_storem	shift, and go to state 207
    VI_sync	shift, and go to state 208
    VI_terminate	shift, and go to state 209
    VI_times	shift, and go to state 210
    VI_to_int	shift, and go to state 211
    VI_u_and	shift, and go to state 212
    VI_u_eor	shift, and go to state 213
    VI_u_minus	shift, and go to state 214
    VI_u_nand	shift, and go to state 215
    VI_u_neor	shift, and go to state 216
    VI_u_nor	shift, and go to state 217
    VI_u_not	shift, and go to state 218
    VI_u_or	shift, and go to state 219
    VI_u_tilde	shift, and go to state 220
    VI_urshift	shift, and go to state 221
    VI_var	shift, and go to state 222
    VI_veri_call	shift, and go to state 223
    VI_void	shift, and go to state 224

    VI_func_end	reduce using rule 157 (opt_vinsts)
    $default	reduce using rule 108 (opt_var)

    empty_line	go to state 225
    debug_information	go to state 226
    enum_dcl	go to state 227
    opt_var	go to state 228
    opt_vinsts	go to state 443
    vinsts	go to state 230
    vinst	go to state 231



state 254

    opt_extention  ->  VI_extends name .   (rule 126)

    $default	reduce using rule 126 (opt_extention)



state 255

    class_attrib  ->  VI_abstract .   (rule 131)

    $default	reduce using rule 131 (class_attrib)



state 256

    class_attrib  ->  VI_extern .   (rule 134)

    $default	reduce using rule 134 (class_attrib)



state 257

    class_attrib  ->  VI_final .   (rule 133)

    $default	reduce using rule 133 (class_attrib)



state 258

    class_attrib  ->  VI_local .   (rule 132)

    $default	reduce using rule 132 (class_attrib)



state 259

    class_info  ->  VI_class name opt_extention opt_class_attribs . Decimal_num String_lit '{' EOL @1 opt_class_members '}' EOL   (rule 121)

    Decimal_num	shift, and go to state 444



state 260

    opt_class_attribs  ->  class_attribs .   (rule 128)
    class_attribs  ->  class_attribs . class_attrib   (rule 130)

    VI_abstract	shift, and go to state 255
    VI_extern	shift, and go to state 256
    VI_final	shift, and go to state 257
    VI_local	shift, and go to state 258

    $default	reduce using rule 128 (opt_class_attribs)

    class_attrib	go to state 445



state 261

    class_attribs  ->  class_attrib .   (rule 129)

    $default	reduce using rule 129 (class_attribs)



state 262

    class_alloc_code  ->  VI_class_alloc name EOL opt_vinsts . VI_class_alloc_end EOL   (rule 152)

    VI_class_alloc_end	shift, and go to state 446



state 263

    class_init_code  ->  VI_class_initial_begin name EOL opt_vinsts . VI_class_initial_end EOL   (rule 151)

    VI_class_initial_end	shift, and go to state 447



state 264

    connection_info  ->  VI_connection VI_port name '=' . String_lit EOL   (rule 48)

    String_lit	shift, and go to state 448



state 265

    connection_info  ->  VI_connection VI_portset name name . '=' String_lit EOL   (rule 49)

    '=' 	shift, and go to state 449



state 266

    enum_dcl  ->  VI_enum name enum_members EOL .   (rule 82)

    $default	reduce using rule 82 (enum_dcl)



state 267

    enum_members  ->  enum_members name .   (rule 84)

    $default	reduce using rule 84 (enum_members)



state 268

    func_code  ->  VI_func name EOL opt_vinsts . VI_func_end EOL   (rule 154)

    VI_func_end	shift, and go to state 450



state 269

    function_info  ->  VI_function Decimal_num opt_func_options data_type . name Decimal_num String_lit '(' EOL opt_arguments ')' EOL   (rule 85)

    Name	shift, and go to state 51

    name	go to state 451



state 270

    func_options  ->  func_options func_option .   (rule 89)

    $default	reduce using rule 89 (func_options)



state 271

    vinst  ->  Identifier ':' . EOL   (rule 164)

    EOL 	shift, and go to state 452



state 272

    dtype  ->  '(' . type_code ',' type_code ')'   (rule 324)

    VI_array	shift, and go to state 453
    VI_assoc	shift, and go to state 454
    VI_bit	shift, and go to state 455
    VI_enum	shift, and go to state 456
    VI_float	shift, and go to state 457
    VI_int	shift, and go to state 458
    VI_list	shift, and go to state 459
    VI_marray	shift, and go to state 460
    VI_null	shift, and go to state 461
    VI_obj	shift, and go to state 462
    VI_ptset	shift, and go to state 463
    VI_signal	shift, and go to state 464
    VI_stridx	shift, and go to state 465
    VI_string	shift, and go to state 466
    VI_void	shift, and go to state 467

    type_code	go to state 468



state 273

    vinst  ->  VI_Qeqeq dtype . EOL   (rule 207)

    EOL 	shift, and go to state 469



state 274

    vinst  ->  VI_alloc Decimal_num . data_type name array_range opt_flags EOL   (rule 173)

    VI_bit	shift, and go to state 237
    VI_class	shift, and go to state 238
    VI_class_type	shift, and go to state 239
    VI_double	shift, and go to state 240
    VI_enum	shift, and go to state 241
    VI_float	shift, and go to state 242
    VI_int	shift, and go to state 243
    VI_long	shift, and go to state 244
    VI_signal	shift, and go to state 245
    VI_string	shift, and go to state 246
    VI_sys_class	shift, and go to state 247
    VI_void	shift, and go to state 248

    data_type	go to state 470



state 275

    vinst  ->  VI_alloc_func Decimal_num . name   (rule 308)

    Name	shift, and go to state 51

    name	go to state 471



state 276

    vinst  ->  VI_alloc_static name . name Decimal_num data_type name array_range opt_flags EOL   (rule 174)

    Name	shift, and go to state 51

    name	go to state 472



state 277

    vinst  ->  VI_and dtype . EOL   (rule 188)

    EOL 	shift, and go to state 473



state 278

    vinst  ->  VI_breakpoint String_lit . EOL   (rule 264)

    EOL 	shift, and go to state 474



state 279

    vinst  ->  VI_call name . Decimal_num EOL   (rule 250)

    Decimal_num	shift, and go to state 475



state 280

    vinst  ->  VI_call_m name . name Decimal_num EOL   (rule 251)

    Name	shift, and go to state 51

    name	go to state 476



state 281

    vinst  ->  VI_call_a name . name Decimal_num EOL   (rule 252)

    Name	shift, and go to state 51

    name	go to state 477



state 282

    vinst  ->  VI_call_advice pointcut_specs . EOL   (rule 311)
    pointcut_specs  ->  pointcut_specs . pointcut_spec   (rule 319)

    Name	shift, and go to state 51
    EOL 	shift, and go to state 478

    pointcut_spec	go to state 479
    name	go to state 284



state 283

    pointcut_specs  ->  pointcut_spec .   (rule 318)

    $default	reduce using rule 318 (pointcut_specs)



state 284

    pointcut_spec  ->  name . opt_class_pointcut   (rule 320)

    '(' 	shift, and go to state 480

    $default	reduce using rule 321 (opt_class_pointcut)

    opt_class_pointcut	go to state 481



state 285

    vinst  ->  VI_chk_overwrite Decimal_num . name   (rule 310)

    Name	shift, and go to state 51

    name	go to state 482



state 286

    vinst  ->  VI_cmp dtype . EOL   (rule 210)

    EOL 	shift, and go to state 483



state 287

    vinst  ->  VI_cmpx dtype . EOL   (rule 212)

    EOL 	shift, and go to state 484



state 288

    vinst  ->  VI_cmpz dtype . EOL   (rule 211)

    EOL 	shift, and go to state 485



state 289

    vinst  ->  VI_concat dtype . EOL   (rule 231)

    EOL 	shift, and go to state 486



state 290

    vinst  ->  VI_copy VI_alu . Decimal_num EOL   (rule 239)

    Decimal_num	shift, and go to state 487



state 291

    vinst  ->  VI_copy_obj EOL .   (rule 171)

    $default	reduce using rule 171 (vinst)



state 292

    vinst  ->  VI_convert VI_bit . Decimal_num Decimal_num stype EOL   (rule 178)

    Decimal_num	shift, and go to state 488



state 293

    vinst  ->  VI_convert VI_float . stype EOL   (rule 180)

    '(' 	shift, and go to state 295

    stype	go to state 489



state 294

    vinst  ->  VI_convert VI_string . stype EOL   (rule 179)

    '(' 	shift, and go to state 295

    stype	go to state 490



state 295

    stype  ->  '(' . type_code ')'   (rule 323)

    VI_array	shift, and go to state 453
    VI_assoc	shift, and go to state 454
    VI_bit	shift, and go to state 455
    VI_enum	shift, and go to state 456
    VI_float	shift, and go to state 457
    VI_int	shift, and go to state 458
    VI_list	shift, and go to state 459
    VI_marray	shift, and go to state 460
    VI_null	shift, and go to state 461
    VI_obj	shift, and go to state 462
    VI_ptset	shift, and go to state 463
    VI_signal	shift, and go to state 464
    VI_stridx	shift, and go to state 465
    VI_string	shift, and go to state 466
    VI_void	shift, and go to state 467

    type_code	go to state 491



state 296

    vinst  ->  VI_dec stype . EOL   (rule 182)

    EOL 	shift, and go to state 492



state 297

    vinst  ->  VI_div dtype . EOL   (rule 186)

    EOL 	shift, and go to state 493



state 298

    vinst  ->  VI_dup Decimal_num . EOL   (rule 236)

    EOL 	shift, and go to state 494



state 299

    vinst  ->  VI_duplicate stype . EOL   (rule 232)

    EOL 	shift, and go to state 495



state 300

    vinst  ->  VI_enter_advice EOL .   (rule 315)

    $default	reduce using rule 315 (vinst)



state 301

    vinst  ->  VI_eor dtype . EOL   (rule 190)

    EOL 	shift, and go to state 496



state 302

    vinst  ->  VI_eqQeq dtype . EOL   (rule 205)

    EOL 	shift, and go to state 497



state 303

    vinst  ->  VI_eqeq dtype . EOL   (rule 199)

    EOL 	shift, and go to state 498



state 304

    vinst  ->  VI_eqeqQ dtype . EOL   (rule 206)

    EOL 	shift, and go to state 499



state 305

    vinst  ->  VI_eqeqeq dtype . EOL   (rule 203)

    EOL 	shift, and go to state 500



state 306

    ttype  ->  '(' . type_code ',' type_code ',' type_code ')'   (rule 325)

    VI_array	shift, and go to state 453
    VI_assoc	shift, and go to state 454
    VI_bit	shift, and go to state 455
    VI_enum	shift, and go to state 456
    VI_float	shift, and go to state 457
    VI_int	shift, and go to state 458
    VI_list	shift, and go to state 459
    VI_marray	shift, and go to state 460
    VI_null	shift, and go to state 461
    VI_obj	shift, and go to state 462
    VI_ptset	shift, and go to state 463
    VI_signal	shift, and go to state 464
    VI_stridx	shift, and go to state 465
    VI_string	shift, and go to state 466
    VI_void	shift, and go to state 467

    type_code	go to state 501



state 307

    vinst  ->  VI_eqCeq ttype . EOL   (rule 209)

    EOL 	shift, and go to state 502



state 308

    vinst  ->  VI_Qne dtype . EOL   (rule 208)

    EOL 	shift, and go to state 503



state 309

    label  ->  Identifier .   (rule 349)

    $default	reduce using rule 349 (label)



state 310

    vinst  ->  VI_exec label . EOL   (rule 255)

    EOL 	shift, and go to state 504



state 311

    vinst  ->  VI_exit EOL .   (rule 260)

    $default	reduce using rule 260 (vinst)



state 312

    vinst  ->  VI_exit VI_p_and . EOL   (rule 261)

    EOL 	shift, and go to state 505



state 313

    vinst  ->  VI_exit VI_p_or . EOL   (rule 262)

    EOL 	shift, and go to state 506



state 314

    vinst  ->  VI_fork EOL .   (rule 254)

    $default	reduce using rule 254 (vinst)



state 315

    vinst  ->  VI_ge dtype . EOL   (rule 201)

    EOL 	shift, and go to state 507



state 316

    vinst  ->  VI_gen_child EOL .   (rule 172)

    $default	reduce using rule 172 (vinst)



state 317

    vinst  ->  VI_gen_frame EOL .   (rule 240)

    $default	reduce using rule 240 (vinst)



state 318

    vinst  ->  VI_gen_m_frame EOL .   (rule 241)

    $default	reduce using rule 241 (vinst)



state 319

    vinst  ->  VI_gen_a_frame EOL .   (rule 242)

    $default	reduce using rule 242 (vinst)



state 320

    vinst  ->  VI_get_this EOL .   (rule 228)

    $default	reduce using rule 228 (vinst)



state 321

    vinst  ->  VI_get_sig_subbit EOL .   (rule 284)

    $default	reduce using rule 284 (vinst)



state 322

    opt_bit_type  ->  VI_i_endian . '[' Decimal_num ':' Decimal_num ']'   (rule 363)

    '[' 	shift, and go to state 508



state 323

    opt_bit_type  ->  VI_nz_lsb . '[' Decimal_num ':' Decimal_num ']'   (rule 364)

    '[' 	shift, and go to state 509



state 324

    vinst  ->  VI_get_subbit opt_bit_type . EOL   (rule 234)

    EOL 	shift, and go to state 510



state 325

    vinst  ->  VI_get_super opt_var . Decimal_num EOL   (rule 229)

    Decimal_num	shift, and go to state 511



state 326

    vinst  ->  VI_get_child opt_var . Decimal_num EOL   (rule 230)

    Decimal_num	shift, and go to state 512



state 327

    vinst  ->  VI_get_return EOL .   (rule 316)

    $default	reduce using rule 316 (vinst)



state 328

    vinst  ->  VI_gt dtype . EOL   (rule 198)

    EOL 	shift, and go to state 513



state 329

    vinst  ->  VI_inc stype . EOL   (rule 181)

    EOL 	shift, and go to state 514



state 330

    vinst  ->  VI_jmp label . EOL   (rule 244)

    EOL 	shift, and go to state 515



state 331

    vinst  ->  VI_jnz stype . label EOL   (rule 246)

    Identifier	shift, and go to state 309

    label	go to state 516



state 332

    vinst  ->  VI_join EOL .   (rule 256)

    $default	reduce using rule 256 (vinst)



state 333

    vinst  ->  VI_jz stype . label EOL   (rule 245)

    Identifier	shift, and go to state 309

    label	go to state 517



state 334

    vinst  ->  VI_knife EOL .   (rule 259)

    $default	reduce using rule 259 (vinst)



state 335

    vinst  ->  VI_le dtype . EOL   (rule 200)

    EOL 	shift, and go to state 518



state 336

    vinst  ->  VI_list stype . Decimal_num EOL   (rule 233)

    Decimal_num	shift, and go to state 519



state 337

    vinst  ->  VI_load_const stype . const_data EOL   (rule 224)

    Name	shift, and go to state 51
    Real_num	shift, and go to state 520
    Decimal_num	shift, and go to state 521
    V_decimal_num	shift, and go to state 522
    C_decimal_num	shift, and go to state 523
    V_hex_num	shift, and go to state 524
    C_hex_num	shift, and go to state 525
    V_octal_num	shift, and go to state 526
    C_octal_num	shift, and go to state 527
    V_bin_num	shift, and go to state 528
    C_bin_num	shift, and go to state 529
    String_lit	shift, and go to state 530

    const_data	go to state 531
    number	go to state 532
    name	go to state 533



state 338

    vinst  ->  VI_load_one EOL .   (rule 223)

    $default	reduce using rule 223 (vinst)



state 339

    vinst  ->  VI_load_port VI_subbit . name EOL   (rule 278)

    Name	shift, and go to state 51

    name	go to state 534



state 340

    vinst  ->  VI_load_port name . EOL   (rule 274)

    EOL 	shift, and go to state 535



state 341

    vinst  ->  VI_load_port_ptr VI_subbit . name EOL   (rule 280)

    Name	shift, and go to state 51

    name	go to state 536



state 342

    vinst  ->  VI_load_port_ptr name . EOL   (rule 276)

    EOL 	shift, and go to state 537



state 343

    vinst  ->  VI_load_pset_port VI_subbit . name name EOL   (rule 279)

    Name	shift, and go to state 51

    name	go to state 538



state 344

    vinst  ->  VI_load_pset_port name . name EOL   (rule 275)

    Name	shift, and go to state 51

    name	go to state 539



state 345

    vinst  ->  VI_load_pset_port_ptr VI_subbit . name name EOL   (rule 281)

    Name	shift, and go to state 51

    name	go to state 540



state 346

    vinst  ->  VI_load_pset_port_ptr name . name EOL   (rule 277)

    Name	shift, and go to state 51

    name	go to state 541



state 347

    vinst  ->  VI_load_sig_pt EOL .   (rule 282)

    $default	reduce using rule 282 (vinst)



state 348

    vinst  ->  VI_load_sig_pt VI_subbit . EOL   (rule 283)

    EOL 	shift, and go to state 542



state 349

    opt_array_access  ->  VI_array . Decimal_num   (rule 355)

    Decimal_num	shift, and go to state 543



state 350

    opt_array_access  ->  VI_assoc .   (rule 358)

    $default	reduce using rule 358 (opt_array_access)



state 351

    opt_array_access  ->  VI_list .   (rule 359)

    $default	reduce using rule 359 (opt_array_access)



state 352

    opt_array_access  ->  VI_marray . Decimal_num '(' range_list ')'   (rule 356)

    Decimal_num	shift, and go to state 544



state 353

    opt_array_access  ->  VI_stridx .   (rule 357)

    $default	reduce using rule 357 (opt_array_access)



state 354

    vinst  ->  VI_load_static opt_array_access . name name name EOL   (rule 285)

    Name	shift, and go to state 51

    name	go to state 545



state 355

    vinst  ->  VI_load_super opt_var . EOL   (rule 226)

    EOL 	shift, and go to state 546



state 356

    vinst  ->  VI_load_this opt_var . EOL   (rule 225)

    EOL 	shift, and go to state 547



state 357

    vinst  ->  VI_load_thread label . EOL   (rule 227)

    EOL 	shift, and go to state 548



state 358

    vinst  ->  VI_load_zero EOL .   (rule 222)

    $default	reduce using rule 222 (vinst)



state 359

    vinst  ->  VI_loadg opt_array_access . opt_var name EOL   (rule 272)

    VI_var	shift, and go to state 222

    $default	reduce using rule 108 (opt_var)

    opt_var	go to state 549



state 360

    vinst  ->  VI_loadl opt_array_access . opt_static opt_var Decimal_num EOL   (rule 271)

    VI_static	shift, and go to state 550

    $default	reduce using rule 360 (opt_static)

    opt_static	go to state 551



state 361

    vinst  ->  VI_loadm opt_array_access . opt_static opt_var name name EOL   (rule 273)

    VI_static	shift, and go to state 550

    $default	reduce using rule 360 (opt_static)

    opt_static	go to state 552



state 362

    vinst  ->  VI_lshift stype . EOL   (rule 196)

    EOL 	shift, and go to state 553



state 363

    vinst  ->  VI_lt dtype . EOL   (rule 197)

    EOL 	shift, and go to state 554



state 364

    vinst  ->  VI_lvar Decimal_num . data_type name array_range opt_flags EOL   (rule 166)

    VI_bit	shift, and go to state 237
    VI_class	shift, and go to state 238
    VI_class_type	shift, and go to state 239
    VI_double	shift, and go to state 240
    VI_enum	shift, and go to state 241
    VI_float	shift, and go to state 242
    VI_int	shift, and go to state 243
    VI_long	shift, and go to state 244
    VI_signal	shift, and go to state 245
    VI_string	shift, and go to state 246
    VI_sys_class	shift, and go to state 247
    VI_void	shift, and go to state 248

    data_type	go to state 555



state 365

    vinst  ->  VI_lvar VI_static . Decimal_num data_type name name name array_range opt_flags EOL   (rule 167)

    Decimal_num	shift, and go to state 556



state 366

    vinst  ->  VI_minus dtype . EOL   (rule 183)

    EOL 	shift, and go to state 557



state 367

    vinst  ->  VI_mod dtype . EOL   (rule 187)

    EOL 	shift, and go to state 558



state 368

    vinst  ->  VI_nand dtype . EOL   (rule 191)

    EOL 	shift, and go to state 559



state 369

    vinst  ->  VI_ne dtype . EOL   (rule 202)

    EOL 	shift, and go to state 560



state 370

    vinst  ->  VI_neor dtype . EOL   (rule 193)

    EOL 	shift, and go to state 561



state 371

    vinst  ->  VI_neqeq dtype . EOL   (rule 204)

    EOL 	shift, and go to state 562



state 372

    vinst  ->  VI_new EOL .   (rule 168)

    $default	reduce using rule 168 (vinst)



state 373

    vinst  ->  VI_new_obj name . EOL @3   (rule 170)

    EOL 	shift, and go to state 563



state 374

    vinst  ->  VI_nor dtype . EOL   (rule 192)

    EOL 	shift, and go to state 564



state 375

    vinst  ->  VI_null EOL .   (rule 165)

    $default	reduce using rule 165 (vinst)



state 376

    vinst  ->  VI_or dtype . EOL   (rule 189)

    EOL 	shift, and go to state 565



state 377

    vinst  ->  VI_overwrite name . name name   (rule 309)

    Name	shift, and go to state 51

    name	go to state 566



state 378

    vinst  ->  VI_plus dtype . EOL   (rule 184)

    EOL 	shift, and go to state 567



state 379

    vinst  ->  VI_pop Decimal_num . EOL   (rule 235)

    EOL 	shift, and go to state 568



state 380

    vinst  ->  VI_pop VI_alu . EOL   (rule 237)

    EOL 	shift, and go to state 569



state 381

    vinst  ->  VI_pop_this EOL .   (rule 243)

    $default	reduce using rule 243 (vinst)



state 382

    vinst  ->  VI_push VI_alu . EOL   (rule 238)

    EOL 	shift, and go to state 570



state 383

    vinst  ->  VI_restore_acc EOL .   (rule 314)

    $default	reduce using rule 314 (vinst)



state 384

    vinst  ->  VI_return EOL .   (rule 248)

    $default	reduce using rule 248 (vinst)



state 385

    vinst  ->  VI_return_advice pointcut_specs . EOL   (rule 312)
    pointcut_specs  ->  pointcut_specs . pointcut_spec   (rule 319)

    Name	shift, and go to state 51
    EOL 	shift, and go to state 571

    pointcut_spec	go to state 479
    name	go to state 284



state 386

    vinst  ->  VI_return_l EOL .   (rule 247)

    $default	reduce using rule 247 (vinst)



state 387

    vinst  ->  VI_return_n EOL .   (rule 249)

    $default	reduce using rule 249 (vinst)



state 388

    vinst  ->  VI_rshift stype . EOL   (rule 194)

    EOL 	shift, and go to state 572



state 389

    vinst  ->  VI_save_acc EOL .   (rule 313)

    $default	reduce using rule 313 (vinst)



state 390

    vinst  ->  VI_spoon EOL .   (rule 257)

    $default	reduce using rule 257 (vinst)



state 391

    vinst  ->  VI_spoon VI_cancel . EOL   (rule 258)

    EOL 	shift, and go to state 573



state 392

    vinst  ->  VI_store_adjust stype . EOL   (rule 307)

    EOL 	shift, and go to state 574



state 393

    vinst  ->  VI_store_obj dtype . name name EOL   (rule 306)

    Name	shift, and go to state 51

    name	go to state 575



state 394

    vinst  ->  VI_store_port VI_subbit . opt_bit_type dtype strength name EOL   (rule 293)

    VI_i_endian	shift, and go to state 322
    VI_nz_lsb	shift, and go to state 323

    $default	reduce using rule 362 (opt_bit_type)

    opt_bit_type	go to state 576



state 395

    vinst  ->  VI_store_port dtype . strength name EOL   (rule 292)

    VI_normal	shift, and go to state 577
    VI_strong	shift, and go to state 578
    VI_weak	shift, and go to state 579

    strength	go to state 580



state 396

    vinst  ->  VI_store_pset_port VI_subbit . opt_bit_type dtype strength name name EOL   (rule 295)

    VI_i_endian	shift, and go to state 322
    VI_nz_lsb	shift, and go to state 323

    $default	reduce using rule 362 (opt_bit_type)

    opt_bit_type	go to state 581



state 397

    vinst  ->  VI_store_pset_port dtype . strength name name EOL   (rule 294)

    VI_normal	shift, and go to state 577
    VI_strong	shift, and go to state 578
    VI_weak	shift, and go to state 579

    strength	go to state 582



state 398

    vinst  ->  VI_store_sig_g opt_array_access . opt_static dtype strength name EOL   (rule 297)
    vinst  ->  VI_store_sig_g opt_array_access . opt_static VI_subbit opt_bit_type dtype strength name EOL   (rule 300)

    VI_static	shift, and go to state 550

    $default	reduce using rule 360 (opt_static)

    opt_static	go to state 583



state 399

    vinst  ->  VI_store_sig_l opt_array_access . opt_static dtype strength Decimal_num EOL   (rule 296)
    vinst  ->  VI_store_sig_l opt_array_access . opt_static VI_subbit opt_bit_type dtype strength Decimal_num EOL   (rule 299)

    VI_static	shift, and go to state 550

    $default	reduce using rule 360 (opt_static)

    opt_static	go to state 584



state 400

    vinst  ->  VI_store_sig_m opt_array_access . opt_static dtype strength name name EOL   (rule 298)
    vinst  ->  VI_store_sig_m opt_array_access . opt_static VI_subbit opt_bit_type dtype strength name name EOL   (rule 301)

    VI_static	shift, and go to state 550

    $default	reduce using rule 360 (opt_static)

    opt_static	go to state 585



state 401

    vinst  ->  VI_store_sig_static opt_array_access . dtype strength name name name EOL   (rule 303)
    vinst  ->  VI_store_sig_static opt_array_access . VI_subbit opt_bit_type dtype strength name name name EOL   (rule 305)

    VI_subbit	shift, and go to state 586
    '(' 	shift, and go to state 272

    dtype	go to state 587



state 402

    vinst  ->  VI_store_static opt_array_access . dtype name name name EOL   (rule 302)
    vinst  ->  VI_store_static opt_array_access . VI_subbit opt_bit_type dtype name name name EOL   (rule 304)

    VI_subbit	shift, and go to state 588
    '(' 	shift, and go to state 272

    dtype	go to state 589



state 403

    vinst  ->  VI_storeg opt_array_access . opt_static dtype name EOL   (rule 288)
    vinst  ->  VI_storeg opt_array_access . opt_static VI_subbit opt_bit_type dtype name EOL   (rule 289)

    VI_static	shift, and go to state 550

    $default	reduce using rule 360 (opt_static)

    opt_static	go to state 590



state 404

    vinst  ->  VI_storel opt_array_access . opt_static dtype Decimal_num EOL   (rule 286)
    vinst  ->  VI_storel opt_array_access . opt_static VI_subbit opt_bit_type dtype Decimal_num EOL   (rule 287)

    VI_static	shift, and go to state 550

    $default	reduce using rule 360 (opt_static)

    opt_static	go to state 591



state 405

    vinst  ->  VI_storem opt_array_access . opt_static dtype name name EOL   (rule 290)
    vinst  ->  VI_storem opt_array_access . opt_static VI_subbit opt_bit_type dtype name name EOL   (rule 291)

    VI_static	shift, and go to state 550

    $default	reduce using rule 360 (opt_static)

    opt_static	go to state 592



state 406

    vinst  ->  VI_sync VI_clk_of_port . edge name EOL   (rule 266)

    VI_bothedge	shift, and go to state 593
    VI_negedge	shift, and go to state 594
    VI_noedge	shift, and go to state 595
    VI_posedge	shift, and go to state 596

    edge	go to state 597



state 407

    vinst  ->  VI_sync VI_clk_of_pset_port . edge name name EOL   (rule 265)

    VI_bothedge	shift, and go to state 593
    VI_negedge	shift, and go to state 594
    VI_noedge	shift, and go to state 595
    VI_posedge	shift, and go to state 596

    edge	go to state 598



state 408

    vinst  ->  VI_sync VI_clk_of_signal . edge EOL   (rule 267)

    VI_bothedge	shift, and go to state 593
    VI_negedge	shift, and go to state 594
    VI_noedge	shift, and go to state 595
    VI_posedge	shift, and go to state 596

    edge	go to state 599



state 409

    vinst  ->  VI_sync VI_port . edge name EOL   (rule 269)

    VI_bothedge	shift, and go to state 593
    VI_negedge	shift, and go to state 594
    VI_noedge	shift, and go to state 595
    VI_posedge	shift, and go to state 596

    edge	go to state 600



state 410

    vinst  ->  VI_sync VI_pset_port . edge name name EOL   (rule 268)

    VI_bothedge	shift, and go to state 593
    VI_negedge	shift, and go to state 594
    VI_noedge	shift, and go to state 595
    VI_posedge	shift, and go to state 596

    edge	go to state 601



state 411

    vinst  ->  VI_sync VI_signal . edge EOL   (rule 270)

    VI_bothedge	shift, and go to state 593
    VI_negedge	shift, and go to state 594
    VI_noedge	shift, and go to state 595
    VI_posedge	shift, and go to state 596

    edge	go to state 602



state 412

    vinst  ->  VI_terminate EOL .   (rule 263)

    $default	reduce using rule 263 (vinst)



state 413

    vinst  ->  VI_times dtype . EOL   (rule 185)

    EOL 	shift, and go to state 603



state 414

    vinst  ->  VI_to_int EOL .   (rule 177)

    $default	reduce using rule 177 (vinst)



state 415

    vinst  ->  VI_u_and stype . EOL   (rule 216)

    EOL 	shift, and go to state 604



state 416

    vinst  ->  VI_u_eor stype . EOL   (rule 218)

    EOL 	shift, and go to state 605



state 417

    vinst  ->  VI_u_minus stype . EOL   (rule 213)

    EOL 	shift, and go to state 606



state 418

    vinst  ->  VI_u_nand stype . EOL   (rule 219)

    EOL 	shift, and go to state 607



state 419

    vinst  ->  VI_u_neor stype . EOL   (rule 221)

    EOL 	shift, and go to state 608



state 420

    vinst  ->  VI_u_nor stype . EOL   (rule 220)

    EOL 	shift, and go to state 609



state 421

    vinst  ->  VI_u_not stype . EOL   (rule 215)

    EOL 	shift, and go to state 610



state 422

    vinst  ->  VI_u_or stype . EOL   (rule 217)

    EOL 	shift, and go to state 611



state 423

    vinst  ->  VI_u_tilde stype . EOL   (rule 214)

    EOL 	shift, and go to state 612



state 424

    vinst  ->  VI_urshift stype . EOL   (rule 195)

    EOL 	shift, and go to state 613



state 425

    vinst  ->  VI_veri_call name . Decimal_num EOL   (rule 253)

    Decimal_num	shift, and go to state 614



state 426

    vinst  ->  VI_void EOL .   (rule 176)

    $default	reduce using rule 176 (vinst)



state 427

    vinst  ->  opt_var VI_arg . Decimal_num Decimal_num data_type name array_range opt_flags EOL   (rule 175)

    Decimal_num	shift, and go to state 615



state 428

    init_code  ->  VI_initial_begin EOL opt_vinsts VI_initial_end . EOL   (rule 150)

    EOL 	shift, and go to state 616



state 429

    vinsts  ->  vinsts vinst .   (rule 160)

    $default	reduce using rule 160 (vinsts)



state 430

    mfunc_code  ->  VI_mfunc name name EOL . opt_vinsts VI_func_end EOL   (rule 153)

    Identifier	shift, and go to state 99
    DebugInfo	shift, and go to state 7
    EOL 	shift, and go to state 8
    VI_Qeqeq	shift, and go to state 100
    VI_alloc	shift, and go to state 101
    VI_alloc_func	shift, and go to state 102
    VI_alloc_static	shift, and go to state 103
    VI_and	shift, and go to state 104
    VI_breakpoint	shift, and go to state 105
    VI_call	shift, and go to state 106
    VI_call_m	shift, and go to state 107
    VI_call_a	shift, and go to state 108
    VI_call_advice	shift, and go to state 109
    VI_chk_overwrite	shift, and go to state 110
    VI_cmp	shift, and go to state 111
    VI_cmpx	shift, and go to state 112
    VI_cmpz	shift, and go to state 113
    VI_concat	shift, and go to state 114
    VI_copy	shift, and go to state 115
    VI_copy_obj	shift, and go to state 116
    VI_convert	shift, and go to state 117
    VI_dec	shift, and go to state 118
    VI_div	shift, and go to state 119
    VI_dup	shift, and go to state 120
    VI_duplicate	shift, and go to state 121
    VI_enter_advice	shift, and go to state 122
    VI_enum	shift, and go to state 16
    VI_eor	shift, and go to state 123
    VI_eqQeq	shift, and go to state 124
    VI_eqeq	shift, and go to state 125
    VI_eqeqQ	shift, and go to state 126
    VI_eqeqeq	shift, and go to state 127
    VI_eqCeq	shift, and go to state 128
    VI_Qne	shift, and go to state 129
    VI_error	shift, and go to state 130
    VI_exec	shift, and go to state 131
    VI_exit	shift, and go to state 132
    VI_fork	shift, and go to state 133
    VI_ge	shift, and go to state 134
    VI_gen_child	shift, and go to state 135
    VI_gen_frame	shift, and go to state 136
    VI_gen_m_frame	shift, and go to state 137
    VI_gen_a_frame	shift, and go to state 138
    VI_get_this	shift, and go to state 139
    VI_get_sig_subbit	shift, and go to state 140
    VI_get_subbit	shift, and go to state 141
    VI_get_super	shift, and go to state 142
    VI_get_child	shift, and go to state 143
    VI_get_return	shift, and go to state 144
    VI_gt	shift, and go to state 145
    VI_inc	shift, and go to state 146
    VI_jmp	shift, and go to state 147
    VI_jnz	shift, and go to state 148
    VI_join	shift, and go to state 149
    VI_jz	shift, and go to state 150
    VI_knife	shift, and go to state 151
    VI_le	shift, and go to state 152
    VI_list	shift, and go to state 153
    VI_load_const	shift, and go to state 154
    VI_load_one	shift, and go to state 155
    VI_load_port	shift, and go to state 156
    VI_load_port_ptr	shift, and go to state 157
    VI_load_pset_port	shift, and go to state 158
    VI_load_pset_port_ptr	shift, and go to state 159
    VI_load_sig_pt	shift, and go to state 160
    VI_load_static	shift, and go to state 161
    VI_load_super	shift, and go to state 162
    VI_load_this	shift, and go to state 163
    VI_load_thread	shift, and go to state 164
    VI_load_zero	shift, and go to state 165
    VI_loadg	shift, and go to state 166
    VI_loadl	shift, and go to state 167
    VI_loadm	shift, and go to state 168
    VI_lshift	shift, and go to state 169
    VI_lt	shift, and go to state 170
    VI_lvar	shift, and go to state 171
    VI_minus	shift, and go to state 172
    VI_mod	shift, and go to state 173
    VI_nand	shift, and go to state 174
    VI_ne	shift, and go to state 175
    VI_neor	shift, and go to state 176
    VI_neqeq	shift, and go to state 177
    VI_new	shift, and go to state 178
    VI_new_obj	shift, and go to state 179
    VI_nor	shift, and go to state 180
    VI_null	shift, and go to state 181
    VI_or	shift, and go to state 182
    VI_overwrite	shift, and go to state 183
    VI_plus	shift, and go to state 184
    VI_pop	shift, and go to state 185
    VI_pop_this	shift, and go to state 186
    VI_push	shift, and go to state 187
    VI_restore_acc	shift, and go to state 188
    VI_return	shift, and go to state 189
    VI_return_advice	shift, and go to state 190
    VI_return_l	shift, and go to state 191
    VI_return_n	shift, and go to state 192
    VI_rshift	shift, and go to state 193
    VI_save_acc	shift, and go to state 194
    VI_spoon	shift, and go to state 195
    VI_store_adjust	shift, and go to state 196
    VI_store_obj	shift, and go to state 197
    VI_store_port	shift, and go to state 198
    VI_store_pset_port	shift, and go to state 199
    VI_store_sig_g	shift, and go to state 200
    VI_store_sig_l	shift, and go to state 201
    VI_store_sig_m	shift, and go to state 202
    VI_store_sig_static	shift, and go to state 203
    VI_store_static	shift, and go to state 204
    VI_storeg	shift, and go to state 205
    VI_storel	shift, and go to state 206
    VI_storem	shift, and go to state 207
    VI_sync	shift, and go to state 208
    VI_terminate	shift, and go to state 209
    VI_times	shift, and go to state 210
    VI_to_int	shift, and go to state 211
    VI_u_and	shift, and go to state 212
    VI_u_eor	shift, and go to state 213
    VI_u_minus	shift, and go to state 214
    VI_u_nand	shift, and go to state 215
    VI_u_neor	shift, and go to state 216
    VI_u_nor	shift, and go to state 217
    VI_u_not	shift, and go to state 218
    VI_u_or	shift, and go to state 219
    VI_u_tilde	shift, and go to state 220
    VI_urshift	shift, and go to state 221
    VI_var	shift, and go to state 222
    VI_veri_call	shift, and go to state 223
    VI_void	shift, and go to state 224

    VI_func_end	reduce using rule 157 (opt_vinsts)
    $default	reduce using rule 108 (opt_var)

    empty_line	go to state 225
    debug_information	go to state 226
    enum_dcl	go to state 227
    opt_var	go to state 228
    opt_vinsts	go to state 617
    vinsts	go to state 230
    vinst	go to state 231



state 431

    port_info  ->  VI_port direction '[' Decimal_num . ':' Decimal_num ']' name opt_port_attrib EOL   (rule 29)

    ':' 	shift, and go to state 618



state 432

    portset_info  ->  VI_portset name '{' EOL . port_infos '}' EOL   (rule 45)

    VI_port	shift, and go to state 21

    port_info	go to state 619
    port_infos	go to state 620



state 433

    static_var_dcl  ->  VI_stat_var name name data_type . name array_range opt_var_attribs EOL   (rule 148)

    Name	shift, and go to state 51

    name	go to state 621



state 434

    static_init_code  ->  VI_static_init EOL opt_vinsts VI_static_init_end . EOL   (rule 149)

    EOL 	shift, and go to state 622



state 435

    data_type  ->  VI_bit '[' . Decimal_num ':' Decimal_num ']'   (rule 56)

    Decimal_num	shift, and go to state 623



state 436

    data_type  ->  VI_class name .   (rule 57)

    $default	reduce using rule 57 (data_type)



state 437

    data_type  ->  VI_enum name .   (rule 62)

    $default	reduce using rule 62 (data_type)



state 438

    data_type  ->  VI_sys_class name .   (rule 58)

    $default	reduce using rule 58 (data_type)



state 439

    variable_dcl  ->  VI_variable Decimal_num data_type name . array_range opt_var_attribs EOL   (rule 50)

    VI_array	shift, and go to state 624
    VI_assoc	shift, and go to state 625
    VI_list	shift, and go to state 626
    VI_marray	shift, and go to state 627
    VI_single	shift, and go to state 628
    VI_stridx	shift, and go to state 629

    array_range	go to state 630



state 440

    verilog_task_info  ->  VI_verilog_task Name '(' EOL . opt_arguments ')' String_lit EOL   (rule 124)

    VI_formal	shift, and go to state 631
    VI_var	shift, and go to state 222
    '[' 	shift, and go to state 632
    '(' 	shift, and go to state 633
    '?' 	shift, and go to state 634

    ')' 	reduce using rule 98 (opt_arguments)
    $default	reduce using rule 108 (opt_var)

    opt_arguments	go to state 635
    arguments	go to state 636
    argument	go to state 637
    opt_var	go to state 638



state 441

    aspect_info  ->  VI_aspect name Decimal_num String_lit '{' . EOL @2 opt_aspect_members '}' EOL   (rule 123)

    EOL 	shift, and go to state 639



state 442

    advice_code  ->  VI_advice name name EOL opt_vinsts . VI_advice_end EOL   (rule 156)

    VI_advice_end	shift, and go to state 640



state 443

    afunc_code  ->  VI_afunc name name EOL opt_vinsts . VI_func_end EOL   (rule 155)

    VI_func_end	shift, and go to state 641



state 444

    class_info  ->  VI_class name opt_extention opt_class_attribs Decimal_num . String_lit '{' EOL @1 opt_class_members '}' EOL   (rule 121)

    String_lit	shift, and go to state 642



state 445

    class_attribs  ->  class_attribs class_attrib .   (rule 130)

    $default	reduce using rule 130 (class_attribs)



state 446

    class_alloc_code  ->  VI_class_alloc name EOL opt_vinsts VI_class_alloc_end . EOL   (rule 152)

    EOL 	shift, and go to state 643



state 447

    class_init_code  ->  VI_class_initial_begin name EOL opt_vinsts VI_class_initial_end . EOL   (rule 151)

    EOL 	shift, and go to state 644



state 448

    connection_info  ->  VI_connection VI_port name '=' String_lit . EOL   (rule 48)

    EOL 	shift, and go to state 645



state 449

    connection_info  ->  VI_connection VI_portset name name '=' . String_lit EOL   (rule 49)

    String_lit	shift, and go to state 646



state 450

    func_code  ->  VI_func name EOL opt_vinsts VI_func_end . EOL   (rule 154)

    EOL 	shift, and go to state 647



state 451

    function_info  ->  VI_function Decimal_num opt_func_options data_type name . Decimal_num String_lit '(' EOL opt_arguments ')' EOL   (rule 85)

    Decimal_num	shift, and go to state 648



state 452

    vinst  ->  Identifier ':' EOL .   (rule 164)

    $default	reduce using rule 164 (vinst)



state 453

    type_code  ->  VI_array .   (rule 341)

    $default	reduce using rule 341 (type_code)



state 454

    type_code  ->  VI_assoc .   (rule 343)

    $default	reduce using rule 343 (type_code)



state 455

    type_code  ->  VI_bit .   (rule 335)

    $default	reduce using rule 335 (type_code)



state 456

    type_code  ->  VI_enum .   (rule 339)

    $default	reduce using rule 339 (type_code)



state 457

    type_code  ->  VI_float .   (rule 336)

    $default	reduce using rule 336 (type_code)



state 458

    type_code  ->  VI_int .   (rule 334)

    $default	reduce using rule 334 (type_code)



state 459

    type_code  ->  VI_list .   (rule 345)

    $default	reduce using rule 345 (type_code)



state 460

    type_code  ->  VI_marray .   (rule 342)

    $default	reduce using rule 342 (type_code)



state 461

    type_code  ->  VI_null .   (rule 333)

    $default	reduce using rule 333 (type_code)



state 462

    type_code  ->  VI_obj .   (rule 340)

    $default	reduce using rule 340 (type_code)



state 463

    type_code  ->  VI_ptset .   (rule 337)

    $default	reduce using rule 337 (type_code)



state 464

    type_code  ->  VI_signal .   (rule 338)

    $default	reduce using rule 338 (type_code)



state 465

    type_code  ->  VI_stridx .   (rule 344)

    $default	reduce using rule 344 (type_code)



state 466

    type_code  ->  VI_string .   (rule 331)

    $default	reduce using rule 331 (type_code)



state 467

    type_code  ->  VI_void .   (rule 332)

    $default	reduce using rule 332 (type_code)



state 468

    dtype  ->  '(' type_code . ',' type_code ')'   (rule 324)

    ',' 	shift, and go to state 649



state 469

    vinst  ->  VI_Qeqeq dtype EOL .   (rule 207)

    $default	reduce using rule 207 (vinst)



state 470

    vinst  ->  VI_alloc Decimal_num data_type . name array_range opt_flags EOL   (rule 173)

    Name	shift, and go to state 51

    name	go to state 650



state 471

    vinst  ->  VI_alloc_func Decimal_num name .   (rule 308)

    $default	reduce using rule 308 (vinst)



state 472

    vinst  ->  VI_alloc_static name name . Decimal_num data_type name array_range opt_flags EOL   (rule 174)

    Decimal_num	shift, and go to state 651



state 473

    vinst  ->  VI_and dtype EOL .   (rule 188)

    $default	reduce using rule 188 (vinst)



state 474

    vinst  ->  VI_breakpoint String_lit EOL .   (rule 264)

    $default	reduce using rule 264 (vinst)



state 475

    vinst  ->  VI_call name Decimal_num . EOL   (rule 250)

    EOL 	shift, and go to state 652



state 476

    vinst  ->  VI_call_m name name . Decimal_num EOL   (rule 251)

    Decimal_num	shift, and go to state 653



state 477

    vinst  ->  VI_call_a name name . Decimal_num EOL   (rule 252)

    Decimal_num	shift, and go to state 654



state 478

    vinst  ->  VI_call_advice pointcut_specs EOL .   (rule 311)

    $default	reduce using rule 311 (vinst)



state 479

    pointcut_specs  ->  pointcut_specs pointcut_spec .   (rule 319)

    $default	reduce using rule 319 (pointcut_specs)



state 480

    opt_class_pointcut  ->  '(' . name ')'   (rule 322)

    Name	shift, and go to state 51

    name	go to state 655



state 481

    pointcut_spec  ->  name opt_class_pointcut .   (rule 320)

    $default	reduce using rule 320 (pointcut_spec)



state 482

    vinst  ->  VI_chk_overwrite Decimal_num name .   (rule 310)

    $default	reduce using rule 310 (vinst)



state 483

    vinst  ->  VI_cmp dtype EOL .   (rule 210)

    $default	reduce using rule 210 (vinst)



state 484

    vinst  ->  VI_cmpx dtype EOL .   (rule 212)

    $default	reduce using rule 212 (vinst)



state 485

    vinst  ->  VI_cmpz dtype EOL .   (rule 211)

    $default	reduce using rule 211 (vinst)



state 486

    vinst  ->  VI_concat dtype EOL .   (rule 231)

    $default	reduce using rule 231 (vinst)



state 487

    vinst  ->  VI_copy VI_alu Decimal_num . EOL   (rule 239)

    EOL 	shift, and go to state 656



state 488

    vinst  ->  VI_convert VI_bit Decimal_num . Decimal_num stype EOL   (rule 178)

    Decimal_num	shift, and go to state 657



state 489

    vinst  ->  VI_convert VI_float stype . EOL   (rule 180)

    EOL 	shift, and go to state 658



state 490

    vinst  ->  VI_convert VI_string stype . EOL   (rule 179)

    EOL 	shift, and go to state 659



state 491

    stype  ->  '(' type_code . ')'   (rule 323)

    ')' 	shift, and go to state 660



state 492

    vinst  ->  VI_dec stype EOL .   (rule 182)

    $default	reduce using rule 182 (vinst)



state 493

    vinst  ->  VI_div dtype EOL .   (rule 186)

    $default	reduce using rule 186 (vinst)



state 494

    vinst  ->  VI_dup Decimal_num EOL .   (rule 236)

    $default	reduce using rule 236 (vinst)



state 495

    vinst  ->  VI_duplicate stype EOL .   (rule 232)

    $default	reduce using rule 232 (vinst)



state 496

    vinst  ->  VI_eor dtype EOL .   (rule 190)

    $default	reduce using rule 190 (vinst)



state 497

    vinst  ->  VI_eqQeq dtype EOL .   (rule 205)

    $default	reduce using rule 205 (vinst)



state 498

    vinst  ->  VI_eqeq dtype EOL .   (rule 199)

    $default	reduce using rule 199 (vinst)



state 499

    vinst  ->  VI_eqeqQ dtype EOL .   (rule 206)

    $default	reduce using rule 206 (vinst)



state 500

    vinst  ->  VI_eqeqeq dtype EOL .   (rule 203)

    $default	reduce using rule 203 (vinst)



state 501

    ttype  ->  '(' type_code . ',' type_code ',' type_code ')'   (rule 325)

    ',' 	shift, and go to state 661



state 502

    vinst  ->  VI_eqCeq ttype EOL .   (rule 209)

    $default	reduce using rule 209 (vinst)



state 503

    vinst  ->  VI_Qne dtype EOL .   (rule 208)

    $default	reduce using rule 208 (vinst)



state 504

    vinst  ->  VI_exec label EOL .   (rule 255)

    $default	reduce using rule 255 (vinst)



state 505

    vinst  ->  VI_exit VI_p_and EOL .   (rule 261)

    $default	reduce using rule 261 (vinst)



state 506

    vinst  ->  VI_exit VI_p_or EOL .   (rule 262)

    $default	reduce using rule 262 (vinst)



state 507

    vinst  ->  VI_ge dtype EOL .   (rule 201)

    $default	reduce using rule 201 (vinst)



state 508

    opt_bit_type  ->  VI_i_endian '[' . Decimal_num ':' Decimal_num ']'   (rule 363)

    Decimal_num	shift, and go to state 662



state 509

    opt_bit_type  ->  VI_nz_lsb '[' . Decimal_num ':' Decimal_num ']'   (rule 364)

    Decimal_num	shift, and go to state 663



state 510

    vinst  ->  VI_get_subbit opt_bit_type EOL .   (rule 234)

    $default	reduce using rule 234 (vinst)



state 511

    vinst  ->  VI_get_super opt_var Decimal_num . EOL   (rule 229)

    EOL 	shift, and go to state 664



state 512

    vinst  ->  VI_get_child opt_var Decimal_num . EOL   (rule 230)

    EOL 	shift, and go to state 665



state 513

    vinst  ->  VI_gt dtype EOL .   (rule 198)

    $default	reduce using rule 198 (vinst)



state 514

    vinst  ->  VI_inc stype EOL .   (rule 181)

    $default	reduce using rule 181 (vinst)



state 515

    vinst  ->  VI_jmp label EOL .   (rule 244)

    $default	reduce using rule 244 (vinst)



state 516

    vinst  ->  VI_jnz stype label . EOL   (rule 246)

    EOL 	shift, and go to state 666



state 517

    vinst  ->  VI_jz stype label . EOL   (rule 245)

    EOL 	shift, and go to state 667



state 518

    vinst  ->  VI_le dtype EOL .   (rule 200)

    $default	reduce using rule 200 (vinst)



state 519

    vinst  ->  VI_list stype Decimal_num . EOL   (rule 233)

    EOL 	shift, and go to state 668



state 520

    number  ->  Real_num .   (rule 365)

    $default	reduce using rule 365 (number)



state 521

    number  ->  Decimal_num .   (rule 366)

    $default	reduce using rule 366 (number)



state 522

    number  ->  V_decimal_num .   (rule 367)

    $default	reduce using rule 367 (number)



state 523

    number  ->  C_decimal_num .   (rule 368)

    $default	reduce using rule 368 (number)



state 524

    number  ->  V_hex_num .   (rule 369)

    $default	reduce using rule 369 (number)



state 525

    number  ->  C_hex_num .   (rule 370)

    $default	reduce using rule 370 (number)



state 526

    number  ->  V_octal_num .   (rule 371)

    $default	reduce using rule 371 (number)



state 527

    number  ->  C_octal_num .   (rule 372)

    $default	reduce using rule 372 (number)



state 528

    number  ->  V_bin_num .   (rule 373)

    $default	reduce using rule 373 (number)



state 529

    number  ->  C_bin_num .   (rule 374)

    $default	reduce using rule 374 (number)



state 530

    const_data  ->  String_lit .   (rule 347)

    $default	reduce using rule 347 (const_data)



state 531

    vinst  ->  VI_load_const stype const_data . EOL   (rule 224)

    EOL 	shift, and go to state 669



state 532

    const_data  ->  number .   (rule 346)

    $default	reduce using rule 346 (const_data)



state 533

    const_data  ->  name . name Decimal_num   (rule 348)

    Name	shift, and go to state 51

    name	go to state 670



state 534

    vinst  ->  VI_load_port VI_subbit name . EOL   (rule 278)

    EOL 	shift, and go to state 671



state 535

    vinst  ->  VI_load_port name EOL .   (rule 274)

    $default	reduce using rule 274 (vinst)



state 536

    vinst  ->  VI_load_port_ptr VI_subbit name . EOL   (rule 280)

    EOL 	shift, and go to state 672



state 537

    vinst  ->  VI_load_port_ptr name EOL .   (rule 276)

    $default	reduce using rule 276 (vinst)



state 538

    vinst  ->  VI_load_pset_port VI_subbit name . name EOL   (rule 279)

    Name	shift, and go to state 51

    name	go to state 673



state 539

    vinst  ->  VI_load_pset_port name name . EOL   (rule 275)

    EOL 	shift, and go to state 674



state 540

    vinst  ->  VI_load_pset_port_ptr VI_subbit name . name EOL   (rule 281)

    Name	shift, and go to state 51

    name	go to state 675



state 541

    vinst  ->  VI_load_pset_port_ptr name name . EOL   (rule 277)

    EOL 	shift, and go to state 676



state 542

    vinst  ->  VI_load_sig_pt VI_subbit EOL .   (rule 283)

    $default	reduce using rule 283 (vinst)



state 543

    opt_array_access  ->  VI_array Decimal_num .   (rule 355)

    $default	reduce using rule 355 (opt_array_access)



state 544

    opt_array_access  ->  VI_marray Decimal_num . '(' range_list ')'   (rule 356)

    '(' 	shift, and go to state 677



state 545

    vinst  ->  VI_load_static opt_array_access name . name name EOL   (rule 285)

    Name	shift, and go to state 51

    name	go to state 678



state 546

    vinst  ->  VI_load_super opt_var EOL .   (rule 226)

    $default	reduce using rule 226 (vinst)



state 547

    vinst  ->  VI_load_this opt_var EOL .   (rule 225)

    $default	reduce using rule 225 (vinst)



state 548

    vinst  ->  VI_load_thread label EOL .   (rule 227)

    $default	reduce using rule 227 (vinst)



state 549

    vinst  ->  VI_loadg opt_array_access opt_var . name EOL   (rule 272)

    Name	shift, and go to state 51

    name	go to state 679



state 550

    opt_static  ->  VI_static .   (rule 361)

    $default	reduce using rule 361 (opt_static)



state 551

    vinst  ->  VI_loadl opt_array_access opt_static . opt_var Decimal_num EOL   (rule 271)

    VI_var	shift, and go to state 222

    $default	reduce using rule 108 (opt_var)

    opt_var	go to state 680



state 552

    vinst  ->  VI_loadm opt_array_access opt_static . opt_var name name EOL   (rule 273)

    VI_var	shift, and go to state 222

    $default	reduce using rule 108 (opt_var)

    opt_var	go to state 681



state 553

    vinst  ->  VI_lshift stype EOL .   (rule 196)

    $default	reduce using rule 196 (vinst)



state 554

    vinst  ->  VI_lt dtype EOL .   (rule 197)

    $default	reduce using rule 197 (vinst)



state 555

    vinst  ->  VI_lvar Decimal_num data_type . name array_range opt_flags EOL   (rule 166)

    Name	shift, and go to state 51

    name	go to state 682



state 556

    vinst  ->  VI_lvar VI_static Decimal_num . data_type name name name array_range opt_flags EOL   (rule 167)

    VI_bit	shift, and go to state 237
    VI_class	shift, and go to state 238
    VI_class_type	shift, and go to state 239
    VI_double	shift, and go to state 240
    VI_enum	shift, and go to state 241
    VI_float	shift, and go to state 242
    VI_int	shift, and go to state 243
    VI_long	shift, and go to state 244
    VI_signal	shift, and go to state 245
    VI_string	shift, and go to state 246
    VI_sys_class	shift, and go to state 247
    VI_void	shift, and go to state 248

    data_type	go to state 683



state 557

    vinst  ->  VI_minus dtype EOL .   (rule 183)

    $default	reduce using rule 183 (vinst)



state 558

    vinst  ->  VI_mod dtype EOL .   (rule 187)

    $default	reduce using rule 187 (vinst)



state 559

    vinst  ->  VI_nand dtype EOL .   (rule 191)

    $default	reduce using rule 191 (vinst)



state 560

    vinst  ->  VI_ne dtype EOL .   (rule 202)

    $default	reduce using rule 202 (vinst)



state 561

    vinst  ->  VI_neor dtype EOL .   (rule 193)

    $default	reduce using rule 193 (vinst)



state 562

    vinst  ->  VI_neqeq dtype EOL .   (rule 204)

    $default	reduce using rule 204 (vinst)



state 563

    vinst  ->  VI_new_obj name EOL . @3   (rule 170)

    $default	reduce using rule 169 (@3)

    @3  	go to state 684



state 564

    vinst  ->  VI_nor dtype EOL .   (rule 192)

    $default	reduce using rule 192 (vinst)



state 565

    vinst  ->  VI_or dtype EOL .   (rule 189)

    $default	reduce using rule 189 (vinst)



state 566

    vinst  ->  VI_overwrite name name . name   (rule 309)

    Name	shift, and go to state 51

    name	go to state 685



state 567

    vinst  ->  VI_plus dtype EOL .   (rule 184)

    $default	reduce using rule 184 (vinst)



state 568

    vinst  ->  VI_pop Decimal_num EOL .   (rule 235)

    $default	reduce using rule 235 (vinst)



state 569

    vinst  ->  VI_pop VI_alu EOL .   (rule 237)

    $default	reduce using rule 237 (vinst)



state 570

    vinst  ->  VI_push VI_alu EOL .   (rule 238)

    $default	reduce using rule 238 (vinst)



state 571

    vinst  ->  VI_return_advice pointcut_specs EOL .   (rule 312)

    $default	reduce using rule 312 (vinst)



state 572

    vinst  ->  VI_rshift stype EOL .   (rule 194)

    $default	reduce using rule 194 (vinst)



state 573

    vinst  ->  VI_spoon VI_cancel EOL .   (rule 258)

    $default	reduce using rule 258 (vinst)



state 574

    vinst  ->  VI_store_adjust stype EOL .   (rule 307)

    $default	reduce using rule 307 (vinst)



state 575

    vinst  ->  VI_store_obj dtype name . name EOL   (rule 306)

    Name	shift, and go to state 51

    name	go to state 686



state 576

    vinst  ->  VI_store_port VI_subbit opt_bit_type . dtype strength name EOL   (rule 293)

    '(' 	shift, and go to state 272

    dtype	go to state 687



state 577

    strength  ->  VI_normal .   (rule 375)

    $default	reduce using rule 375 (strength)



state 578

    strength  ->  VI_strong .   (rule 377)

    $default	reduce using rule 377 (strength)



state 579

    strength  ->  VI_weak .   (rule 376)

    $default	reduce using rule 376 (strength)



state 580

    vinst  ->  VI_store_port dtype strength . name EOL   (rule 292)

    Name	shift, and go to state 51

    name	go to state 688



state 581

    vinst  ->  VI_store_pset_port VI_subbit opt_bit_type . dtype strength name name EOL   (rule 295)

    '(' 	shift, and go to state 272

    dtype	go to state 689



state 582

    vinst  ->  VI_store_pset_port dtype strength . name name EOL   (rule 294)

    Name	shift, and go to state 51

    name	go to state 690



state 583

    vinst  ->  VI_store_sig_g opt_array_access opt_static . dtype strength name EOL   (rule 297)
    vinst  ->  VI_store_sig_g opt_array_access opt_static . VI_subbit opt_bit_type dtype strength name EOL   (rule 300)

    VI_subbit	shift, and go to state 691
    '(' 	shift, and go to state 272

    dtype	go to state 692



state 584

    vinst  ->  VI_store_sig_l opt_array_access opt_static . dtype strength Decimal_num EOL   (rule 296)
    vinst  ->  VI_store_sig_l opt_array_access opt_static . VI_subbit opt_bit_type dtype strength Decimal_num EOL   (rule 299)

    VI_subbit	shift, and go to state 693
    '(' 	shift, and go to state 272

    dtype	go to state 694



state 585

    vinst  ->  VI_store_sig_m opt_array_access opt_static . dtype strength name name EOL   (rule 298)
    vinst  ->  VI_store_sig_m opt_array_access opt_static . VI_subbit opt_bit_type dtype strength name name EOL   (rule 301)

    VI_subbit	shift, and go to state 695
    '(' 	shift, and go to state 272

    dtype	go to state 696



state 586

    vinst  ->  VI_store_sig_static opt_array_access VI_subbit . opt_bit_type dtype strength name name name EOL   (rule 305)

    VI_i_endian	shift, and go to state 322
    VI_nz_lsb	shift, and go to state 323

    $default	reduce using rule 362 (opt_bit_type)

    opt_bit_type	go to state 697



state 587

    vinst  ->  VI_store_sig_static opt_array_access dtype . strength name name name EOL   (rule 303)

    VI_normal	shift, and go to state 577
    VI_strong	shift, and go to state 578
    VI_weak	shift, and go to state 579

    strength	go to state 698



state 588

    vinst  ->  VI_store_static opt_array_access VI_subbit . opt_bit_type dtype name name name EOL   (rule 304)

    VI_i_endian	shift, and go to state 322
    VI_nz_lsb	shift, and go to state 323

    $default	reduce using rule 362 (opt_bit_type)

    opt_bit_type	go to state 699



state 589

    vinst  ->  VI_store_static opt_array_access dtype . name name name EOL   (rule 302)

    Name	shift, and go to state 51

    name	go to state 700



state 590

    vinst  ->  VI_storeg opt_array_access opt_static . dtype name EOL   (rule 288)
    vinst  ->  VI_storeg opt_array_access opt_static . VI_subbit opt_bit_type dtype name EOL   (rule 289)

    VI_subbit	shift, and go to state 701
    '(' 	shift, and go to state 272

    dtype	go to state 702



state 591

    vinst  ->  VI_storel opt_array_access opt_static . dtype Decimal_num EOL   (rule 286)
    vinst  ->  VI_storel opt_array_access opt_static . VI_subbit opt_bit_type dtype Decimal_num EOL   (rule 287)

    VI_subbit	shift, and go to state 703
    '(' 	shift, and go to state 272

    dtype	go to state 704



state 592

    vinst  ->  VI_storem opt_array_access opt_static . dtype name name EOL   (rule 290)
    vinst  ->  VI_storem opt_array_access opt_static . VI_subbit opt_bit_type dtype name name EOL   (rule 291)

    VI_subbit	shift, and go to state 705
    '(' 	shift, and go to state 272

    dtype	go to state 706



state 593

    edge  ->  VI_bothedge .   (rule 352)

    $default	reduce using rule 352 (edge)



state 594

    edge  ->  VI_negedge .   (rule 351)

    $default	reduce using rule 351 (edge)



state 595

    edge  ->  VI_noedge .   (rule 353)

    $default	reduce using rule 353 (edge)



state 596

    edge  ->  VI_posedge .   (rule 350)

    $default	reduce using rule 350 (edge)



state 597

    vinst  ->  VI_sync VI_clk_of_port edge . name EOL   (rule 266)

    Name	shift, and go to state 51

    name	go to state 707



state 598

    vinst  ->  VI_sync VI_clk_of_pset_port edge . name name EOL   (rule 265)

    Name	shift, and go to state 51

    name	go to state 708



state 599

    vinst  ->  VI_sync VI_clk_of_signal edge . EOL   (rule 267)

    EOL 	shift, and go to state 709



state 600

    vinst  ->  VI_sync VI_port edge . name EOL   (rule 269)

    Name	shift, and go to state 51

    name	go to state 710



state 601

    vinst  ->  VI_sync VI_pset_port edge . name name EOL   (rule 268)

    Name	shift, and go to state 51

    name	go to state 711



state 602

    vinst  ->  VI_sync VI_signal edge . EOL   (rule 270)

    EOL 	shift, and go to state 712



state 603

    vinst  ->  VI_times dtype EOL .   (rule 185)

    $default	reduce using rule 185 (vinst)



state 604

    vinst  ->  VI_u_and stype EOL .   (rule 216)

    $default	reduce using rule 216 (vinst)



state 605

    vinst  ->  VI_u_eor stype EOL .   (rule 218)

    $default	reduce using rule 218 (vinst)



state 606

    vinst  ->  VI_u_minus stype EOL .   (rule 213)

    $default	reduce using rule 213 (vinst)



state 607

    vinst  ->  VI_u_nand stype EOL .   (rule 219)

    $default	reduce using rule 219 (vinst)



state 608

    vinst  ->  VI_u_neor stype EOL .   (rule 221)

    $default	reduce using rule 221 (vinst)



state 609

    vinst  ->  VI_u_nor stype EOL .   (rule 220)

    $default	reduce using rule 220 (vinst)



state 610

    vinst  ->  VI_u_not stype EOL .   (rule 215)

    $default	reduce using rule 215 (vinst)



state 611

    vinst  ->  VI_u_or stype EOL .   (rule 217)

    $default	reduce using rule 217 (vinst)



state 612

    vinst  ->  VI_u_tilde stype EOL .   (rule 214)

    $default	reduce using rule 214 (vinst)



state 613

    vinst  ->  VI_urshift stype EOL .   (rule 195)

    $default	reduce using rule 195 (vinst)



state 614

    vinst  ->  VI_veri_call name Decimal_num . EOL   (rule 253)

    EOL 	shift, and go to state 713



state 615

    vinst  ->  opt_var VI_arg Decimal_num . Decimal_num data_type name array_range opt_flags EOL   (rule 175)

    Decimal_num	shift, and go to state 714



state 616

    init_code  ->  VI_initial_begin EOL opt_vinsts VI_initial_end EOL .   (rule 150)

    $default	reduce using rule 150 (init_code)



state 617

    mfunc_code  ->  VI_mfunc name name EOL opt_vinsts . VI_func_end EOL   (rule 153)

    VI_func_end	shift, and go to state 715



state 618

    port_info  ->  VI_port direction '[' Decimal_num ':' . Decimal_num ']' name opt_port_attrib EOL   (rule 29)

    Decimal_num	shift, and go to state 716



state 619

    port_infos  ->  port_info .   (rule 46)

    $default	reduce using rule 46 (port_infos)



state 620

    portset_info  ->  VI_portset name '{' EOL port_infos . '}' EOL   (rule 45)
    port_infos  ->  port_infos . port_info   (rule 47)

    VI_port	shift, and go to state 21
    '}' 	shift, and go to state 717

    port_info	go to state 718



state 621

    static_var_dcl  ->  VI_stat_var name name data_type name . array_range opt_var_attribs EOL   (rule 148)

    VI_array	shift, and go to state 624
    VI_assoc	shift, and go to state 625
    VI_list	shift, and go to state 626
    VI_marray	shift, and go to state 627
    VI_single	shift, and go to state 628
    VI_stridx	shift, and go to state 629

    array_range	go to state 719



state 622

    static_init_code  ->  VI_static_init EOL opt_vinsts VI_static_init_end EOL .   (rule 149)

    $default	reduce using rule 149 (static_init_code)



state 623

    data_type  ->  VI_bit '[' Decimal_num . ':' Decimal_num ']'   (rule 56)

    ':' 	shift, and go to state 720



state 624

    array_range  ->  VI_array . Decimal_num   (rule 64)

    Decimal_num	shift, and go to state 721



state 625

    array_range  ->  VI_assoc .   (rule 67)

    $default	reduce using rule 67 (array_range)



state 626

    array_range  ->  VI_list .   (rule 68)

    $default	reduce using rule 68 (array_range)



state 627

    array_range  ->  VI_marray . Decimal_num '(' range_list ')'   (rule 65)

    Decimal_num	shift, and go to state 722



state 628

    array_range  ->  VI_single .   (rule 63)

    $default	reduce using rule 63 (array_range)



state 629

    array_range  ->  VI_stridx .   (rule 66)

    $default	reduce using rule 66 (array_range)



state 630

    variable_dcl  ->  VI_variable Decimal_num data_type name array_range . opt_var_attribs EOL   (rule 50)

    VI_clone	shift, and go to state 723
    VI_extern	shift, and go to state 724
    VI_final	shift, and go to state 725
    VI_global	shift, and go to state 726
    VI_local	shift, and go to state 727
    VI_protected	shift, and go to state 728
    VI_static	shift, and go to state 729

    $default	reduce using rule 71 (opt_var_attribs)

    opt_var_attribs	go to state 730
    var_attribs	go to state 731
    var_attrib	go to state 732



state 631

    argument  ->  VI_formal . data_type EOL   (rule 103)

    VI_bit	shift, and go to state 237
    VI_class	shift, and go to state 238
    VI_class_type	shift, and go to state 239
    VI_double	shift, and go to state 240
    VI_enum	shift, and go to state 241
    VI_float	shift, and go to state 242
    VI_int	shift, and go to state 243
    VI_long	shift, and go to state 244
    VI_signal	shift, and go to state 245
    VI_string	shift, and go to state 246
    VI_sys_class	shift, and go to state 247
    VI_void	shift, and go to state 248

    data_type	go to state 733



state 632

    argument  ->  '[' . EOL argument ']' EOL   (rule 107)

    EOL 	shift, and go to state 734



state 633

    argument  ->  '(' . EOL argument ')' '*' EOL   (rule 104)
    argument  ->  '(' . EOL argument ')' '+' EOL   (rule 106)

    EOL 	shift, and go to state 735



state 634

    argument  ->  '?' . EOL   (rule 105)

    EOL 	shift, and go to state 736



state 635

    verilog_task_info  ->  VI_verilog_task Name '(' EOL opt_arguments . ')' String_lit EOL   (rule 124)

    ')' 	shift, and go to state 737



state 636

    opt_arguments  ->  arguments .   (rule 99)
    arguments  ->  arguments . argument   (rule 101)

    VI_formal	shift, and go to state 631
    VI_var	shift, and go to state 222
    '[' 	shift, and go to state 632
    '(' 	shift, and go to state 633
    '?' 	shift, and go to state 634

    ')' 	reduce using rule 99 (opt_arguments)
    $default	reduce using rule 108 (opt_var)

    argument	go to state 738
    opt_var	go to state 638



state 637

    arguments  ->  argument .   (rule 100)

    $default	reduce using rule 100 (arguments)



state 638

    argument  ->  opt_var . data_type name array_range EOL   (rule 102)

    VI_bit	shift, and go to state 237
    VI_class	shift, and go to state 238
    VI_class_type	shift, and go to state 239
    VI_double	shift, and go to state 240
    VI_enum	shift, and go to state 241
    VI_float	shift, and go to state 242
    VI_int	shift, and go to state 243
    VI_long	shift, and go to state 244
    VI_signal	shift, and go to state 245
    VI_string	shift, and go to state 246
    VI_sys_class	shift, and go to state 247
    VI_void	shift, and go to state 248

    data_type	go to state 739



state 639

    aspect_info  ->  VI_aspect name Decimal_num String_lit '{' EOL . @2 opt_aspect_members '}' EOL   (rule 123)

    $default	reduce using rule 122 (@2)

    @2  	go to state 740



state 640

    advice_code  ->  VI_advice name name EOL opt_vinsts VI_advice_end . EOL   (rule 156)

    EOL 	shift, and go to state 741



state 641

    afunc_code  ->  VI_afunc name name EOL opt_vinsts VI_func_end . EOL   (rule 155)

    EOL 	shift, and go to state 742



state 642

    class_info  ->  VI_class name opt_extention opt_class_attribs Decimal_num String_lit . '{' EOL @1 opt_class_members '}' EOL   (rule 121)

    '{' 	shift, and go to state 743



state 643

    class_alloc_code  ->  VI_class_alloc name EOL opt_vinsts VI_class_alloc_end EOL .   (rule 152)

    $default	reduce using rule 152 (class_alloc_code)



state 644

    class_init_code  ->  VI_class_initial_begin name EOL opt_vinsts VI_class_initial_end EOL .   (rule 151)

    $default	reduce using rule 151 (class_init_code)



state 645

    connection_info  ->  VI_connection VI_port name '=' String_lit EOL .   (rule 48)

    $default	reduce using rule 48 (connection_info)



state 646

    connection_info  ->  VI_connection VI_portset name name '=' String_lit . EOL   (rule 49)

    EOL 	shift, and go to state 744



state 647

    func_code  ->  VI_func name EOL opt_vinsts VI_func_end EOL .   (rule 154)

    $default	reduce using rule 154 (func_code)



state 648

    function_info  ->  VI_function Decimal_num opt_func_options data_type name Decimal_num . String_lit '(' EOL opt_arguments ')' EOL   (rule 85)

    String_lit	shift, and go to state 745



state 649

    dtype  ->  '(' type_code ',' . type_code ')'   (rule 324)

    VI_array	shift, and go to state 453
    VI_assoc	shift, and go to state 454
    VI_bit	shift, and go to state 455
    VI_enum	shift, and go to state 456
    VI_float	shift, and go to state 457
    VI_int	shift, and go to state 458
    VI_list	shift, and go to state 459
    VI_marray	shift, and go to state 460
    VI_null	shift, and go to state 461
    VI_obj	shift, and go to state 462
    VI_ptset	shift, and go to state 463
    VI_signal	shift, and go to state 464
    VI_stridx	shift, and go to state 465
    VI_string	shift, and go to state 466
    VI_void	shift, and go to state 467

    type_code	go to state 746



state 650

    vinst  ->  VI_alloc Decimal_num data_type name . array_range opt_flags EOL   (rule 173)

    VI_array	shift, and go to state 624
    VI_assoc	shift, and go to state 625
    VI_list	shift, and go to state 626
    VI_marray	shift, and go to state 627
    VI_single	shift, and go to state 628
    VI_stridx	shift, and go to state 629

    array_range	go to state 747



state 651

    vinst  ->  VI_alloc_static name name Decimal_num . data_type name array_range opt_flags EOL   (rule 174)

    VI_bit	shift, and go to state 237
    VI_class	shift, and go to state 238
    VI_class_type	shift, and go to state 239
    VI_double	shift, and go to state 240
    VI_enum	shift, and go to state 241
    VI_float	shift, and go to state 242
    VI_int	shift, and go to state 243
    VI_long	shift, and go to state 244
    VI_signal	shift, and go to state 245
    VI_string	shift, and go to state 246
    VI_sys_class	shift, and go to state 247
    VI_void	shift, and go to state 248

    data_type	go to state 748



state 652

    vinst  ->  VI_call name Decimal_num EOL .   (rule 250)

    $default	reduce using rule 250 (vinst)



state 653

    vinst  ->  VI_call_m name name Decimal_num . EOL   (rule 251)

    EOL 	shift, and go to state 749



state 654

    vinst  ->  VI_call_a name name Decimal_num . EOL   (rule 252)

    EOL 	shift, and go to state 750



state 655

    opt_class_pointcut  ->  '(' name . ')'   (rule 322)

    ')' 	shift, and go to state 751



state 656

    vinst  ->  VI_copy VI_alu Decimal_num EOL .   (rule 239)

    $default	reduce using rule 239 (vinst)



state 657

    vinst  ->  VI_convert VI_bit Decimal_num Decimal_num . stype EOL   (rule 178)

    '(' 	shift, and go to state 295

    stype	go to state 752



state 658

    vinst  ->  VI_convert VI_float stype EOL .   (rule 180)

    $default	reduce using rule 180 (vinst)



state 659

    vinst  ->  VI_convert VI_string stype EOL .   (rule 179)

    $default	reduce using rule 179 (vinst)



state 660

    stype  ->  '(' type_code ')' .   (rule 323)

    $default	reduce using rule 323 (stype)



state 661

    ttype  ->  '(' type_code ',' . type_code ',' type_code ')'   (rule 325)

    VI_array	shift, and go to state 453
    VI_assoc	shift, and go to state 454
    VI_bit	shift, and go to state 455
    VI_enum	shift, and go to state 456
    VI_float	shift, and go to state 457
    VI_int	shift, and go to state 458
    VI_list	shift, and go to state 459
    VI_marray	shift, and go to state 460
    VI_null	shift, and go to state 461
    VI_obj	shift, and go to state 462
    VI_ptset	shift, and go to state 463
    VI_signal	shift, and go to state 464
    VI_stridx	shift, and go to state 465
    VI_string	shift, and go to state 466
    VI_void	shift, and go to state 467

    type_code	go to state 753



state 662

    opt_bit_type  ->  VI_i_endian '[' Decimal_num . ':' Decimal_num ']'   (rule 363)

    ':' 	shift, and go to state 754



state 663

    opt_bit_type  ->  VI_nz_lsb '[' Decimal_num . ':' Decimal_num ']'   (rule 364)

    ':' 	shift, and go to state 755



state 664

    vinst  ->  VI_get_super opt_var Decimal_num EOL .   (rule 229)

    $default	reduce using rule 229 (vinst)



state 665

    vinst  ->  VI_get_child opt_var Decimal_num EOL .   (rule 230)

    $default	reduce using rule 230 (vinst)



state 666

    vinst  ->  VI_jnz stype label EOL .   (rule 246)

    $default	reduce using rule 246 (vinst)



state 667

    vinst  ->  VI_jz stype label EOL .   (rule 245)

    $default	reduce using rule 245 (vinst)



state 668

    vinst  ->  VI_list stype Decimal_num EOL .   (rule 233)

    $default	reduce using rule 233 (vinst)



state 669

    vinst  ->  VI_load_const stype const_data EOL .   (rule 224)

    $default	reduce using rule 224 (vinst)



state 670

    const_data  ->  name name . Decimal_num   (rule 348)

    Decimal_num	shift, and go to state 756



state 671

    vinst  ->  VI_load_port VI_subbit name EOL .   (rule 278)

    $default	reduce using rule 278 (vinst)



state 672

    vinst  ->  VI_load_port_ptr VI_subbit name EOL .   (rule 280)

    $default	reduce using rule 280 (vinst)



state 673

    vinst  ->  VI_load_pset_port VI_subbit name name . EOL   (rule 279)

    EOL 	shift, and go to state 757



state 674

    vinst  ->  VI_load_pset_port name name EOL .   (rule 275)

    $default	reduce using rule 275 (vinst)



state 675

    vinst  ->  VI_load_pset_port_ptr VI_subbit name name . EOL   (rule 281)

    EOL 	shift, and go to state 758



state 676

    vinst  ->  VI_load_pset_port_ptr name name EOL .   (rule 277)

    $default	reduce using rule 277 (vinst)



state 677

    opt_array_access  ->  VI_marray Decimal_num '(' . range_list ')'   (rule 356)

    Decimal_num	shift, and go to state 759

    range_list	go to state 760



state 678

    vinst  ->  VI_load_static opt_array_access name name . name EOL   (rule 285)

    Name	shift, and go to state 51

    name	go to state 761



state 679

    vinst  ->  VI_loadg opt_array_access opt_var name . EOL   (rule 272)

    EOL 	shift, and go to state 762



state 680

    vinst  ->  VI_loadl opt_array_access opt_static opt_var . Decimal_num EOL   (rule 271)

    Decimal_num	shift, and go to state 763



state 681

    vinst  ->  VI_loadm opt_array_access opt_static opt_var . name name EOL   (rule 273)

    Name	shift, and go to state 51

    name	go to state 764



state 682

    vinst  ->  VI_lvar Decimal_num data_type name . array_range opt_flags EOL   (rule 166)

    VI_array	shift, and go to state 624
    VI_assoc	shift, and go to state 625
    VI_list	shift, and go to state 626
    VI_marray	shift, and go to state 627
    VI_single	shift, and go to state 628
    VI_stridx	shift, and go to state 629

    array_range	go to state 765



state 683

    vinst  ->  VI_lvar VI_static Decimal_num data_type . name name name array_range opt_flags EOL   (rule 167)

    Name	shift, and go to state 51

    name	go to state 766



state 684

    vinst  ->  VI_new_obj name EOL @3 .   (rule 170)

    $default	reduce using rule 170 (vinst)



state 685

    vinst  ->  VI_overwrite name name name .   (rule 309)

    $default	reduce using rule 309 (vinst)



state 686

    vinst  ->  VI_store_obj dtype name name . EOL   (rule 306)

    EOL 	shift, and go to state 767



state 687

    vinst  ->  VI_store_port VI_subbit opt_bit_type dtype . strength name EOL   (rule 293)

    VI_normal	shift, and go to state 577
    VI_strong	shift, and go to state 578
    VI_weak	shift, and go to state 579

    strength	go to state 768



state 688

    vinst  ->  VI_store_port dtype strength name . EOL   (rule 292)

    EOL 	shift, and go to state 769



state 689

    vinst  ->  VI_store_pset_port VI_subbit opt_bit_type dtype . strength name name EOL   (rule 295)

    VI_normal	shift, and go to state 577
    VI_strong	shift, and go to state 578
    VI_weak	shift, and go to state 579

    strength	go to state 770



state 690

    vinst  ->  VI_store_pset_port dtype strength name . name EOL   (rule 294)

    Name	shift, and go to state 51

    name	go to state 771



state 691

    vinst  ->  VI_store_sig_g opt_array_access opt_static VI_subbit . opt_bit_type dtype strength name EOL   (rule 300)

    VI_i_endian	shift, and go to state 322
    VI_nz_lsb	shift, and go to state 323

    $default	reduce using rule 362 (opt_bit_type)

    opt_bit_type	go to state 772



state 692

    vinst  ->  VI_store_sig_g opt_array_access opt_static dtype . strength name EOL   (rule 297)

    VI_normal	shift, and go to state 577
    VI_strong	shift, and go to state 578
    VI_weak	shift, and go to state 579

    strength	go to state 773



state 693

    vinst  ->  VI_store_sig_l opt_array_access opt_static VI_subbit . opt_bit_type dtype strength Decimal_num EOL   (rule 299)

    VI_i_endian	shift, and go to state 322
    VI_nz_lsb	shift, and go to state 323

    $default	reduce using rule 362 (opt_bit_type)

    opt_bit_type	go to state 774



state 694

    vinst  ->  VI_store_sig_l opt_array_access opt_static dtype . strength Decimal_num EOL   (rule 296)

    VI_normal	shift, and go to state 577
    VI_strong	shift, and go to state 578
    VI_weak	shift, and go to state 579

    strength	go to state 775



state 695

    vinst  ->  VI_store_sig_m opt_array_access opt_static VI_subbit . opt_bit_type dtype strength name name EOL   (rule 301)

    VI_i_endian	shift, and go to state 322
    VI_nz_lsb	shift, and go to state 323

    $default	reduce using rule 362 (opt_bit_type)

    opt_bit_type	go to state 776



state 696

    vinst  ->  VI_store_sig_m opt_array_access opt_static dtype . strength name name EOL   (rule 298)

    VI_normal	shift, and go to state 577
    VI_strong	shift, and go to state 578
    VI_weak	shift, and go to state 579

    strength	go to state 777



state 697

    vinst  ->  VI_store_sig_static opt_array_access VI_subbit opt_bit_type . dtype strength name name name EOL   (rule 305)

    '(' 	shift, and go to state 272

    dtype	go to state 778



state 698

    vinst  ->  VI_store_sig_static opt_array_access dtype strength . name name name EOL   (rule 303)

    Name	shift, and go to state 51

    name	go to state 779



state 699

    vinst  ->  VI_store_static opt_array_access VI_subbit opt_bit_type . dtype name name name EOL   (rule 304)

    '(' 	shift, and go to state 272

    dtype	go to state 780



state 700

    vinst  ->  VI_store_static opt_array_access dtype name . name name EOL   (rule 302)

    Name	shift, and go to state 51

    name	go to state 781



state 701

    vinst  ->  VI_storeg opt_array_access opt_static VI_subbit . opt_bit_type dtype name EOL   (rule 289)

    VI_i_endian	shift, and go to state 322
    VI_nz_lsb	shift, and go to state 323

    $default	reduce using rule 362 (opt_bit_type)

    opt_bit_type	go to state 782



state 702

    vinst  ->  VI_storeg opt_array_access opt_static dtype . name EOL   (rule 288)

    Name	shift, and go to state 51

    name	go to state 783



state 703

    vinst  ->  VI_storel opt_array_access opt_static VI_subbit . opt_bit_type dtype Decimal_num EOL   (rule 287)

    VI_i_endian	shift, and go to state 322
    VI_nz_lsb	shift, and go to state 323

    $default	reduce using rule 362 (opt_bit_type)

    opt_bit_type	go to state 784



state 704

    vinst  ->  VI_storel opt_array_access opt_static dtype . Decimal_num EOL   (rule 286)

    Decimal_num	shift, and go to state 785



state 705

    vinst  ->  VI_storem opt_array_access opt_static VI_subbit . opt_bit_type dtype name name EOL   (rule 291)

    VI_i_endian	shift, and go to state 322
    VI_nz_lsb	shift, and go to state 323

    $default	reduce using rule 362 (opt_bit_type)

    opt_bit_type	go to state 786



state 706

    vinst  ->  VI_storem opt_array_access opt_static dtype . name name EOL   (rule 290)

    Name	shift, and go to state 51

    name	go to state 787



state 707

    vinst  ->  VI_sync VI_clk_of_port edge name . EOL   (rule 266)

    EOL 	shift, and go to state 788



state 708

    vinst  ->  VI_sync VI_clk_of_pset_port edge name . name EOL   (rule 265)

    Name	shift, and go to state 51

    name	go to state 789



state 709

    vinst  ->  VI_sync VI_clk_of_signal edge EOL .   (rule 267)

    $default	reduce using rule 267 (vinst)



state 710

    vinst  ->  VI_sync VI_port edge name . EOL   (rule 269)

    EOL 	shift, and go to state 790



state 711

    vinst  ->  VI_sync VI_pset_port edge name . name EOL   (rule 268)

    Name	shift, and go to state 51

    name	go to state 791



state 712

    vinst  ->  VI_sync VI_signal edge EOL .   (rule 270)

    $default	reduce using rule 270 (vinst)



state 713

    vinst  ->  VI_veri_call name Decimal_num EOL .   (rule 253)

    $default	reduce using rule 253 (vinst)



state 714

    vinst  ->  opt_var VI_arg Decimal_num Decimal_num . data_type name array_range opt_flags EOL   (rule 175)

    VI_bit	shift, and go to state 237
    VI_class	shift, and go to state 238
    VI_class_type	shift, and go to state 239
    VI_double	shift, and go to state 240
    VI_enum	shift, and go to state 241
    VI_float	shift, and go to state 242
    VI_int	shift, and go to state 243
    VI_long	shift, and go to state 244
    VI_signal	shift, and go to state 245
    VI_string	shift, and go to state 246
    VI_sys_class	shift, and go to state 247
    VI_void	shift, and go to state 248

    data_type	go to state 792



state 715

    mfunc_code  ->  VI_mfunc name name EOL opt_vinsts VI_func_end . EOL   (rule 153)

    EOL 	shift, and go to state 793



state 716

    port_info  ->  VI_port direction '[' Decimal_num ':' Decimal_num . ']' name opt_port_attrib EOL   (rule 29)

    ']' 	shift, and go to state 794



state 717

    portset_info  ->  VI_portset name '{' EOL port_infos '}' . EOL   (rule 45)

    EOL 	shift, and go to state 795



state 718

    port_infos  ->  port_infos port_info .   (rule 47)

    $default	reduce using rule 47 (port_infos)



state 719

    static_var_dcl  ->  VI_stat_var name name data_type name array_range . opt_var_attribs EOL   (rule 148)

    VI_clone	shift, and go to state 723
    VI_extern	shift, and go to state 724
    VI_final	shift, and go to state 725
    VI_global	shift, and go to state 726
    VI_local	shift, and go to state 727
    VI_protected	shift, and go to state 728
    VI_static	shift, and go to state 729

    $default	reduce using rule 71 (opt_var_attribs)

    opt_var_attribs	go to state 796
    var_attribs	go to state 731
    var_attrib	go to state 732



state 720

    data_type  ->  VI_bit '[' Decimal_num ':' . Decimal_num ']'   (rule 56)

    Decimal_num	shift, and go to state 797



state 721

    array_range  ->  VI_array Decimal_num .   (rule 64)

    $default	reduce using rule 64 (array_range)



state 722

    array_range  ->  VI_marray Decimal_num . '(' range_list ')'   (rule 65)

    '(' 	shift, and go to state 798



state 723

    var_attrib  ->  VI_clone .   (rule 76)

    $default	reduce using rule 76 (var_attrib)



state 724

    var_attrib  ->  VI_extern .   (rule 77)

    $default	reduce using rule 77 (var_attrib)



state 725

    var_attrib  ->  VI_final .   (rule 81)

    $default	reduce using rule 81 (var_attrib)



state 726

    var_attrib  ->  VI_global .   (rule 79)

    $default	reduce using rule 79 (var_attrib)



state 727

    var_attrib  ->  VI_local .   (rule 78)

    $default	reduce using rule 78 (var_attrib)



state 728

    var_attrib  ->  VI_protected .   (rule 80)

    $default	reduce using rule 80 (var_attrib)



state 729

    var_attrib  ->  VI_static .   (rule 75)

    $default	reduce using rule 75 (var_attrib)



state 730

    variable_dcl  ->  VI_variable Decimal_num data_type name array_range opt_var_attribs . EOL   (rule 50)

    EOL 	shift, and go to state 799



state 731

    opt_var_attribs  ->  var_attribs .   (rule 72)
    var_attribs  ->  var_attribs . var_attrib   (rule 74)

    VI_clone	shift, and go to state 723
    VI_extern	shift, and go to state 724
    VI_final	shift, and go to state 725
    VI_global	shift, and go to state 726
    VI_local	shift, and go to state 727
    VI_protected	shift, and go to state 728
    VI_static	shift, and go to state 729

    $default	reduce using rule 72 (opt_var_attribs)

    var_attrib	go to state 800



state 732

    var_attribs  ->  var_attrib .   (rule 73)

    $default	reduce using rule 73 (var_attribs)



state 733

    argument  ->  VI_formal data_type . EOL   (rule 103)

    EOL 	shift, and go to state 801



state 734

    argument  ->  '[' EOL . argument ']' EOL   (rule 107)

    VI_formal	shift, and go to state 631
    VI_var	shift, and go to state 222
    '[' 	shift, and go to state 632
    '(' 	shift, and go to state 633
    '?' 	shift, and go to state 634

    $default	reduce using rule 108 (opt_var)

    argument	go to state 802
    opt_var	go to state 638



state 735

    argument  ->  '(' EOL . argument ')' '*' EOL   (rule 104)
    argument  ->  '(' EOL . argument ')' '+' EOL   (rule 106)

    VI_formal	shift, and go to state 631
    VI_var	shift, and go to state 222
    '[' 	shift, and go to state 632
    '(' 	shift, and go to state 633
    '?' 	shift, and go to state 634

    $default	reduce using rule 108 (opt_var)

    argument	go to state 803
    opt_var	go to state 638



state 736

    argument  ->  '?' EOL .   (rule 105)

    $default	reduce using rule 105 (argument)



state 737

    verilog_task_info  ->  VI_verilog_task Name '(' EOL opt_arguments ')' . String_lit EOL   (rule 124)

    String_lit	shift, and go to state 804



state 738

    arguments  ->  arguments argument .   (rule 101)

    $default	reduce using rule 101 (arguments)



state 739

    argument  ->  opt_var data_type . name array_range EOL   (rule 102)

    Name	shift, and go to state 51

    name	go to state 805



state 740

    aspect_info  ->  VI_aspect name Decimal_num String_lit '{' EOL @2 . opt_aspect_members '}' EOL   (rule 123)

    VI_advice	shift, and go to state 806
    VI_function	shift, and go to state 18
    VI_variable	shift, and go to state 25

    $default	reduce using rule 141 (opt_aspect_members)

    variable_dcl	go to state 807
    function_info	go to state 808
    advice_info	go to state 809
    opt_aspect_members	go to state 810
    aspect_members	go to state 811
    aspect_member	go to state 812



state 741

    advice_code  ->  VI_advice name name EOL opt_vinsts VI_advice_end EOL .   (rule 156)

    $default	reduce using rule 156 (advice_code)



state 742

    afunc_code  ->  VI_afunc name name EOL opt_vinsts VI_func_end EOL .   (rule 155)

    $default	reduce using rule 155 (afunc_code)



state 743

    class_info  ->  VI_class name opt_extention opt_class_attribs Decimal_num String_lit '{' . EOL @1 opt_class_members '}' EOL   (rule 121)

    EOL 	shift, and go to state 813



state 744

    connection_info  ->  VI_connection VI_portset name name '=' String_lit EOL .   (rule 49)

    $default	reduce using rule 49 (connection_info)



state 745

    function_info  ->  VI_function Decimal_num opt_func_options data_type name Decimal_num String_lit . '(' EOL opt_arguments ')' EOL   (rule 85)

    '(' 	shift, and go to state 814



state 746

    dtype  ->  '(' type_code ',' type_code . ')'   (rule 324)

    ')' 	shift, and go to state 815



state 747

    vinst  ->  VI_alloc Decimal_num data_type name array_range . opt_flags EOL   (rule 173)

    VI_clone	shift, and go to state 816
    VI_static	shift, and go to state 817

    $default	reduce using rule 326 (opt_flags)

    opt_flags	go to state 818



state 748

    vinst  ->  VI_alloc_static name name Decimal_num data_type . name array_range opt_flags EOL   (rule 174)

    Name	shift, and go to state 51

    name	go to state 819



state 749

    vinst  ->  VI_call_m name name Decimal_num EOL .   (rule 251)

    $default	reduce using rule 251 (vinst)



state 750

    vinst  ->  VI_call_a name name Decimal_num EOL .   (rule 252)

    $default	reduce using rule 252 (vinst)



state 751

    opt_class_pointcut  ->  '(' name ')' .   (rule 322)

    $default	reduce using rule 322 (opt_class_pointcut)



state 752

    vinst  ->  VI_convert VI_bit Decimal_num Decimal_num stype . EOL   (rule 178)

    EOL 	shift, and go to state 820



state 753

    ttype  ->  '(' type_code ',' type_code . ',' type_code ')'   (rule 325)

    ',' 	shift, and go to state 821



state 754

    opt_bit_type  ->  VI_i_endian '[' Decimal_num ':' . Decimal_num ']'   (rule 363)

    Decimal_num	shift, and go to state 822



state 755

    opt_bit_type  ->  VI_nz_lsb '[' Decimal_num ':' . Decimal_num ']'   (rule 364)

    Decimal_num	shift, and go to state 823



state 756

    const_data  ->  name name Decimal_num .   (rule 348)

    $default	reduce using rule 348 (const_data)



state 757

    vinst  ->  VI_load_pset_port VI_subbit name name EOL .   (rule 279)

    $default	reduce using rule 279 (vinst)



state 758

    vinst  ->  VI_load_pset_port_ptr VI_subbit name name EOL .   (rule 281)

    $default	reduce using rule 281 (vinst)



state 759

    range_list  ->  Decimal_num .   (rule 69)

    $default	reduce using rule 69 (range_list)



state 760

    range_list  ->  range_list . Decimal_num   (rule 70)
    opt_array_access  ->  VI_marray Decimal_num '(' range_list . ')'   (rule 356)

    Decimal_num	shift, and go to state 824
    ')' 	shift, and go to state 825



state 761

    vinst  ->  VI_load_static opt_array_access name name name . EOL   (rule 285)

    EOL 	shift, and go to state 826



state 762

    vinst  ->  VI_loadg opt_array_access opt_var name EOL .   (rule 272)

    $default	reduce using rule 272 (vinst)



state 763

    vinst  ->  VI_loadl opt_array_access opt_static opt_var Decimal_num . EOL   (rule 271)

    EOL 	shift, and go to state 827



state 764

    vinst  ->  VI_loadm opt_array_access opt_static opt_var name . name EOL   (rule 273)

    Name	shift, and go to state 51

    name	go to state 828



state 765

    vinst  ->  VI_lvar Decimal_num data_type name array_range . opt_flags EOL   (rule 166)

    VI_clone	shift, and go to state 816
    VI_static	shift, and go to state 817

    $default	reduce using rule 326 (opt_flags)

    opt_flags	go to state 829



state 766

    vinst  ->  VI_lvar VI_static Decimal_num data_type name . name name array_range opt_flags EOL   (rule 167)

    Name	shift, and go to state 51

    name	go to state 830



state 767

    vinst  ->  VI_store_obj dtype name name EOL .   (rule 306)

    $default	reduce using rule 306 (vinst)



state 768

    vinst  ->  VI_store_port VI_subbit opt_bit_type dtype strength . name EOL   (rule 293)

    Name	shift, and go to state 51

    name	go to state 831



state 769

    vinst  ->  VI_store_port dtype strength name EOL .   (rule 292)

    $default	reduce using rule 292 (vinst)



state 770

    vinst  ->  VI_store_pset_port VI_subbit opt_bit_type dtype strength . name name EOL   (rule 295)

    Name	shift, and go to state 51

    name	go to state 832



state 771

    vinst  ->  VI_store_pset_port dtype strength name name . EOL   (rule 294)

    EOL 	shift, and go to state 833



state 772

    vinst  ->  VI_store_sig_g opt_array_access opt_static VI_subbit opt_bit_type . dtype strength name EOL   (rule 300)

    '(' 	shift, and go to state 272

    dtype	go to state 834



state 773

    vinst  ->  VI_store_sig_g opt_array_access opt_static dtype strength . name EOL   (rule 297)

    Name	shift, and go to state 51

    name	go to state 835



state 774

    vinst  ->  VI_store_sig_l opt_array_access opt_static VI_subbit opt_bit_type . dtype strength Decimal_num EOL   (rule 299)

    '(' 	shift, and go to state 272

    dtype	go to state 836



state 775

    vinst  ->  VI_store_sig_l opt_array_access opt_static dtype strength . Decimal_num EOL   (rule 296)

    Decimal_num	shift, and go to state 837



state 776

    vinst  ->  VI_store_sig_m opt_array_access opt_static VI_subbit opt_bit_type . dtype strength name name EOL   (rule 301)

    '(' 	shift, and go to state 272

    dtype	go to state 838



state 777

    vinst  ->  VI_store_sig_m opt_array_access opt_static dtype strength . name name EOL   (rule 298)

    Name	shift, and go to state 51

    name	go to state 839



state 778

    vinst  ->  VI_store_sig_static opt_array_access VI_subbit opt_bit_type dtype . strength name name name EOL   (rule 305)

    VI_normal	shift, and go to state 577
    VI_strong	shift, and go to state 578
    VI_weak	shift, and go to state 579

    strength	go to state 840



state 779

    vinst  ->  VI_store_sig_static opt_array_access dtype strength name . name name EOL   (rule 303)

    Name	shift, and go to state 51

    name	go to state 841



state 780

    vinst  ->  VI_store_static opt_array_access VI_subbit opt_bit_type dtype . name name name EOL   (rule 304)

    Name	shift, and go to state 51

    name	go to state 842



state 781

    vinst  ->  VI_store_static opt_array_access dtype name name . name EOL   (rule 302)

    Name	shift, and go to state 51

    name	go to state 843



state 782

    vinst  ->  VI_storeg opt_array_access opt_static VI_subbit opt_bit_type . dtype name EOL   (rule 289)

    '(' 	shift, and go to state 272

    dtype	go to state 844



state 783

    vinst  ->  VI_storeg opt_array_access opt_static dtype name . EOL   (rule 288)

    EOL 	shift, and go to state 845



state 784

    vinst  ->  VI_storel opt_array_access opt_static VI_subbit opt_bit_type . dtype Decimal_num EOL   (rule 287)

    '(' 	shift, and go to state 272

    dtype	go to state 846



state 785

    vinst  ->  VI_storel opt_array_access opt_static dtype Decimal_num . EOL   (rule 286)

    EOL 	shift, and go to state 847



state 786

    vinst  ->  VI_storem opt_array_access opt_static VI_subbit opt_bit_type . dtype name name EOL   (rule 291)

    '(' 	shift, and go to state 272

    dtype	go to state 848



state 787

    vinst  ->  VI_storem opt_array_access opt_static dtype name . name EOL   (rule 290)

    Name	shift, and go to state 51

    name	go to state 849



state 788

    vinst  ->  VI_sync VI_clk_of_port edge name EOL .   (rule 266)

    $default	reduce using rule 266 (vinst)



state 789

    vinst  ->  VI_sync VI_clk_of_pset_port edge name name . EOL   (rule 265)

    EOL 	shift, and go to state 850



state 790

    vinst  ->  VI_sync VI_port edge name EOL .   (rule 269)

    $default	reduce using rule 269 (vinst)



state 791

    vinst  ->  VI_sync VI_pset_port edge name name . EOL   (rule 268)

    EOL 	shift, and go to state 851



state 792

    vinst  ->  opt_var VI_arg Decimal_num Decimal_num data_type . name array_range opt_flags EOL   (rule 175)

    Name	shift, and go to state 51

    name	go to state 852



state 793

    mfunc_code  ->  VI_mfunc name name EOL opt_vinsts VI_func_end EOL .   (rule 153)

    $default	reduce using rule 153 (mfunc_code)



state 794

    port_info  ->  VI_port direction '[' Decimal_num ':' Decimal_num ']' . name opt_port_attrib EOL   (rule 29)

    Name	shift, and go to state 51

    name	go to state 853



state 795

    portset_info  ->  VI_portset name '{' EOL port_infos '}' EOL .   (rule 45)

    $default	reduce using rule 45 (portset_info)



state 796

    static_var_dcl  ->  VI_stat_var name name data_type name array_range opt_var_attribs . EOL   (rule 148)

    EOL 	shift, and go to state 854



state 797

    data_type  ->  VI_bit '[' Decimal_num ':' Decimal_num . ']'   (rule 56)

    ']' 	shift, and go to state 855



state 798

    array_range  ->  VI_marray Decimal_num '(' . range_list ')'   (rule 65)

    Decimal_num	shift, and go to state 759

    range_list	go to state 856



state 799

    variable_dcl  ->  VI_variable Decimal_num data_type name array_range opt_var_attribs EOL .   (rule 50)

    $default	reduce using rule 50 (variable_dcl)



state 800

    var_attribs  ->  var_attribs var_attrib .   (rule 74)

    $default	reduce using rule 74 (var_attribs)



state 801

    argument  ->  VI_formal data_type EOL .   (rule 103)

    $default	reduce using rule 103 (argument)



state 802

    argument  ->  '[' EOL argument . ']' EOL   (rule 107)

    ']' 	shift, and go to state 857



state 803

    argument  ->  '(' EOL argument . ')' '*' EOL   (rule 104)
    argument  ->  '(' EOL argument . ')' '+' EOL   (rule 106)

    ')' 	shift, and go to state 858



state 804

    verilog_task_info  ->  VI_verilog_task Name '(' EOL opt_arguments ')' String_lit . EOL   (rule 124)

    EOL 	shift, and go to state 859



state 805

    argument  ->  opt_var data_type name . array_range EOL   (rule 102)

    VI_array	shift, and go to state 624
    VI_assoc	shift, and go to state 625
    VI_list	shift, and go to state 626
    VI_marray	shift, and go to state 627
    VI_single	shift, and go to state 628
    VI_stridx	shift, and go to state 629

    array_range	go to state 860



state 806

    advice_info  ->  VI_advice . Decimal_num opt_func_options data_type name Decimal_num String_lit EOL pointcuts '(' EOL opt_arguments ')' EOL   (rule 119)

    Decimal_num	shift, and go to state 861



state 807

    aspect_member  ->  variable_dcl .   (rule 145)

    $default	reduce using rule 145 (aspect_member)



state 808

    aspect_member  ->  function_info .   (rule 146)

    $default	reduce using rule 146 (aspect_member)



state 809

    aspect_member  ->  advice_info .   (rule 147)

    $default	reduce using rule 147 (aspect_member)



state 810

    aspect_info  ->  VI_aspect name Decimal_num String_lit '{' EOL @2 opt_aspect_members . '}' EOL   (rule 123)

    '}' 	shift, and go to state 862



state 811

    opt_aspect_members  ->  aspect_members .   (rule 142)
    aspect_members  ->  aspect_members . aspect_member   (rule 144)

    VI_advice	shift, and go to state 806
    VI_function	shift, and go to state 18
    VI_variable	shift, and go to state 25

    $default	reduce using rule 142 (opt_aspect_members)

    variable_dcl	go to state 807
    function_info	go to state 808
    advice_info	go to state 809
    aspect_member	go to state 863



state 812

    aspect_members  ->  aspect_member .   (rule 143)

    $default	reduce using rule 143 (aspect_members)



state 813

    class_info  ->  VI_class name opt_extention opt_class_attribs Decimal_num String_lit '{' EOL . @1 opt_class_members '}' EOL   (rule 121)

    $default	reduce using rule 120 (@1)

    @1  	go to state 864



state 814

    function_info  ->  VI_function Decimal_num opt_func_options data_type name Decimal_num String_lit '(' . EOL opt_arguments ')' EOL   (rule 85)

    EOL 	shift, and go to state 865



state 815

    dtype  ->  '(' type_code ',' type_code ')' .   (rule 324)

    $default	reduce using rule 324 (dtype)



state 816

    opt_flags  ->  VI_clone .   (rule 328)
    opt_flags  ->  VI_clone . VI_static   (rule 330)

    VI_static	shift, and go to state 866

    $default	reduce using rule 328 (opt_flags)



state 817

    opt_flags  ->  VI_static .   (rule 327)
    opt_flags  ->  VI_static . VI_clone   (rule 329)

    VI_clone	shift, and go to state 867

    $default	reduce using rule 327 (opt_flags)



state 818

    vinst  ->  VI_alloc Decimal_num data_type name array_range opt_flags . EOL   (rule 173)

    EOL 	shift, and go to state 868



state 819

    vinst  ->  VI_alloc_static name name Decimal_num data_type name . array_range opt_flags EOL   (rule 174)

    VI_array	shift, and go to state 624
    VI_assoc	shift, and go to state 625
    VI_list	shift, and go to state 626
    VI_marray	shift, and go to state 627
    VI_single	shift, and go to state 628
    VI_stridx	shift, and go to state 629

    array_range	go to state 869



state 820

    vinst  ->  VI_convert VI_bit Decimal_num Decimal_num stype EOL .   (rule 178)

    $default	reduce using rule 178 (vinst)



state 821

    ttype  ->  '(' type_code ',' type_code ',' . type_code ')'   (rule 325)

    VI_array	shift, and go to state 453
    VI_assoc	shift, and go to state 454
    VI_bit	shift, and go to state 455
    VI_enum	shift, and go to state 456
    VI_float	shift, and go to state 457
    VI_int	shift, and go to state 458
    VI_list	shift, and go to state 459
    VI_marray	shift, and go to state 460
    VI_null	shift, and go to state 461
    VI_obj	shift, and go to state 462
    VI_ptset	shift, and go to state 463
    VI_signal	shift, and go to state 464
    VI_stridx	shift, and go to state 465
    VI_string	shift, and go to state 466
    VI_void	shift, and go to state 467

    type_code	go to state 870



state 822

    opt_bit_type  ->  VI_i_endian '[' Decimal_num ':' Decimal_num . ']'   (rule 363)

    ']' 	shift, and go to state 871



state 823

    opt_bit_type  ->  VI_nz_lsb '[' Decimal_num ':' Decimal_num . ']'   (rule 364)

    ']' 	shift, and go to state 872



state 824

    range_list  ->  range_list Decimal_num .   (rule 70)

    $default	reduce using rule 70 (range_list)



state 825

    opt_array_access  ->  VI_marray Decimal_num '(' range_list ')' .   (rule 356)

    $default	reduce using rule 356 (opt_array_access)



state 826

    vinst  ->  VI_load_static opt_array_access name name name EOL .   (rule 285)

    $default	reduce using rule 285 (vinst)



state 827

    vinst  ->  VI_loadl opt_array_access opt_static opt_var Decimal_num EOL .   (rule 271)

    $default	reduce using rule 271 (vinst)



state 828

    vinst  ->  VI_loadm opt_array_access opt_static opt_var name name . EOL   (rule 273)

    EOL 	shift, and go to state 873



state 829

    vinst  ->  VI_lvar Decimal_num data_type name array_range opt_flags . EOL   (rule 166)

    EOL 	shift, and go to state 874



state 830

    vinst  ->  VI_lvar VI_static Decimal_num data_type name name . name array_range opt_flags EOL   (rule 167)

    Name	shift, and go to state 51

    name	go to state 875



state 831

    vinst  ->  VI_store_port VI_subbit opt_bit_type dtype strength name . EOL   (rule 293)

    EOL 	shift, and go to state 876



state 832

    vinst  ->  VI_store_pset_port VI_subbit opt_bit_type dtype strength name . name EOL   (rule 295)

    Name	shift, and go to state 51

    name	go to state 877



state 833

    vinst  ->  VI_store_pset_port dtype strength name name EOL .   (rule 294)

    $default	reduce using rule 294 (vinst)



state 834

    vinst  ->  VI_store_sig_g opt_array_access opt_static VI_subbit opt_bit_type dtype . strength name EOL   (rule 300)

    VI_normal	shift, and go to state 577
    VI_strong	shift, and go to state 578
    VI_weak	shift, and go to state 579

    strength	go to state 878



state 835

    vinst  ->  VI_store_sig_g opt_array_access opt_static dtype strength name . EOL   (rule 297)

    EOL 	shift, and go to state 879



state 836

    vinst  ->  VI_store_sig_l opt_array_access opt_static VI_subbit opt_bit_type dtype . strength Decimal_num EOL   (rule 299)

    VI_normal	shift, and go to state 577
    VI_strong	shift, and go to state 578
    VI_weak	shift, and go to state 579

    strength	go to state 880



state 837

    vinst  ->  VI_store_sig_l opt_array_access opt_static dtype strength Decimal_num . EOL   (rule 296)

    EOL 	shift, and go to state 881



state 838

    vinst  ->  VI_store_sig_m opt_array_access opt_static VI_subbit opt_bit_type dtype . strength name name EOL   (rule 301)

    VI_normal	shift, and go to state 577
    VI_strong	shift, and go to state 578
    VI_weak	shift, and go to state 579

    strength	go to state 882



state 839

    vinst  ->  VI_store_sig_m opt_array_access opt_static dtype strength name . name EOL   (rule 298)

    Name	shift, and go to state 51

    name	go to state 883



state 840

    vinst  ->  VI_store_sig_static opt_array_access VI_subbit opt_bit_type dtype strength . name name name EOL   (rule 305)

    Name	shift, and go to state 51

    name	go to state 884



state 841

    vinst  ->  VI_store_sig_static opt_array_access dtype strength name name . name EOL   (rule 303)

    Name	shift, and go to state 51

    name	go to state 885



state 842

    vinst  ->  VI_store_static opt_array_access VI_subbit opt_bit_type dtype name . name name EOL   (rule 304)

    Name	shift, and go to state 51

    name	go to state 886



state 843

    vinst  ->  VI_store_static opt_array_access dtype name name name . EOL   (rule 302)

    EOL 	shift, and go to state 887



state 844

    vinst  ->  VI_storeg opt_array_access opt_static VI_subbit opt_bit_type dtype . name EOL   (rule 289)

    Name	shift, and go to state 51

    name	go to state 888



state 845

    vinst  ->  VI_storeg opt_array_access opt_static dtype name EOL .   (rule 288)

    $default	reduce using rule 288 (vinst)



state 846

    vinst  ->  VI_storel opt_array_access opt_static VI_subbit opt_bit_type dtype . Decimal_num EOL   (rule 287)

    Decimal_num	shift, and go to state 889



state 847

    vinst  ->  VI_storel opt_array_access opt_static dtype Decimal_num EOL .   (rule 286)

    $default	reduce using rule 286 (vinst)



state 848

    vinst  ->  VI_storem opt_array_access opt_static VI_subbit opt_bit_type dtype . name name EOL   (rule 291)

    Name	shift, and go to state 51

    name	go to state 890



state 849

    vinst  ->  VI_storem opt_array_access opt_static dtype name name . EOL   (rule 290)

    EOL 	shift, and go to state 891



state 850

    vinst  ->  VI_sync VI_clk_of_pset_port edge name name EOL .   (rule 265)

    $default	reduce using rule 265 (vinst)



state 851

    vinst  ->  VI_sync VI_pset_port edge name name EOL .   (rule 268)

    $default	reduce using rule 268 (vinst)



state 852

    vinst  ->  opt_var VI_arg Decimal_num Decimal_num data_type name . array_range opt_flags EOL   (rule 175)

    VI_array	shift, and go to state 624
    VI_assoc	shift, and go to state 625
    VI_list	shift, and go to state 626
    VI_marray	shift, and go to state 627
    VI_single	shift, and go to state 628
    VI_stridx	shift, and go to state 629

    array_range	go to state 892



state 853

    port_info  ->  VI_port direction '[' Decimal_num ':' Decimal_num ']' name . opt_port_attrib EOL   (rule 29)

    VI_depth	shift, and go to state 893
    VI_drive	shift, and go to state 894
    VI_path	shift, and go to state 895
    VI_sample	shift, and go to state 896
    '@' 	shift, and go to state 897

    $default	reduce using rule 33 (opt_port_attrib)

    opt_port_attrib	go to state 898
    port_attribs	go to state 899
    port_attrib	go to state 900



state 854

    static_var_dcl  ->  VI_stat_var name name data_type name array_range opt_var_attribs EOL .   (rule 148)

    $default	reduce using rule 148 (static_var_dcl)



state 855

    data_type  ->  VI_bit '[' Decimal_num ':' Decimal_num ']' .   (rule 56)

    $default	reduce using rule 56 (data_type)



state 856

    array_range  ->  VI_marray Decimal_num '(' range_list . ')'   (rule 65)
    range_list  ->  range_list . Decimal_num   (rule 70)

    Decimal_num	shift, and go to state 824
    ')' 	shift, and go to state 901



state 857

    argument  ->  '[' EOL argument ']' . EOL   (rule 107)

    EOL 	shift, and go to state 902



state 858

    argument  ->  '(' EOL argument ')' . '*' EOL   (rule 104)
    argument  ->  '(' EOL argument ')' . '+' EOL   (rule 106)

    '*' 	shift, and go to state 903
    '+' 	shift, and go to state 904



state 859

    verilog_task_info  ->  VI_verilog_task Name '(' EOL opt_arguments ')' String_lit EOL .   (rule 124)

    $default	reduce using rule 124 (verilog_task_info)



state 860

    argument  ->  opt_var data_type name array_range . EOL   (rule 102)

    EOL 	shift, and go to state 905



state 861

    advice_info  ->  VI_advice Decimal_num . opt_func_options data_type name Decimal_num String_lit EOL pointcuts '(' EOL opt_arguments ')' EOL   (rule 119)

    VI_abstract	shift, and go to state 88
    VI_export	shift, and go to state 89
    VI_extern	shift, and go to state 90
    VI_final	shift, and go to state 91
    VI_leaf	shift, and go to state 92
    VI_local	shift, and go to state 93
    VI_overwrite	shift, and go to state 94
    VI_protected	shift, and go to state 95

    $default	reduce using rule 86 (opt_func_options)

    opt_func_options	go to state 906
    func_options	go to state 97
    func_option	go to state 98



state 862

    aspect_info  ->  VI_aspect name Decimal_num String_lit '{' EOL @2 opt_aspect_members '}' . EOL   (rule 123)

    EOL 	shift, and go to state 907



state 863

    aspect_members  ->  aspect_members aspect_member .   (rule 144)

    $default	reduce using rule 144 (aspect_members)



state 864

    class_info  ->  VI_class name opt_extention opt_class_attribs Decimal_num String_lit '{' EOL @1 . opt_class_members '}' EOL   (rule 121)

    VI_function	shift, and go to state 18
    VI_variable	shift, and go to state 25

    $default	reduce using rule 135 (opt_class_members)

    variable_dcl	go to state 908
    function_info	go to state 909
    opt_class_members	go to state 910
    class_members	go to state 911
    class_member	go to state 912



state 865

    function_info  ->  VI_function Decimal_num opt_func_options data_type name Decimal_num String_lit '(' EOL . opt_arguments ')' EOL   (rule 85)

    VI_formal	shift, and go to state 631
    VI_var	shift, and go to state 222
    '[' 	shift, and go to state 632
    '(' 	shift, and go to state 633
    '?' 	shift, and go to state 634

    ')' 	reduce using rule 98 (opt_arguments)
    $default	reduce using rule 108 (opt_var)

    opt_arguments	go to state 913
    arguments	go to state 636
    argument	go to state 637
    opt_var	go to state 638



state 866

    opt_flags  ->  VI_clone VI_static .   (rule 330)

    $default	reduce using rule 330 (opt_flags)



state 867

    opt_flags  ->  VI_static VI_clone .   (rule 329)

    $default	reduce using rule 329 (opt_flags)



state 868

    vinst  ->  VI_alloc Decimal_num data_type name array_range opt_flags EOL .   (rule 173)

    $default	reduce using rule 173 (vinst)



state 869

    vinst  ->  VI_alloc_static name name Decimal_num data_type name array_range . opt_flags EOL   (rule 174)

    VI_clone	shift, and go to state 816
    VI_static	shift, and go to state 817

    $default	reduce using rule 326 (opt_flags)

    opt_flags	go to state 914



state 870

    ttype  ->  '(' type_code ',' type_code ',' type_code . ')'   (rule 325)

    ')' 	shift, and go to state 915



state 871

    opt_bit_type  ->  VI_i_endian '[' Decimal_num ':' Decimal_num ']' .   (rule 363)

    $default	reduce using rule 363 (opt_bit_type)



state 872

    opt_bit_type  ->  VI_nz_lsb '[' Decimal_num ':' Decimal_num ']' .   (rule 364)

    $default	reduce using rule 364 (opt_bit_type)



state 873

    vinst  ->  VI_loadm opt_array_access opt_static opt_var name name EOL .   (rule 273)

    $default	reduce using rule 273 (vinst)



state 874

    vinst  ->  VI_lvar Decimal_num data_type name array_range opt_flags EOL .   (rule 166)

    $default	reduce using rule 166 (vinst)



state 875

    vinst  ->  VI_lvar VI_static Decimal_num data_type name name name . array_range opt_flags EOL   (rule 167)

    VI_array	shift, and go to state 624
    VI_assoc	shift, and go to state 625
    VI_list	shift, and go to state 626
    VI_marray	shift, and go to state 627
    VI_single	shift, and go to state 628
    VI_stridx	shift, and go to state 629

    array_range	go to state 916



state 876

    vinst  ->  VI_store_port VI_subbit opt_bit_type dtype strength name EOL .   (rule 293)

    $default	reduce using rule 293 (vinst)



state 877

    vinst  ->  VI_store_pset_port VI_subbit opt_bit_type dtype strength name name . EOL   (rule 295)

    EOL 	shift, and go to state 917



state 878

    vinst  ->  VI_store_sig_g opt_array_access opt_static VI_subbit opt_bit_type dtype strength . name EOL   (rule 300)

    Name	shift, and go to state 51

    name	go to state 918



state 879

    vinst  ->  VI_store_sig_g opt_array_access opt_static dtype strength name EOL .   (rule 297)

    $default	reduce using rule 297 (vinst)



state 880

    vinst  ->  VI_store_sig_l opt_array_access opt_static VI_subbit opt_bit_type dtype strength . Decimal_num EOL   (rule 299)

    Decimal_num	shift, and go to state 919



state 881

    vinst  ->  VI_store_sig_l opt_array_access opt_static dtype strength Decimal_num EOL .   (rule 296)

    $default	reduce using rule 296 (vinst)



state 882

    vinst  ->  VI_store_sig_m opt_array_access opt_static VI_subbit opt_bit_type dtype strength . name name EOL   (rule 301)

    Name	shift, and go to state 51

    name	go to state 920



state 883

    vinst  ->  VI_store_sig_m opt_array_access opt_static dtype strength name name . EOL   (rule 298)

    EOL 	shift, and go to state 921



state 884

    vinst  ->  VI_store_sig_static opt_array_access VI_subbit opt_bit_type dtype strength name . name name EOL   (rule 305)

    Name	shift, and go to state 51

    name	go to state 922



state 885

    vinst  ->  VI_store_sig_static opt_array_access dtype strength name name name . EOL   (rule 303)

    EOL 	shift, and go to state 923



state 886

    vinst  ->  VI_store_static opt_array_access VI_subbit opt_bit_type dtype name name . name EOL   (rule 304)

    Name	shift, and go to state 51

    name	go to state 924



state 887

    vinst  ->  VI_store_static opt_array_access dtype name name name EOL .   (rule 302)

    $default	reduce using rule 302 (vinst)



state 888

    vinst  ->  VI_storeg opt_array_access opt_static VI_subbit opt_bit_type dtype name . EOL   (rule 289)

    EOL 	shift, and go to state 925



state 889

    vinst  ->  VI_storel opt_array_access opt_static VI_subbit opt_bit_type dtype Decimal_num . EOL   (rule 287)

    EOL 	shift, and go to state 926



state 890

    vinst  ->  VI_storem opt_array_access opt_static VI_subbit opt_bit_type dtype name . name EOL   (rule 291)

    Name	shift, and go to state 51

    name	go to state 927



state 891

    vinst  ->  VI_storem opt_array_access opt_static dtype name name EOL .   (rule 290)

    $default	reduce using rule 290 (vinst)



state 892

    vinst  ->  opt_var VI_arg Decimal_num Decimal_num data_type name array_range . opt_flags EOL   (rule 175)

    VI_clone	shift, and go to state 816
    VI_static	shift, and go to state 817

    $default	reduce using rule 326 (opt_flags)

    opt_flags	go to state 928



state 893

    port_attrib  ->  VI_depth . Decimal_num   (rule 39)

    Decimal_num	shift, and go to state 929



state 894

    port_attrib  ->  VI_drive . edge VI_skew int_value   (rule 38)

    VI_bothedge	shift, and go to state 593
    VI_negedge	shift, and go to state 594
    VI_noedge	shift, and go to state 595
    VI_posedge	shift, and go to state 596

    edge	go to state 930



state 895

    port_attrib  ->  VI_path . String_lit   (rule 40)

    String_lit	shift, and go to state 931



state 896

    port_attrib  ->  VI_sample . edge VI_skew int_value   (rule 37)

    VI_bothedge	shift, and go to state 593
    VI_negedge	shift, and go to state 594
    VI_noedge	shift, and go to state 595
    VI_posedge	shift, and go to state 596

    edge	go to state 932



state 897

    port_attrib  ->  '@' . name   (rule 41)
    port_attrib  ->  '@' . name '.' name   (rule 42)

    Name	shift, and go to state 51

    name	go to state 933



state 898

    port_info  ->  VI_port direction '[' Decimal_num ':' Decimal_num ']' name opt_port_attrib . EOL   (rule 29)

    EOL 	shift, and go to state 934



state 899

    opt_port_attrib  ->  port_attribs .   (rule 34)
    port_attribs  ->  port_attribs . port_attrib   (rule 36)

    VI_depth	shift, and go to state 893
    VI_drive	shift, and go to state 894
    VI_path	shift, and go to state 895
    VI_sample	shift, and go to state 896
    '@' 	shift, and go to state 897

    $default	reduce using rule 34 (opt_port_attrib)

    port_attrib	go to state 935



state 900

    port_attribs  ->  port_attrib .   (rule 35)

    $default	reduce using rule 35 (port_attribs)



state 901

    array_range  ->  VI_marray Decimal_num '(' range_list ')' .   (rule 65)

    $default	reduce using rule 65 (array_range)



state 902

    argument  ->  '[' EOL argument ']' EOL .   (rule 107)

    $default	reduce using rule 107 (argument)



state 903

    argument  ->  '(' EOL argument ')' '*' . EOL   (rule 104)

    EOL 	shift, and go to state 936



state 904

    argument  ->  '(' EOL argument ')' '+' . EOL   (rule 106)

    EOL 	shift, and go to state 937



state 905

    argument  ->  opt_var data_type name array_range EOL .   (rule 102)

    $default	reduce using rule 102 (argument)



state 906

    advice_info  ->  VI_advice Decimal_num opt_func_options . data_type name Decimal_num String_lit EOL pointcuts '(' EOL opt_arguments ')' EOL   (rule 119)

    VI_bit	shift, and go to state 237
    VI_class	shift, and go to state 238
    VI_class_type	shift, and go to state 239
    VI_double	shift, and go to state 240
    VI_enum	shift, and go to state 241
    VI_float	shift, and go to state 242
    VI_int	shift, and go to state 243
    VI_long	shift, and go to state 244
    VI_signal	shift, and go to state 245
    VI_string	shift, and go to state 246
    VI_sys_class	shift, and go to state 247
    VI_void	shift, and go to state 248

    data_type	go to state 938



state 907

    aspect_info  ->  VI_aspect name Decimal_num String_lit '{' EOL @2 opt_aspect_members '}' EOL .   (rule 123)

    $default	reduce using rule 123 (aspect_info)



state 908

    class_member  ->  variable_dcl .   (rule 139)

    $default	reduce using rule 139 (class_member)



state 909

    class_member  ->  function_info .   (rule 140)

    $default	reduce using rule 140 (class_member)



state 910

    class_info  ->  VI_class name opt_extention opt_class_attribs Decimal_num String_lit '{' EOL @1 opt_class_members . '}' EOL   (rule 121)

    '}' 	shift, and go to state 939



state 911

    opt_class_members  ->  class_members .   (rule 136)
    class_members  ->  class_members . class_member   (rule 138)

    VI_function	shift, and go to state 18
    VI_variable	shift, and go to state 25

    $default	reduce using rule 136 (opt_class_members)

    variable_dcl	go to state 908
    function_info	go to state 909
    class_member	go to state 940



state 912

    class_members  ->  class_member .   (rule 137)

    $default	reduce using rule 137 (class_members)



state 913

    function_info  ->  VI_function Decimal_num opt_func_options data_type name Decimal_num String_lit '(' EOL opt_arguments . ')' EOL   (rule 85)

    ')' 	shift, and go to state 941



state 914

    vinst  ->  VI_alloc_static name name Decimal_num data_type name array_range opt_flags . EOL   (rule 174)

    EOL 	shift, and go to state 942



state 915

    ttype  ->  '(' type_code ',' type_code ',' type_code ')' .   (rule 325)

    $default	reduce using rule 325 (ttype)



state 916

    vinst  ->  VI_lvar VI_static Decimal_num data_type name name name array_range . opt_flags EOL   (rule 167)

    VI_clone	shift, and go to state 816
    VI_static	shift, and go to state 817

    $default	reduce using rule 326 (opt_flags)

    opt_flags	go to state 943



state 917

    vinst  ->  VI_store_pset_port VI_subbit opt_bit_type dtype strength name name EOL .   (rule 295)

    $default	reduce using rule 295 (vinst)



state 918

    vinst  ->  VI_store_sig_g opt_array_access opt_static VI_subbit opt_bit_type dtype strength name . EOL   (rule 300)

    EOL 	shift, and go to state 944



state 919

    vinst  ->  VI_store_sig_l opt_array_access opt_static VI_subbit opt_bit_type dtype strength Decimal_num . EOL   (rule 299)

    EOL 	shift, and go to state 945



state 920

    vinst  ->  VI_store_sig_m opt_array_access opt_static VI_subbit opt_bit_type dtype strength name . name EOL   (rule 301)

    Name	shift, and go to state 51

    name	go to state 946



state 921

    vinst  ->  VI_store_sig_m opt_array_access opt_static dtype strength name name EOL .   (rule 298)

    $default	reduce using rule 298 (vinst)



state 922

    vinst  ->  VI_store_sig_static opt_array_access VI_subbit opt_bit_type dtype strength name name . name EOL   (rule 305)

    Name	shift, and go to state 51

    name	go to state 947



state 923

    vinst  ->  VI_store_sig_static opt_array_access dtype strength name name name EOL .   (rule 303)

    $default	reduce using rule 303 (vinst)



state 924

    vinst  ->  VI_store_static opt_array_access VI_subbit opt_bit_type dtype name name name . EOL   (rule 304)

    EOL 	shift, and go to state 948



state 925

    vinst  ->  VI_storeg opt_array_access opt_static VI_subbit opt_bit_type dtype name EOL .   (rule 289)

    $default	reduce using rule 289 (vinst)



state 926

    vinst  ->  VI_storel opt_array_access opt_static VI_subbit opt_bit_type dtype Decimal_num EOL .   (rule 287)

    $default	reduce using rule 287 (vinst)



state 927

    vinst  ->  VI_storem opt_array_access opt_static VI_subbit opt_bit_type dtype name name . EOL   (rule 291)

    EOL 	shift, and go to state 949



state 928

    vinst  ->  opt_var VI_arg Decimal_num Decimal_num data_type name array_range opt_flags . EOL   (rule 175)

    EOL 	shift, and go to state 950



state 929

    port_attrib  ->  VI_depth Decimal_num .   (rule 39)

    $default	reduce using rule 39 (port_attrib)



state 930

    port_attrib  ->  VI_drive edge . VI_skew int_value   (rule 38)

    VI_skew	shift, and go to state 951



state 931

    port_attrib  ->  VI_path String_lit .   (rule 40)

    $default	reduce using rule 40 (port_attrib)



state 932

    port_attrib  ->  VI_sample edge . VI_skew int_value   (rule 37)

    VI_skew	shift, and go to state 952



state 933

    port_attrib  ->  '@' name .   (rule 41)
    port_attrib  ->  '@' name . '.' name   (rule 42)

    '.' 	shift, and go to state 953

    $default	reduce using rule 41 (port_attrib)



state 934

    port_info  ->  VI_port direction '[' Decimal_num ':' Decimal_num ']' name opt_port_attrib EOL .   (rule 29)

    $default	reduce using rule 29 (port_info)



state 935

    port_attribs  ->  port_attribs port_attrib .   (rule 36)

    $default	reduce using rule 36 (port_attribs)



state 936

    argument  ->  '(' EOL argument ')' '*' EOL .   (rule 104)

    $default	reduce using rule 104 (argument)



state 937

    argument  ->  '(' EOL argument ')' '+' EOL .   (rule 106)

    $default	reduce using rule 106 (argument)



state 938

    advice_info  ->  VI_advice Decimal_num opt_func_options data_type . name Decimal_num String_lit EOL pointcuts '(' EOL opt_arguments ')' EOL   (rule 119)

    Name	shift, and go to state 51

    name	go to state 954



state 939

    class_info  ->  VI_class name opt_extention opt_class_attribs Decimal_num String_lit '{' EOL @1 opt_class_members '}' . EOL   (rule 121)

    EOL 	shift, and go to state 955



state 940

    class_members  ->  class_members class_member .   (rule 138)

    $default	reduce using rule 138 (class_members)



state 941

    function_info  ->  VI_function Decimal_num opt_func_options data_type name Decimal_num String_lit '(' EOL opt_arguments ')' . EOL   (rule 85)

    EOL 	shift, and go to state 956



state 942

    vinst  ->  VI_alloc_static name name Decimal_num data_type name array_range opt_flags EOL .   (rule 174)

    $default	reduce using rule 174 (vinst)



state 943

    vinst  ->  VI_lvar VI_static Decimal_num data_type name name name array_range opt_flags . EOL   (rule 167)

    EOL 	shift, and go to state 957



state 944

    vinst  ->  VI_store_sig_g opt_array_access opt_static VI_subbit opt_bit_type dtype strength name EOL .   (rule 300)

    $default	reduce using rule 300 (vinst)



state 945

    vinst  ->  VI_store_sig_l opt_array_access opt_static VI_subbit opt_bit_type dtype strength Decimal_num EOL .   (rule 299)

    $default	reduce using rule 299 (vinst)



state 946

    vinst  ->  VI_store_sig_m opt_array_access opt_static VI_subbit opt_bit_type dtype strength name name . EOL   (rule 301)

    EOL 	shift, and go to state 958



state 947

    vinst  ->  VI_store_sig_static opt_array_access VI_subbit opt_bit_type dtype strength name name name . EOL   (rule 305)

    EOL 	shift, and go to state 959



state 948

    vinst  ->  VI_store_static opt_array_access VI_subbit opt_bit_type dtype name name name EOL .   (rule 304)

    $default	reduce using rule 304 (vinst)



state 949

    vinst  ->  VI_storem opt_array_access opt_static VI_subbit opt_bit_type dtype name name EOL .   (rule 291)

    $default	reduce using rule 291 (vinst)



state 950

    vinst  ->  opt_var VI_arg Decimal_num Decimal_num data_type name array_range opt_flags EOL .   (rule 175)

    $default	reduce using rule 175 (vinst)



state 951

    port_attrib  ->  VI_drive edge VI_skew . int_value   (rule 38)

    Decimal_num	shift, and go to state 960
    '-' 	shift, and go to state 961

    int_value	go to state 962



state 952

    port_attrib  ->  VI_sample edge VI_skew . int_value   (rule 37)

    Decimal_num	shift, and go to state 960
    '-' 	shift, and go to state 961

    int_value	go to state 963



state 953

    port_attrib  ->  '@' name '.' . name   (rule 42)

    Name	shift, and go to state 51

    name	go to state 964



state 954

    advice_info  ->  VI_advice Decimal_num opt_func_options data_type name . Decimal_num String_lit EOL pointcuts '(' EOL opt_arguments ')' EOL   (rule 119)

    Decimal_num	shift, and go to state 965



state 955

    class_info  ->  VI_class name opt_extention opt_class_attribs Decimal_num String_lit '{' EOL @1 opt_class_members '}' EOL .   (rule 121)

    $default	reduce using rule 121 (class_info)



state 956

    function_info  ->  VI_function Decimal_num opt_func_options data_type name Decimal_num String_lit '(' EOL opt_arguments ')' EOL .   (rule 85)

    $default	reduce using rule 85 (function_info)



state 957

    vinst  ->  VI_lvar VI_static Decimal_num data_type name name name array_range opt_flags EOL .   (rule 167)

    $default	reduce using rule 167 (vinst)



state 958

    vinst  ->  VI_store_sig_m opt_array_access opt_static VI_subbit opt_bit_type dtype strength name name EOL .   (rule 301)

    $default	reduce using rule 301 (vinst)



state 959

    vinst  ->  VI_store_sig_static opt_array_access VI_subbit opt_bit_type dtype strength name name name EOL .   (rule 305)

    $default	reduce using rule 305 (vinst)



state 960

    int_value  ->  Decimal_num .   (rule 43)

    $default	reduce using rule 43 (int_value)



state 961

    int_value  ->  '-' . Decimal_num   (rule 44)

    Decimal_num	shift, and go to state 966



state 962

    port_attrib  ->  VI_drive edge VI_skew int_value .   (rule 38)

    $default	reduce using rule 38 (port_attrib)



state 963

    port_attrib  ->  VI_sample edge VI_skew int_value .   (rule 37)

    $default	reduce using rule 37 (port_attrib)



state 964

    port_attrib  ->  '@' name '.' name .   (rule 42)

    $default	reduce using rule 42 (port_attrib)



state 965

    advice_info  ->  VI_advice Decimal_num opt_func_options data_type name Decimal_num . String_lit EOL pointcuts '(' EOL opt_arguments ')' EOL   (rule 119)

    String_lit	shift, and go to state 967



state 966

    int_value  ->  '-' Decimal_num .   (rule 44)

    $default	reduce using rule 44 (int_value)



state 967

    advice_info  ->  VI_advice Decimal_num opt_func_options data_type name Decimal_num String_lit . EOL pointcuts '(' EOL opt_arguments ')' EOL   (rule 119)

    EOL 	shift, and go to state 968



state 968

    advice_info  ->  VI_advice Decimal_num opt_func_options data_type name Decimal_num String_lit EOL . pointcuts '(' EOL opt_arguments ')' EOL   (rule 119)

    VI_call	shift, and go to state 969
    VI_overwrite	shift, and go to state 970
    VI_return	shift, and go to state 971

    pointcuts	go to state 972
    pointcut	go to state 973



state 969

    pointcut  ->  VI_call . '(' pointcut_names ')' EOL   (rule 112)

    '(' 	shift, and go to state 974



state 970

    pointcut  ->  VI_overwrite . '(' pointcut_names ')' EOL   (rule 114)

    '(' 	shift, and go to state 975



state 971

    pointcut  ->  VI_return . '(' pointcut_names ')' EOL   (rule 113)

    '(' 	shift, and go to state 976



state 972

    pointcuts  ->  pointcuts . pointcut   (rule 111)
    advice_info  ->  VI_advice Decimal_num opt_func_options data_type name Decimal_num String_lit EOL pointcuts . '(' EOL opt_arguments ')' EOL   (rule 119)

    VI_call	shift, and go to state 969
    VI_overwrite	shift, and go to state 970
    VI_return	shift, and go to state 971
    '(' 	shift, and go to state 977

    pointcut	go to state 978



state 973

    pointcuts  ->  pointcut .   (rule 110)

    $default	reduce using rule 110 (pointcuts)



state 974

    pointcut  ->  VI_call '(' . pointcut_names ')' EOL   (rule 112)

    Name	shift, and go to state 51
    String_lit	shift, and go to state 979

    pointcut_names	go to state 980
    pointcut_name	go to state 981
    name	go to state 982



state 975

    pointcut  ->  VI_overwrite '(' . pointcut_names ')' EOL   (rule 114)

    Name	shift, and go to state 51
    String_lit	shift, and go to state 979

    pointcut_names	go to state 983
    pointcut_name	go to state 981
    name	go to state 982



state 976

    pointcut  ->  VI_return '(' . pointcut_names ')' EOL   (rule 113)

    Name	shift, and go to state 51
    String_lit	shift, and go to state 979

    pointcut_names	go to state 984
    pointcut_name	go to state 981
    name	go to state 982



state 977

    advice_info  ->  VI_advice Decimal_num opt_func_options data_type name Decimal_num String_lit EOL pointcuts '(' . EOL opt_arguments ')' EOL   (rule 119)

    EOL 	shift, and go to state 985



state 978

    pointcuts  ->  pointcuts pointcut .   (rule 111)

    $default	reduce using rule 111 (pointcuts)



state 979

    pointcut_name  ->  String_lit .   (rule 118)

    $default	reduce using rule 118 (pointcut_name)



state 980

    pointcut  ->  VI_call '(' pointcut_names . ')' EOL   (rule 112)
    pointcut_names  ->  pointcut_names . pointcut_name   (rule 116)

    Name	shift, and go to state 51
    String_lit	shift, and go to state 979
    ')' 	shift, and go to state 986

    pointcut_name	go to state 987
    name	go to state 982



state 981

    pointcut_names  ->  pointcut_name .   (rule 115)

    $default	reduce using rule 115 (pointcut_names)



state 982

    pointcut_name  ->  name .   (rule 117)

    $default	reduce using rule 117 (pointcut_name)



state 983

    pointcut  ->  VI_overwrite '(' pointcut_names . ')' EOL   (rule 114)
    pointcut_names  ->  pointcut_names . pointcut_name   (rule 116)

    Name	shift, and go to state 51
    String_lit	shift, and go to state 979
    ')' 	shift, and go to state 988

    pointcut_name	go to state 987
    name	go to state 982



state 984

    pointcut  ->  VI_return '(' pointcut_names . ')' EOL   (rule 113)
    pointcut_names  ->  pointcut_names . pointcut_name   (rule 116)

    Name	shift, and go to state 51
    String_lit	shift, and go to state 979
    ')' 	shift, and go to state 989

    pointcut_name	go to state 987
    name	go to state 982



state 985

    advice_info  ->  VI_advice Decimal_num opt_func_options data_type name Decimal_num String_lit EOL pointcuts '(' EOL . opt_arguments ')' EOL   (rule 119)

    VI_formal	shift, and go to state 631
    VI_var	shift, and go to state 222
    '[' 	shift, and go to state 632
    '(' 	shift, and go to state 633
    '?' 	shift, and go to state 634

    ')' 	reduce using rule 98 (opt_arguments)
    $default	reduce using rule 108 (opt_var)

    opt_arguments	go to state 990
    arguments	go to state 636
    argument	go to state 637
    opt_var	go to state 638



state 986

    pointcut  ->  VI_call '(' pointcut_names ')' . EOL   (rule 112)

    EOL 	shift, and go to state 991



state 987

    pointcut_names  ->  pointcut_names pointcut_name .   (rule 116)

    $default	reduce using rule 116 (pointcut_names)



state 988

    pointcut  ->  VI_overwrite '(' pointcut_names ')' . EOL   (rule 114)

    EOL 	shift, and go to state 992



state 989

    pointcut  ->  VI_return '(' pointcut_names ')' . EOL   (rule 113)

    EOL 	shift, and go to state 993



state 990

    advice_info  ->  VI_advice Decimal_num opt_func_options data_type name Decimal_num String_lit EOL pointcuts '(' EOL opt_arguments . ')' EOL   (rule 119)

    ')' 	shift, and go to state 994



state 991

    pointcut  ->  VI_call '(' pointcut_names ')' EOL .   (rule 112)

    $default	reduce using rule 112 (pointcut)



state 992

    pointcut  ->  VI_overwrite '(' pointcut_names ')' EOL .   (rule 114)

    $default	reduce using rule 114 (pointcut)



state 993

    pointcut  ->  VI_return '(' pointcut_names ')' EOL .   (rule 113)

    $default	reduce using rule 113 (pointcut)



state 994

    advice_info  ->  VI_advice Decimal_num opt_func_options data_type name Decimal_num String_lit EOL pointcuts '(' EOL opt_arguments ')' . EOL   (rule 119)

    EOL 	shift, and go to state 995



state 995

    advice_info  ->  VI_advice Decimal_num opt_func_options data_type name Decimal_num String_lit EOL pointcuts '(' EOL opt_arguments ')' EOL .   (rule 119)

    $default	reduce using rule 119 (advice_info)



state 996

    $   	go to state 997



state 997

    $default	accept
