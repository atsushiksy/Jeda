/********************************************/
/* macro generated by gen_code_out_macro_prod.pl */
/********************************************/
#  define CALL_PUSH_TMP_DT  JD_push_tmp_dt()
#define OUT_PUSH_TMP_DT \
    OUT0( "JD_push_tmp_dt() ;\n" ) ; 
#  define CALL_ALLOC_DT_SINGLE_INT  JD_alloc_single_int()
#define OUT_ALLOC_DT_SINGLE_INT \
    OUT0( "JD_alloc_single_int() ;\n" ) ; 
#  define CALL_ALLOC_DT_SINGLE_BIT  JD_alloc_single_bit()
#define OUT_ALLOC_DT_SINGLE_BIT \
    OUT0( "JD_alloc_single_bit() ;\n" ) ; 
#  define CALL_ALLOC_DT_SINGLE_FLOAT  JD_alloc_single_float()
#define OUT_ALLOC_DT_SINGLE_FLOAT \
    OUT0( "JD_alloc_single_float() ;\n" ) ; 
#  define CALL_ALLOC_DT_SINGLE_DOUBLE  JD_alloc_single_double()
#define OUT_ALLOC_DT_SINGLE_DOUBLE \
    OUT0( "JD_alloc_single_double() ;\n" ) ; 
#  define CALL_ALLOC_DT_SINGLE_STRING  JD_alloc_single_string()
#define OUT_ALLOC_DT_SINGLE_STRING \
    OUT0( "JD_alloc_single_string() ;\n" ) ; 
#  define CALL_ALLOC_DT_SINGLE_SIGNAL  JD_alloc_single_signal()
#define OUT_ALLOC_DT_SINGLE_SIGNAL \
    OUT0( "JD_alloc_single_signal() ;\n" ) ; 
#  define CALL_ALLOC_DT_SINGLE_OBJ  JD_alloc_single_obj()
#define OUT_ALLOC_DT_SINGLE_OBJ \
    OUT0( "JD_alloc_single_obj() ;\n" ) ; 
#  define CALL_ALLOC_DT_SINGLE_THREAD  JD_alloc_single_thread()
#define OUT_ALLOC_DT_SINGLE_THREAD \
    OUT0( "JD_alloc_single_thread() ;\n" ) ; 
#  define CALL_ALLOC_DT_ARRAY_INT  JD_alloc_array_int()
#define OUT_ALLOC_DT_ARRAY_INT \
    OUT0( "JD_alloc_array_int() ;\n" ) ; 
#  define CALL_ALLOC_DT_ARRAY_BIT  JD_alloc_array_bit()
#define OUT_ALLOC_DT_ARRAY_BIT \
    OUT0( "JD_alloc_array_bit() ;\n" ) ; 
#  define CALL_ALLOC_DT_ARRAY_FLOAT  JD_alloc_array_float()
#define OUT_ALLOC_DT_ARRAY_FLOAT \
    OUT0( "JD_alloc_array_float() ;\n" ) ; 
#  define CALL_ALLOC_DT_ARRAY_DOUBLE  JD_alloc_array_double()
#define OUT_ALLOC_DT_ARRAY_DOUBLE \
    OUT0( "JD_alloc_array_double() ;\n" ) ; 
#  define CALL_ALLOC_DT_ARRAY_STRING  JD_alloc_array_string()
#define OUT_ALLOC_DT_ARRAY_STRING \
    OUT0( "JD_alloc_array_string() ;\n" ) ; 
#  define CALL_ALLOC_DT_ARRAY_SIGNAL  JD_alloc_array_signal()
#define OUT_ALLOC_DT_ARRAY_SIGNAL \
    OUT0( "JD_alloc_array_signal() ;\n" ) ; 
#  define CALL_ALLOC_DT_ARRAY_OBJ  JD_alloc_array_obj()
#define OUT_ALLOC_DT_ARRAY_OBJ \
    OUT0( "JD_alloc_array_obj() ;\n" ) ; 
#  define CALL_ALLOC_DT_ARRAY_THREAD  JD_alloc_array_thread()
#define OUT_ALLOC_DT_ARRAY_THREAD \
    OUT0( "JD_alloc_array_thread() ;\n" ) ; 
#  define CALL_ALLOC_MARRAY_DIM  JD_alloc_marray_dim()
#define OUT_ALLOC_MARRAY_DIM \
    OUT0( "JD_alloc_marray_dim() ;\n" ) ; 
#  define CALL_SET_MARRAY_DIM  JD_set_marray_dim()
#define OUT_SET_MARRAY_DIM \
    OUT0( "JD_set_marray_dim() ;\n" ) ; 
#  define CALL_ALLOC_DT_ASSOC_INT  JD_alloc_assoc_int()
#define OUT_ALLOC_DT_ASSOC_INT \
    OUT0( "JD_alloc_assoc_int() ;\n" ) ; 
#  define CALL_ALLOC_DT_ASSOC_BIT  JD_alloc_assoc_bit()
#define OUT_ALLOC_DT_ASSOC_BIT \
    OUT0( "JD_alloc_assoc_bit() ;\n" ) ; 
#  define CALL_ALLOC_DT_ASSOC_FLOAT  JD_alloc_assoc_float()
#define OUT_ALLOC_DT_ASSOC_FLOAT \
    OUT0( "JD_alloc_assoc_float() ;\n" ) ; 
#  define CALL_ALLOC_DT_ASSOC_DOUBLE  JD_alloc_assoc_double()
#define OUT_ALLOC_DT_ASSOC_DOUBLE \
    OUT0( "JD_alloc_assoc_double() ;\n" ) ; 
#  define CALL_ALLOC_DT_ASSOC_STRING  JD_alloc_assoc_string()
#define OUT_ALLOC_DT_ASSOC_STRING \
    OUT0( "JD_alloc_assoc_string() ;\n" ) ; 
#  define CALL_ALLOC_DT_ASSOC_SIGNAL  JD_alloc_assoc_signal()
#define OUT_ALLOC_DT_ASSOC_SIGNAL \
    OUT0( "JD_alloc_assoc_signal() ;\n" ) ; 
#  define CALL_ALLOC_DT_ASSOC_OBJ  JD_alloc_assoc_obj()
#define OUT_ALLOC_DT_ASSOC_OBJ \
    OUT0( "JD_alloc_assoc_obj() ;\n" ) ; 
#  define CALL_ALLOC_DT_ASSOC_THREAD  JD_alloc_assoc_thread()
#define OUT_ALLOC_DT_ASSOC_THREAD \
    OUT0( "JD_alloc_assoc_thread() ;\n" ) ; 
#  define CALL_ALLOC_DT_STRIDED_INT  JD_alloc_strided_int()
#define OUT_ALLOC_DT_STRIDED_INT \
    OUT0( "JD_alloc_strided_int() ;\n" ) ; 
#  define CALL_ALLOC_DT_STRIDED_BIT  JD_alloc_strided_bit()
#define OUT_ALLOC_DT_STRIDED_BIT \
    OUT0( "JD_alloc_strided_bit() ;\n" ) ; 
#  define CALL_ALLOC_DT_STRIDED_FLOAT  JD_alloc_strided_float()
#define OUT_ALLOC_DT_STRIDED_FLOAT \
    OUT0( "JD_alloc_strided_float() ;\n" ) ; 
#  define CALL_ALLOC_DT_STRIDED_DOUBLE  JD_alloc_strided_double()
#define OUT_ALLOC_DT_STRIDED_DOUBLE \
    OUT0( "JD_alloc_strided_double() ;\n" ) ; 
#  define CALL_ALLOC_DT_STRIDED_STRING  JD_alloc_strided_string()
#define OUT_ALLOC_DT_STRIDED_STRING \
    OUT0( "JD_alloc_strided_string() ;\n" ) ; 
#  define CALL_ALLOC_DT_STRIDED_SIGNAL  JD_alloc_strided_signal()
#define OUT_ALLOC_DT_STRIDED_SIGNAL \
    OUT0( "JD_alloc_strided_signal() ;\n" ) ; 
#  define CALL_ALLOC_DT_STRIDED_OBJ  JD_alloc_strided_obj()
#define OUT_ALLOC_DT_STRIDED_OBJ \
    OUT0( "JD_alloc_strided_obj() ;\n" ) ; 
#  define CALL_ALLOC_DT_STRIDED_THREAD  JD_alloc_strided_thread()
#define OUT_ALLOC_DT_STRIDED_THREAD \
    OUT0( "JD_alloc_strided_thread() ;\n" ) ; 
#  define CALL_ALLOC_DT_LIST_INT  JD_alloc_list_int()
#define OUT_ALLOC_DT_LIST_INT \
    OUT0( "JD_alloc_list_int() ;\n" ) ; 
#  define CALL_ALLOC_DT_LIST_BIT  JD_alloc_list_bit()
#define OUT_ALLOC_DT_LIST_BIT \
    OUT0( "JD_alloc_list_bit() ;\n" ) ; 
#  define CALL_ALLOC_DT_LIST_FLOAT  JD_alloc_list_float()
#define OUT_ALLOC_DT_LIST_FLOAT \
    OUT0( "JD_alloc_list_float() ;\n" ) ; 
#  define CALL_ALLOC_DT_LIST_DOUBLE  JD_alloc_list_double()
#define OUT_ALLOC_DT_LIST_DOUBLE \
    OUT0( "JD_alloc_list_double() ;\n" ) ; 
#  define CALL_ALLOC_DT_LIST_STRING  JD_alloc_list_string()
#define OUT_ALLOC_DT_LIST_STRING \
    OUT0( "JD_alloc_list_string() ;\n" ) ; 
#  define CALL_ALLOC_DT_LIST_SIGNAL  JD_alloc_list_signal()
#define OUT_ALLOC_DT_LIST_SIGNAL \
    OUT0( "JD_alloc_list_signal() ;\n" ) ; 
#  define CALL_ALLOC_DT_LIST_OBJ  JD_alloc_list_obj()
#define OUT_ALLOC_DT_LIST_OBJ \
    OUT0( "JD_alloc_list_obj() ;\n" ) ; 
#  define CALL_ALLOC_DT_LIST_THREAD  JD_alloc_list_thread()
#define OUT_ALLOC_DT_LIST_THREAD \
    OUT0( "JD_alloc_list_thread() ;\n" ) ; 
