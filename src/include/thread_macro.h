/********************************************/
/* macro generated by gen_code_out_macro_prod.pl */
/********************************************/
#  define CALL_EXEC_FORK  JD_exec_fork()
#define OUT_EXEC_FORK \
    OUT0( "JD_exec_fork() ;\n" ) ; 
#  define CALL_EXEC_EXEC  JD_exec_exec()
#define OUT_EXEC_EXEC \
    OUT0( "JD_exec_exec() ;\n" ) ; 
#  define CALL_EXEC_EXIT  JD_exec_exit()
#define OUT_EXEC_EXIT \
    OUT0( "JD_exec_exit() ;\n" ) ; 
#  define CALL_EXEC_EXIT_P_AND  JD_exec_exit_p_and()
#define OUT_EXEC_EXIT_P_AND \
    OUT0( "JD_exec_exit_p_and() ;\n" ) ; 
#  define CALL_EXEC_EXIT_P_OR  JD_exec_exit_p_or()
#define OUT_EXEC_EXIT_P_OR \
    OUT0( "JD_exec_exit_p_or() ;\n" ) ; 
#  define CALL_EXEC_JOIN  JD_exec_join()
#define OUT_EXEC_JOIN \
    OUT0( "JD_exec_join() ;\n" ) ; 
#  define CALL_EXEC_SPOON  JD_exec_spoon()
#define OUT_EXEC_SPOON \
    OUT0( "JD_exec_spoon() ;\n" ) ; 
#  define CALL_EXEC_KNIFE  JD_exec_knife()
#define OUT_EXEC_KNIFE \
    OUT0( "JD_exec_knife() ;\n" ) ; 
#  define CALL_EXEC_TERMINATE  JD_exec_terminate()
#define OUT_EXEC_TERMINATE \
    OUT0( "JD_exec_terminate() ;\n" ) ; 
